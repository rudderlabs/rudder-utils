declare const is: <P, U>(...names: (keyof P | import("./styledIs").StyleDefinition<U>)[]) => {
    (...styles: (import("styled-components").InterpolationFunction<any> | TemplateStringsArray | import("styled-components").CSSObject)[]): (props: Partial<P & U>) => import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
    valid: (props: Partial<P & U>) => boolean;
};
declare const isNot: <P, U>(...names: (keyof P | import("./styledIs").StyleDefinition<U>)[]) => {
    (...styles: (import("styled-components").InterpolationFunction<any> | TemplateStringsArray | import("styled-components").CSSObject)[]): (props: Partial<P & U>) => import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
    valid: (props: Partial<P & U>) => boolean;
};
declare const some: <P, U>(...names: (keyof P | import("./styledIs").StyleDefinition<U>)[]) => {
    (...styles: (import("styled-components").InterpolationFunction<any> | TemplateStringsArray | import("styled-components").CSSObject)[]): (props: Partial<P & U>) => import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
    valid: (props: Partial<P & U>) => boolean;
};
declare const someNot: <P, U>(...names: (keyof P | import("./styledIs").StyleDefinition<U>)[]) => {
    (...styles: (import("styled-components").InterpolationFunction<any> | TemplateStringsArray | import("styled-components").CSSObject)[]): (props: Partial<P & U>) => import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
    valid: (props: Partial<P & U>) => boolean;
};
export default is;
export { is, isNot, some, someNot };
