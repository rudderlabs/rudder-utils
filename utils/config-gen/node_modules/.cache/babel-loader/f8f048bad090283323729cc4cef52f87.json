{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/sourceDetails/index.tsx\";\n\nimport { ButtonSmall } from '@components/common/button';\nimport { Flex } from '@components/common/misc';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport DestinationView from './destinationsView/index';\nimport SourceView from './sourceView/index';\nimport { Container, PageTitle } from './styles';\nimport { version } from '@services/version';\n\nvar fileDownload = require('js-file-download');\n\nlet SourceDetails = (_dec = inject('sourcesListStore', 'destinationsListStore', 'messagesStore'), _dec(_class = observer(_class = (_temp = class SourceDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getStats = async () => {\n      const {\n        sourceId\n      } = this.state;\n    };\n\n    this.toggle = async val => {\n      this.setState(val);\n    };\n\n    this.deleteConnection = async (source, destination) => {\n      const {\n        destinationsListStore,\n        messagesStore\n      } = this.props;\n\n      try {\n        await destinationsListStore.rootStore.connectionsStore.removeConnections(source, destination);\n        messagesStore.showSuccessMessage('Connection deletion successful');\n      } catch (error) {\n        messagesStore.showErrorMessage('Failed to delete connection');\n      }\n    };\n\n    this.deleteSource = async source => {\n      const {\n        sourcesListStore,\n        messagesStore\n      } = this.props;\n\n      try {\n        const isSuccess = await sourcesListStore.deleteSource(source);\n\n        if (!isSuccess) {\n          throw Error('error deleting source');\n        }\n\n        messagesStore.showSuccessMessage('Source deletion successful');\n        this.props.history.push(`/home`);\n      } catch (error) {\n        messagesStore.showErrorMessage('Failed to delete source');\n      }\n    };\n\n    this.renderOverView = () => {\n      const {\n        sourceId,\n        stats,\n        overview\n      } = this.state;\n      const {\n        sourcesListStore\n      } = this.props;\n      const {\n        sources\n      } = sourcesListStore;\n      const source = sources.find(source => source.id === sourceId);\n\n      if (source) {\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: 'm-b-lg',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(SourceView, {\n          source: source,\n          deleteSource: this.deleteSource,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: 'm-b-lg',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(DestinationView, {\n          destinations: source.destinations,\n          sourceId: source.id,\n          source: source,\n          deleteConnection: this.deleteConnection,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        })));\n      }\n\n      return null;\n    };\n\n    this.handleExportSourceConfig = () => {\n      const {\n        sourceId\n      } = this.state;\n      const {\n        sourcesListStore\n      } = this.props;\n      const {\n        sources\n      } = sourcesListStore;\n      const source = sources.find(source => source.id === sourceId);\n\n      if (source) {\n        const sourceConfig = {\n          source: {\n            config: source.config,\n            id: source.id,\n            name: source.name,\n            writeKey: source.writeKey,\n            enabled: source.enabled,\n            sourceDefinitionId: source.sourceDefinitionId,\n            deleted: false,\n            createdAt: Date(),\n            updatedAt: Date(),\n            sourceDefinition: source.sourceDef,\n            // Filter only useNativeSDK enabled destinations and\n            // includes only includeKeys (from definition) in the config\n            destinations: source.destinations.filter(dest => {\n              return dest.config ? dest.config.useNativeSDK : false;\n            }).map(dest => {\n              return {\n                id: dest.id,\n                name: dest.name,\n                enabled: dest.enabled,\n                config: dest.filteredConfig(),\n                // Very Very Important to use filterConfig instead of config\n                destinationDefinition: dest.destinationDefinition\n              };\n            })\n          },\n          metadata: {\n            version: version\n          }\n        };\n        fileDownload(JSON.stringify(sourceConfig, null, 2), `${source.name}_Source_Config.json`);\n      }\n    };\n\n    this.state = {\n      sourceId: props.match && props.match.params.id,\n      stats: [],\n      overview: true\n    };\n  }\n\n  async componentDidMount() {\n    await this.getStats();\n  }\n\n  render() {\n    const {\n      sourceId,\n      stats,\n      overview\n    } = this.state;\n    const {\n      sourcesListStore\n    } = this.props;\n    const {\n      sources\n    } = sourcesListStore;\n    const source = sources.find(source => source.id === sourceId);\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Flex, {\n      flexDirection: \"row\",\n      spaceBetween: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(PageTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Source \", overview ? 'Details' : 'Debugger'), React.createElement(\"div\", {\n      style: {\n        width: '260px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(ButtonSmall, {\n      pink: true,\n      onClick: this.handleExportSourceConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Export Source config\"))), React.createElement(Flex, {\n      flexDirection: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.renderOverView()));\n  }\n\n}, _temp)) || _class) || _class);\nexport default withRouter(SourceDetails);","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/sourceDetails/index.tsx"],"names":["ButtonSmall","Flex","inject","observer","React","Component","withRouter","DestinationView","SourceView","Container","PageTitle","version","fileDownload","require","SourceDetails","constructor","props","getStats","sourceId","state","toggle","val","setState","deleteConnection","source","destination","destinationsListStore","messagesStore","rootStore","connectionsStore","removeConnections","showSuccessMessage","error","showErrorMessage","deleteSource","sourcesListStore","isSuccess","Error","history","push","renderOverView","stats","overview","sources","find","id","destinations","handleExportSourceConfig","sourceConfig","config","name","writeKey","enabled","sourceDefinitionId","deleted","createdAt","Date","updatedAt","sourceDefinition","sourceDef","filter","dest","useNativeSDK","map","filteredConfig","destinationDefinition","metadata","JSON","stringify","match","params","componentDidMount","render","width"],"mappings":"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","sourcesContent":["import { ButtonSmall, Button } from '@components/common/button';\nimport { Flex } from '@components/common/misc';\nimport { IDestinationsListStore } from '@stores/destinationsList';\nimport { ISourcesListStore } from '@stores/sourcesList';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nimport DestinationView from './destinationsView/index';\nimport SourceView from './sourceView/index';\nimport { Container, PageTitle } from './styles';\nimport { ISourceStore } from '@stores/source';\nimport { IDestinationStore } from '@stores/destination';\nimport { IMessageStore } from '@stores/messages';\nimport { version } from '@services/version';\nvar fileDownload = require('js-file-download');\n\ninterface IConfiguredSourcesProps extends RouteComponentProps<any> {\n  sourcesListStore: ISourcesListStore;\n  destinationsListStore: IDestinationsListStore;\n  messagesStore: IMessageStore;\n}\n\n@inject('sourcesListStore', 'destinationsListStore', 'messagesStore')\n@observer\nclass SourceDetails extends Component<IConfiguredSourcesProps, any> {\n  constructor(props: IConfiguredSourcesProps) {\n    super(props);\n    this.state = {\n      sourceId: props.match && props.match.params.id,\n      stats: [],\n      overview: true,\n    };\n  }\n\n  public async componentDidMount() {\n    await this.getStats();\n  }\n\n  public getStats = async () => {\n    const { sourceId } = this.state;\n  };\n\n  public toggle = async (val: any) => {\n    this.setState(val);\n  };\n\n  deleteConnection = async (\n    source: ISourceStore,\n    destination: IDestinationStore,\n  ) => {\n    const { destinationsListStore, messagesStore } = this.props;\n    try {\n      await destinationsListStore.rootStore.connectionsStore.removeConnections(\n        source,\n        destination,\n      );\n      messagesStore.showSuccessMessage('Connection deletion successful');\n    } catch (error) {\n      messagesStore.showErrorMessage('Failed to delete connection');\n    }\n  };\n\n  deleteSource = async (source: ISourceStore) => {\n    const { sourcesListStore, messagesStore } = this.props;\n    try {\n      const isSuccess = await sourcesListStore.deleteSource(source);\n      if (!isSuccess) {\n        throw Error('error deleting source');\n      }\n      messagesStore.showSuccessMessage('Source deletion successful');\n      this.props.history.push(`/home`);\n    } catch (error) {\n      messagesStore.showErrorMessage('Failed to delete source');\n    }\n  };\n\n  public renderOverView = () => {\n    const { sourceId, stats, overview } = this.state;\n    const { sourcesListStore } = this.props;\n    const { sources } = sourcesListStore;\n    const source = sources.find(source => source.id === sourceId);\n    if (source) {\n      return (\n        <>\n          <div className={'m-b-lg'}>\n            <SourceView source={source} deleteSource={this.deleteSource} />\n          </div>\n          <div className={'m-b-lg'}>\n            <DestinationView\n              destinations={source!.destinations}\n              sourceId={source!.id}\n              source={source}\n              deleteConnection={this.deleteConnection}\n            />\n          </div>\n        </>\n      );\n    }\n    return null;\n  };\n\n  handleExportSourceConfig = () => {\n    const { sourceId } = this.state;\n    const { sourcesListStore } = this.props;\n    const { sources } = sourcesListStore;\n    const source = sources.find(source => source.id === sourceId);\n    if (source) {\n      const sourceConfig = {\n        source: {\n          config: source.config,\n          id: source.id,\n          name: source.name,\n          writeKey: source.writeKey,\n          enabled: source.enabled,\n          sourceDefinitionId: source.sourceDefinitionId,\n          deleted: false,\n          createdAt: Date(),\n          updatedAt: Date(),\n          sourceDefinition: source.sourceDef,\n          // Filter only useNativeSDK enabled destinations and\n          // includes only includeKeys (from definition) in the config\n          destinations: source.destinations\n            .filter(dest => {\n              return dest.config ? dest.config.useNativeSDK : false;\n            })\n            .map(dest => {\n              return {\n                id: dest.id,\n                name: dest.name,\n                enabled: dest.enabled,\n                config: dest.filteredConfig(), // Very Very Important to use filterConfig instead of config\n                destinationDefinition: dest.destinationDefinition,\n              };\n            }),\n        },\n        metadata: {\n          version: version,\n        },\n      };\n      fileDownload(\n        JSON.stringify(sourceConfig, null, 2),\n        `${source.name}_Source_Config.json`,\n      );\n    }\n  };\n\n  public render() {\n    const { sourceId, stats, overview } = this.state;\n    const { sourcesListStore } = this.props;\n    const { sources } = sourcesListStore;\n    const source = sources.find(source => source.id === sourceId);\n    return (\n      <Container>\n        <Flex flexDirection=\"row\" spaceBetween={true}>\n          <PageTitle>Source {overview ? 'Details' : 'Debugger'}</PageTitle>\n          <div style={{ width: '260px' }}>\n            <ButtonSmall pink onClick={this.handleExportSourceConfig}>\n              Export Source config\n            </ButtonSmall>\n          </div>\n        </Flex>\n        <Flex flexDirection=\"column\">{this.renderOverView()}</Flex>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(SourceDetails);\n"]},"metadata":{},"sourceType":"module"}