{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/configuredSources/index.tsx\";\n\nimport { Flex } from '@components/common/misc';\nimport SourceIcon from '@components/icons/sourceIcon';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport DestinationIcon from '../icons/destinationIcon';\nimport { AddSource, Container, HeadingTag, MainHeading, TableViewContainer, IconStyle, IconSpacing } from './styles';\nimport Svg from '@svg/index';\nlet ConfiguredSources = (_dec = inject('sourcesListStore', 'destinationsListStore'), _dec(_class = observer(_class = (_temp = class ConfiguredSources extends Component {\n  constructor(props) {\n    super(props);\n    this.dataSource = [];\n    this.columns = [{\n      title: '',\n      dataIndex: 'icon',\n      key: 'icon'\n    }, {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name'\n    }, {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status'\n    }, {\n      title: 'Destination',\n      dataIndex: 'destination',\n      key: 'destination'\n    }];\n\n    this.constructDataSource = sources => {\n      this.dataSource = [];\n      let activeCount = 0;\n\n      for (let i = 0; i < sources.length; i++) {\n        const destinationList = [];\n        const obj = {};\n        obj.key = i;\n\n        for (let dcount = 0; dcount < sources[i].destinations.length; dcount++) {\n          const a = React.createElement(IconSpacing, {\n            key: `${sources[i].destinations[dcount].id}`,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, React.createElement(DestinationIcon, {\n            destination: sources[i].destinations[dcount].destinationDefinition.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }));\n          destinationList.push(a);\n        }\n\n        if (sources[i].enabled) {\n          activeCount++;\n        }\n\n        obj.destination = destinationList;\n        obj.icon = React.createElement(SourceIcon, {\n          source: sources[i].sourceDef.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        });\n        obj.id = sources[i].id;\n        obj.name = sources[i].name;\n        obj.status = sources[i].enabled ? 'Enabled' : 'Disabled';\n        this.dataSource.push(obj);\n      }\n\n      this.setState({\n        count: sources.length\n      });\n      this.setState({\n        active: activeCount\n      });\n      this.setState({\n        inactive: this.state.count - this.state.active\n      });\n    };\n\n    this.handleRowClick = (record, Index) => {\n      const {\n        history\n      } = this.props;\n      history.push(`/sources/${record.id}`);\n    };\n\n    this.renderAddSource = () => {\n      return React.createElement(Link, {\n        to: \"/sources/setup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Flex, {\n        flexDirection: 'row',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(IconStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Svg, {\n        name: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(AddSource, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Add source\")));\n    };\n\n    this.state = {\n      count: 1,\n      active: 1,\n      inactive: 0\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      sourcesListStore\n    } = this.props;\n    await this.constructDataSource(sourcesListStore.sources);\n  }\n\n  render() {\n    const {\n      count,\n      active,\n      inactive\n    } = this.state;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Flex, {\n      flexDirection: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(MainHeading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Configured Sources\"), React.createElement(HeadingTag, {\n      className: 'p-v-xs',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, count, \" Added \", active, \" Active \", inactive, \" Inactive\")), React.createElement(TableViewContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      dataSource: this.dataSource,\n      columns: this.columns,\n      pagination: false,\n      footer: this.renderAddSource,\n      onRow: (record, Index) => ({\n        onClick: () => this.handleRowClick(record, Index)\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })));\n  }\n\n}, _temp)) || _class) || _class);\nexport default withRouter(ConfiguredSources);","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/configuredSources/index.tsx"],"names":["Flex","SourceIcon","inject","observer","React","Component","Link","withRouter","DestinationIcon","AddSource","Container","HeadingTag","MainHeading","TableViewContainer","IconStyle","IconSpacing","Svg","ConfiguredSources","constructor","props","dataSource","columns","title","dataIndex","key","constructDataSource","sources","activeCount","i","length","destinationList","obj","dcount","destinations","a","id","destinationDefinition","name","push","enabled","destination","icon","sourceDef","status","setState","count","active","inactive","state","handleRowClick","record","Index","history","renderAddSource","componentDidMount","sourcesListStore","render","onClick"],"mappings":";;;;;;;;AAAA,SAASA,IAAT,QAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAIA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAoCC,UAApC,QAAsD,kBAAtD;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AAEA,SACEC,SADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,kBALF,EAMEC,SANF,EAOEC,WAPF,QAQO,UARP;AASA,OAAOC,GAAP,MAAgB,YAAhB;IAgBMC,iB,WAFLf,MAAM,CAAC,kBAAD,EAAqB,uBAArB,C,gBACNC,Q,mBADD,MAEMc,iBAFN,SAEgCZ,SAFhC,CAKE;AACAa,EAAAA,WAAW,CAACC,KAAD,EAAiC;AAC1C,UAAMA,KAAN;AAD0C,SAQ5CC,UAR4C,GAQ1B,EAR0B;AAAA,SAS5CC,OAT4C,GASlC,CACR;AACEC,MAAAA,KAAK,EAAE,EADT;AAEEC,MAAAA,SAAS,EAAE,MAFb;AAGEC,MAAAA,GAAG,EAAE;AAHP,KADQ,EAMR;AACEF,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,SAAS,EAAE,MAFb;AAGEC,MAAAA,GAAG,EAAE;AAHP,KANQ,EAWR;AACEF,MAAAA,KAAK,EAAE,QADT;AAEEC,MAAAA,SAAS,EAAE,QAFb;AAGEC,MAAAA,GAAG,EAAE;AAHP,KAXQ,EAgBR;AACEF,MAAAA,KAAK,EAAE,aADT;AAEEC,MAAAA,SAAS,EAAE,aAFb;AAGEC,MAAAA,GAAG,EAAE;AAHP,KAhBQ,CATkC;;AAAA,SAqCrCC,mBArCqC,GAqCdC,OAAD,IAAkB;AAC7C,WAAKN,UAAL,GAAkB,EAAlB;AACA,UAAIO,WAAW,GAAG,CAAlB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,cAAME,eAAoB,GAAG,EAA7B;AACA,cAAMC,GAAQ,GAAG,EAAjB;AAEAA,QAAAA,GAAG,CAACP,GAAJ,GAAUI,CAAV;;AACA,aAAK,IAAII,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGN,OAAO,CAACE,CAAD,CAAP,CAAWK,YAAX,CAAwBJ,MAAtD,EAA8DG,MAAM,EAApE,EAAwE;AACtE,gBAAME,CAAC,GACL,oBAAC,WAAD;AAAa,YAAA,GAAG,EAAG,GAAER,OAAO,CAACE,CAAD,CAAP,CAAWK,YAAX,CAAwBD,MAAxB,EAAgCG,EAAG,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,eAAD;AACE,YAAA,WAAW,EACTT,OAAO,CAACE,CAAD,CAAP,CAAWK,YAAX,CAAwBD,MAAxB,EAAgCI,qBAAhC,CAAsDC,IAF1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF;AASAP,UAAAA,eAAe,CAACQ,IAAhB,CAAqBJ,CAArB;AACD;;AACD,YAAIR,OAAO,CAACE,CAAD,CAAP,CAAWW,OAAf,EAAwB;AACtBZ,UAAAA,WAAW;AACZ;;AACDI,QAAAA,GAAG,CAACS,WAAJ,GAAkBV,eAAlB;AACAC,QAAAA,GAAG,CAACU,IAAJ,GAAW,oBAAC,UAAD;AAAY,UAAA,MAAM,EAAEf,OAAO,CAACE,CAAD,CAAP,CAAWc,SAAX,CAAqBL,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX;AACAN,QAAAA,GAAG,CAACI,EAAJ,GAAST,OAAO,CAACE,CAAD,CAAP,CAAWO,EAApB;AACAJ,QAAAA,GAAG,CAACM,IAAJ,GAAWX,OAAO,CAACE,CAAD,CAAP,CAAWS,IAAtB;AACAN,QAAAA,GAAG,CAACY,MAAJ,GAAajB,OAAO,CAACE,CAAD,CAAP,CAAWW,OAAX,GAAqB,SAArB,GAAiC,UAA9C;AACA,aAAKnB,UAAL,CAAgBkB,IAAhB,CAAqBP,GAArB;AACD;;AACD,WAAKa,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEnB,OAAO,CAACG;AAAjB,OAAd;AACA,WAAKe,QAAL,CAAc;AAAEE,QAAAA,MAAM,EAAEnB;AAAV,OAAd;AACA,WAAKiB,QAAL,CAAc;AAAEG,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWH,KAAX,GAAmB,KAAKG,KAAL,CAAWF;AAA1C,OAAd;AACD,KAtE2C;;AAAA,SAwE5CG,cAxE4C,GAwE3B,CAACC,MAAD,EAAcC,KAAd,KAAgC;AAC/C,YAAM;AAAEC,QAAAA;AAAF,UAAc,KAAKjC,KAAzB;AACAiC,MAAAA,OAAO,CAAEd,IAAT,CAAe,YAAWY,MAAM,CAACf,EAAG,EAApC;AACD,KA3E2C;;AAAA,SA6ErCkB,eA7EqC,GA6EnB,MAAM;AAC7B,aACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADF,CADF;AAUD,KAxF2C;;AAE1C,SAAKL,KAAL,GAAa;AACXH,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,MAAM,EAAE,CAFG;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD;;AAyBD,QAAaO,iBAAb,GAAiC;AAC/B,UAAM;AAAEC,MAAAA;AAAF,QAAuB,KAAKpC,KAAlC;AACA,UAAM,KAAKM,mBAAL,CAAyB8B,gBAAgB,CAAE7B,OAA3C,CAAN;AACD;;AAuDM8B,EAAAA,MAAP,GAAgB;AACd,UAAM;AAAEX,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBC,MAAAA;AAAjB,QAA8B,KAAKC,KAAzC;AACA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAE,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,KADH,aACiBC,MADjB,cACiCC,QADjC,cAFF,CADF,EAOE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,UAAU,EAAE,KAAK3B,UADnB;AAEE,MAAA,OAAO,EAAE,KAAKC,OAFhB;AAGE,MAAA,UAAU,EAAE,KAHd;AAIE,MAAA,MAAM,EAAE,KAAKgC,eAJf;AAKE,MAAA,KAAK,EAAE,CAACH,MAAD,EAASC,KAAT,MAAoB;AACzBM,QAAAA,OAAO,EAAE,MAAM,KAAKR,cAAL,CAAoBC,MAApB,EAA4BC,KAA5B;AADU,OAApB,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,CADF;AAqBD;;AAlHD,C;AAqHF,eAAe5C,UAAU,CAA+BU,iBAA/B,CAAzB","sourcesContent":["import { Flex } from '@components/common/misc';\nimport SourceIcon from '@components/icons/sourceIcon';\nimport { IDestinationsListStore } from '@stores/destinationsList';\nimport { ISourcesListStore } from '@stores/sourcesList';\nimport { Table } from 'antd';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\nimport DestinationIcon from '../icons/destinationIcon';\n\nimport {\n  AddSource,\n  Container,\n  HeadingTag,\n  MainHeading,\n  TableViewContainer,\n  IconStyle,\n  IconSpacing,\n} from './styles';\nimport Svg from '@svg/index';\nimport theme from '@css/theme';\n\ninterface IConfiguredSourcesProps extends RouteComponentProps<any> {\n  history: any;\n  sourcesListStore?: ISourcesListStore;\n  destinationsListStore?: IDestinationsListStore;\n}\n\ninterface IConfiguredSourcesState {\n  count: number;\n  active: number;\n  inactive: number;\n}\n@inject('sourcesListStore', 'destinationsListStore')\n@observer\nclass ConfiguredSources extends Component<\n  IConfiguredSourcesProps,\n  IConfiguredSourcesState\n> {\n  constructor(props: IConfiguredSourcesProps) {\n    super(props);\n    this.state = {\n      count: 1,\n      active: 1,\n      inactive: 0,\n    };\n  }\n  dataSource: any = [];\n  columns = [\n    {\n      title: '',\n      dataIndex: 'icon',\n      key: 'icon',\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n    },\n    {\n      title: 'Destination',\n      dataIndex: 'destination',\n      key: 'destination',\n    },\n  ];\n\n  public async componentDidMount() {\n    const { sourcesListStore } = this.props;\n    await this.constructDataSource(sourcesListStore!.sources);\n  }\n\n  public constructDataSource = (sources: any) => {\n    this.dataSource = [];\n    let activeCount = 0;\n    for (let i = 0; i < sources.length; i++) {\n      const destinationList: any = [];\n      const obj: any = {};\n\n      obj.key = i;\n      for (let dcount = 0; dcount < sources[i].destinations.length; dcount++) {\n        const a = (\n          <IconSpacing key={`${sources[i].destinations[dcount].id}`}>\n            <DestinationIcon\n              destination={\n                sources[i].destinations[dcount].destinationDefinition.name\n              }\n            />\n          </IconSpacing>\n        );\n        destinationList.push(a);\n      }\n      if (sources[i].enabled) {\n        activeCount++;\n      }\n      obj.destination = destinationList;\n      obj.icon = <SourceIcon source={sources[i].sourceDef.name} />;\n      obj.id = sources[i].id;\n      obj.name = sources[i].name;\n      obj.status = sources[i].enabled ? 'Enabled' : 'Disabled';\n      this.dataSource.push(obj);\n    }\n    this.setState({ count: sources.length });\n    this.setState({ active: activeCount });\n    this.setState({ inactive: this.state.count - this.state.active });\n  };\n\n  handleRowClick = (record: any, Index: Number) => {\n    const { history } = this.props;\n    history!.push(`/sources/${record.id}`);\n  };\n\n  public renderAddSource = () => {\n    return (\n      <Link to=\"/sources/setup\">\n        <Flex flexDirection={'row'}>\n          <IconStyle>\n            <Svg name=\"plus\" />\n          </IconStyle>\n          <AddSource>Add source</AddSource>\n        </Flex>\n      </Link>\n    );\n  };\n\n  public render() {\n    const { count, active, inactive } = this.state;\n    return (\n      <Container>\n        <Flex flexDirection=\"column\">\n          <MainHeading>Configured Sources</MainHeading>\n          <HeadingTag className={'p-v-xs'}>\n            {count} Added {active} Active {inactive} Inactive\n          </HeadingTag>\n        </Flex>\n        <TableViewContainer>\n          <Table\n            dataSource={this.dataSource}\n            columns={this.columns}\n            pagination={false}\n            footer={this.renderAddSource}\n            onRow={(record, Index) => ({\n              onClick: () => this.handleRowClick(record, Index),\n            })}\n          />\n        </TableViewContainer>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter<IConfiguredSourcesProps, any>(ConfiguredSources);\n"]},"metadata":{},"sourceType":"module"}