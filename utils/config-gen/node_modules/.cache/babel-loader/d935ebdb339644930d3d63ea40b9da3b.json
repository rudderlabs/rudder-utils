{"ast":null,"code":"import \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/common/dynamicSelectForm.tsx\";\nimport * as React from 'react';\nimport { Flex } from './misc';\nimport styled from 'styled-components';\nimport { Input } from './input';\nimport Svg from '@svg/index';\nimport { Label } from './typography';\nimport { LabelDiv } from '@components/common/typography';\nconst {\n  Option\n} = _Select;\nconst Row = styled(Flex)`\n  width: 100%;\n  justify-content: 'flex-start';\n`;\nconst Column = styled.div`\n  flex: 1;\n  input {\n    width: 100%;\n  }\n`;\nconst ButtonText = styled(Label)`\n  margin-left: 10px;\n  color: ${props => props.color || props.theme.color.primary300};\n`;\nconst SingleSelectDropdown = styled(_Select)`\n  &.ant-select {\n    width: 100% !important;\n  }\n  .ant-select-selector {\n    background: ${({\n  theme\n}) => theme.color.grey50} !important;\n    height: 48px !important;\n    padding-top: 9px !important;\n    padding-bottom: 9px !important;\n    border-radius: 2px !important;\n  }\n`;\nexport default class DynamicSelectForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onInputChange = (index, value, isLeft) => {\n      const {\n        onChange,\n        field\n      } = this.props;\n      const keyLeft = field.keyLeft;\n      const keyRight = field.keyRight;\n      this.setState(prevState => {\n        const mapping = prevState.mapping.splice(0);\n        const updatedItem = { ...mapping[index],\n          [isLeft ? keyLeft : keyRight]: value\n        };\n        mapping.splice(index, 1, updatedItem);\n        return { ...prevState,\n          mapping\n        };\n      }, () => onChange(field.value, this.state.mapping));\n    };\n\n    this.renderSingleRow = index => {\n      const {\n        field,\n        options\n      } = this.props;\n      const {\n        mapping\n      } = this.state;\n      const keyLeft = field.keyLeft;\n      const keyRight = field.keyRight;\n      return React.createElement(Row, {\n        className: \"m-t-xs m-b-xs\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Column, {\n        className: \"p-r-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: mapping[index] && mapping[index][keyLeft],\n        placeholder: field.placeholderLeft,\n        onChange: e => this.onInputChange(index, e.target.value, true),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(Column, {\n        className: \"p-l-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(SingleSelectDropdown, {\n        defaultValue: mapping[index] && mapping[index][keyRight],\n        style: {\n          width: 120\n        },\n        onChange: e => this.onInputChange(index, e, false),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, options.map(opt => React.createElement(Option, {\n        value: opt.value,\n        key: `dynamic-select-opt-key-${opt.value}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, opt.name)))));\n    };\n\n    this.state = {\n      mapping: [],\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    const {\n      field,\n      onChange\n    } = this.props;\n\n    if (field.default) {\n      this.setState({\n        mapping: [...field.default],\n        count: field.default.length\n      }, () => onChange(field.value, this.state.mapping));\n    } else {\n      const keyLeft = field.keyLeft;\n      const keyRight = field.keyRight;\n      this.setState({\n        mapping: [{\n          [keyLeft]: '',\n          [keyRight]: ''\n        }],\n        count: 1\n      }, () => onChange(field.value, this.state.mapping));\n    }\n  }\n\n  render() {\n    const {\n      field\n    } = this.props;\n    const {\n      count\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(LabelDiv, {\n      className: \"m-b-xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, field.label)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Column, {\n      className: \"p-r-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, field.labelLeft), React.createElement(Column, {\n      className: \"p-l-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, field.labelRight)), [...Array(count)].map((v, index) => this.renderSingleRow(index)), React.createElement(\"a\", {\n      onClick: () => this.setState({\n        count: this.state.count + 1\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"p-t-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Svg, {\n      name: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(ButtonText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \" ADD MORE\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/common/dynamicSelectForm.tsx"],"names":["React","Flex","styled","Input","Svg","Label","LabelDiv","Option","Row","Column","div","ButtonText","props","color","theme","primary300","SingleSelectDropdown","grey50","DynamicSelectForm","Component","constructor","onInputChange","index","value","isLeft","onChange","field","keyLeft","keyRight","setState","prevState","mapping","splice","updatedItem","state","renderSingleRow","options","placeholderLeft","e","target","width","map","opt","name","count","componentDidMount","default","length","render","label","labelLeft","labelRight","Array","v"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Flex } from './misc';\nimport styled from 'styled-components';\nimport { Input } from './input';\nimport Svg from '@svg/index';\nimport { Label } from './typography';\nimport { LabelDiv } from '@components/common/typography';\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\nconst Row = styled(Flex)`\n  width: 100%;\n  justify-content: 'flex-start';\n`;\n\nconst Column = styled.div`\n  flex: 1;\n  input {\n    width: 100%;\n  }\n`;\nconst ButtonText = styled(Label)`\n  margin-left: 10px;\n  color: ${props => props.color || props.theme.color.primary300};\n`;\n\nconst SingleSelectDropdown = styled(Select)<any>`\n  &.ant-select {\n    width: 100% !important;\n  }\n  .ant-select-selector {\n    background: ${({ theme }) => theme.color.grey50} !important;\n    height: 48px !important;\n    padding-top: 9px !important;\n    padding-bottom: 9px !important;\n    border-radius: 2px !important;\n  }\n`;\n\nexport interface ISingleSelectOption {\n  name: string;\n  value: string;\n}\n\nexport interface IDynamicSelectFormProps {\n  field: any;\n  disabled: boolean;\n  options: ISingleSelectOption[];\n  defaultOption?: ISingleSelectOption;\n  onChange: any;\n}\n\nexport interface IDynamicSelectFormState {\n  mapping: any;\n  count: any;\n}\n\nexport default class DynamicSelectForm extends React.Component<\n  IDynamicSelectFormProps,\n  IDynamicSelectFormState\n> {\n  constructor(props: IDynamicSelectFormProps) {\n    super(props);\n    this.state = {\n      mapping: [],\n      count: 0,\n    };\n  }\n\n  componentDidMount() {\n    const { field, onChange } = this.props;\n    if (field.default) {\n      this.setState(\n        { mapping: [...field.default], count: field.default.length },\n        () => onChange(field.value, this.state.mapping),\n      );\n    } else {\n      const keyLeft = field.keyLeft;\n      const keyRight = field.keyRight;\n      this.setState(\n        {\n          mapping: [\n            {\n              [keyLeft]: '',\n              [keyRight]: '',\n            },\n          ],\n          count: 1,\n        },\n        () => onChange(field.value, this.state.mapping),\n      );\n    }\n  }\n\n  public onInputChange = (index: number, value: string, isLeft: boolean) => {\n    const { onChange, field } = this.props;\n    const keyLeft = field.keyLeft;\n    const keyRight = field.keyRight;\n    this.setState(\n      (prevState: any) => {\n        const mapping = prevState.mapping.splice(0);\n        const updatedItem = {\n          ...mapping[index],\n          [isLeft ? keyLeft : keyRight]: value,\n        };\n        mapping.splice(index, 1, updatedItem);\n        return {\n          ...prevState,\n          mapping,\n        };\n      },\n      () => onChange(field.value, this.state.mapping),\n    );\n  };\n\n  public renderSingleRow = (index: number) => {\n    const { field, options } = this.props;\n    const { mapping } = this.state;\n    const keyLeft = field.keyLeft;\n    const keyRight = field.keyRight;\n    return (\n      <Row className=\"m-t-xs m-b-xs\" key={index}>\n        <Column className=\"p-r-sm\">\n          <Input\n            value={mapping[index] && mapping[index][keyLeft]}\n            placeholder={field.placeholderLeft}\n            onChange={(e: any) =>\n              this.onInputChange(index, e.target.value, true)\n            }\n          />\n        </Column>\n        <Column className=\"p-l-sm\">\n          <SingleSelectDropdown\n            defaultValue={mapping[index] && mapping[index][keyRight]}\n            style={{ width: 120 }}\n            onChange={(e: any) => this.onInputChange(index, e, false)}\n          >\n            {options.map(opt => (\n              <Option\n                value={opt.value}\n                key={`dynamic-select-opt-key-${opt.value}`}\n              >\n                {opt.name}\n              </Option>\n            ))}\n          </SingleSelectDropdown>\n        </Column>\n      </Row>\n    );\n  };\n\n  public render() {\n    const { field } = this.props;\n    const { count } = this.state;\n\n    return (\n      <div>\n        <Row>\n          <LabelDiv className=\"m-b-xs\">{field.label}</LabelDiv>\n        </Row>\n        <Row>\n          <Column className=\"p-r-sm\">{field.labelLeft}</Column>\n          <Column className=\"p-l-sm\">{field.labelRight}</Column>\n        </Row>\n        {[...Array(count)].map((v: any, index: number) =>\n          this.renderSingleRow(index),\n        )}\n        <a onClick={() => this.setState({ count: this.state.count + 1 })}>\n          <div className=\"p-t-sm\">\n            <Svg name=\"plus\" />\n            <ButtonText> ADD MORE</ButtonText>\n          </div>\n        </a>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}