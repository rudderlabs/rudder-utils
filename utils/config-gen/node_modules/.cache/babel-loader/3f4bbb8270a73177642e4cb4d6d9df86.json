{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/source/addSource.tsx\";\n\nimport { Input } from '@components/common/input';\nimport { HeaderDiv, TextDiv } from '@components/common/typography';\nimport IconCardList from '@components/iconCardList';\nimport Steps from '@components/steps';\nimport Step from '@components/steps/step';\nimport { inject, observer } from 'mobx-react';\nimport queryString from 'query-string';\nimport * as React from 'react';\nimport { withRouter } from 'react-router';\nimport { withTheme } from 'styled-components';\nimport { IconCardListContainer, SourceNameInputContainer, StyledContainer } from './styles';\nlet AddSource = (_dec = inject('sourceDefinitionsListStore', 'sourcesListStore', 'destinationsListStore', 'messagesStore'), _dec(_class = observer(_class = (_temp = class AddSource extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = event => {\n      if (this.props.history.length > 2) {\n        this.props.history.goBack();\n      } else {\n        this.props.history.push('/');\n      }\n    };\n\n    this.createConnection = async source => {\n      const {\n        ref\n      } = this.state;\n      const {\n        destinationsListStore\n      } = this.props;\n\n      if (ref != null) {\n        const destination = destinationsListStore.destinations.find(dest => dest.id === ref);\n        await destinationsListStore.createDestinationConnections(destination, [source.id]);\n      }\n    };\n\n    this.handleNext = async event => {\n      try {\n        if (this.state.currentStep === 1) {\n          this.setState({\n            showNextLoader: true\n          });\n          const source = await this.props.sourcesListStore.createSource({\n            name: this.state.sourceName,\n            sourceDefinitionId: this.state.selectedSourceDefintionId\n          });\n          this.props.messagesStore.showSuccessMessage('Added source');\n\n          if (this.state.ref != null) {\n            this.createConnection(source);\n            this.props.history.push(`/destinations/${this.state.ref}`);\n          } else {\n            this.props.history.push(`/sources/${source.id}`);\n          }\n        } else {\n          this.setState({\n            currentStep: this.state.currentStep + 1,\n            enableNextButton: false\n          });\n        }\n      } catch (error) {\n        this.setState({\n          showNextLoader: false\n        });\n        this.props.messagesStore.showErrorMessage('Failed to add source. Try again after sometime'); //throw Error(error); // ToDo how will bugsnag error-boundry know of this?\n      }\n    };\n\n    this.handleSelection = selectedMap => {\n      const sourceDefId = Object.keys(selectedMap)[0];\n\n      if (selectedMap[sourceDefId]) {\n        this.setState({\n          enableNextButton: true,\n          selectedSourceDefintionId: sourceDefId\n        });\n      } else {\n        this.setState({\n          enableNextButton: false,\n          selectedSourceDefintionId: null\n        });\n      }\n    };\n\n    this.handleNameChange = event => {\n      let enableNextButton = event.target.value.length > 0;\n      this.setState({\n        sourceName: event.target.value,\n        enableNextButton\n      });\n    };\n\n    this.handleKeyDown = e => {\n      if (e.key === 'Enter' && this.state.enableNextButton) {\n        this.handleNext();\n      }\n    };\n\n    const parsed = queryString.parse(this.props.location.search);\n    this.state = {\n      ref: props.match && props.match.params.id || null,\n      currentStep: parsed.sourceDefId ? 1 : 0,\n      enableNextButton: false,\n      sourceName: '',\n      selectedSourceDefintionId: parsed.sourceDefId || null,\n      showNextLoader: false,\n      filteredSources: []\n    };\n  }\n\n  async componentDidMount() {\n    const filteredSources = await this.props.sourceDefinitionsListStore.getFilteredSourceDefinitions();\n    this.setState({\n      filteredSources\n    });\n  }\n\n  render() {\n    const {\n      filteredSources\n    } = this.state;\n\n    if (filteredSources.length > 0) {\n      return React.createElement(StyledContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(HeaderDiv, {\n        className: \"p-b-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Add Source\"), React.createElement(Steps, {\n        onCancel: this.handleCancel,\n        onNext: this.handleNext,\n        current: this.state.currentStep,\n        enableNext: this.state.enableNextButton,\n        showNextLoader: this.state.showNextLoader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Step, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(HeaderDiv, {\n        className: \"text-center p-t-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Choose a source\"), React.createElement(IconCardListContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(IconCardList, {\n        type: \"source\",\n        selectionMode: \"single\",\n        icons: filteredSources.map(s => ({\n          id: s.id,\n          type: s.name,\n          title: s.name\n        })),\n        onSelectionChange: this.handleSelection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }))), React.createElement(Step, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(HeaderDiv, {\n        className: \"text-center p-t-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Name your source\"), React.createElement(SourceNameInputContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"eg. Android Dev\",\n        onChange: this.handleNameChange,\n        autoFocus: true,\n        onKeyDown: this.handleKeyDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(TextDiv, {\n        color: this.props.theme.color.grey300,\n        className: \"p-t-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Identifies this source within your workspace, and typically includes the product area and environment.\")))));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      });\n    }\n  }\n\n}, _temp)) || _class) || _class);\nexport default withTheme(withRouter(AddSource));","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/source/addSource.tsx"],"names":["Input","HeaderDiv","TextDiv","IconCardList","Steps","Step","inject","observer","queryString","React","withRouter","withTheme","IconCardListContainer","SourceNameInputContainer","StyledContainer","AddSource","Component","constructor","props","handleCancel","event","history","length","goBack","push","createConnection","source","ref","state","destinationsListStore","destination","destinations","find","dest","id","createDestinationConnections","handleNext","currentStep","setState","showNextLoader","sourcesListStore","createSource","name","sourceName","sourceDefinitionId","selectedSourceDefintionId","messagesStore","showSuccessMessage","enableNextButton","error","showErrorMessage","handleSelection","selectedMap","sourceDefId","Object","keys","handleNameChange","target","value","handleKeyDown","e","key","parsed","parse","location","search","match","params","filteredSources","componentDidMount","sourceDefinitionsListStore","getFilteredSourceDefinitions","render","map","s","type","title","theme","color","grey300"],"mappings":"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","sourcesContent":["import { Input } from '@components/common/input';\nimport { HeaderDiv, TextDiv } from '@components/common/typography';\nimport IconCardList from '@components/iconCardList';\nimport Steps from '@components/steps';\nimport Step from '@components/steps/step';\nimport { ISourceDefinitionsListStore } from '@stores/sourceDefinitionsList';\nimport { ISourcesListStore } from '@stores/sourcesList';\nimport { IDestinationsListStore } from '@stores/destinationsList';\nimport { History } from 'history';\nimport { inject, observer } from 'mobx-react';\nimport queryString from 'query-string';\nimport * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport { withTheme } from 'styled-components';\nimport {\n  IconCardListContainer,\n  SourceNameInputContainer,\n  StyledContainer,\n} from './styles';\nimport { IMessageStore } from '@stores/messages';\n\nexport interface IAddSourceProps extends RouteComponentProps<any> {\n  sourceDefinitionsListStore: ISourceDefinitionsListStore;\n  sourcesListStore: ISourcesListStore;\n  destinationsListStore: IDestinationsListStore;\n  messagesStore: IMessageStore;\n  sourceDefId?: string;\n  history: History;\n  theme: any;\n}\n\n@inject(\n  'sourceDefinitionsListStore',\n  'sourcesListStore',\n  'destinationsListStore',\n  'messagesStore',\n)\n@observer\nclass AddSource extends React.Component<IAddSourceProps, any> {\n  constructor(props: IAddSourceProps) {\n    super(props);\n    const parsed = queryString.parse(this.props.location.search);\n    this.state = {\n      ref: (props.match && props.match.params.id) || null,\n      currentStep: parsed.sourceDefId ? 1 : 0,\n      enableNextButton: false,\n      sourceName: '',\n      selectedSourceDefintionId: parsed.sourceDefId || null,\n      showNextLoader: false,\n      filteredSources: [],\n    };\n  }\n\n  public handleCancel = (event: React.MouseEvent<HTMLElement>) => {\n    if (this.props.history.length > 2) {\n      this.props.history.goBack();\n    } else {\n      this.props.history.push('/');\n    }\n  };\n\n  async componentDidMount() {\n    const filteredSources = await this.props.sourceDefinitionsListStore.getFilteredSourceDefinitions();\n    this.setState({ filteredSources });\n  }\n\n  createConnection = async (source: any) => {\n    const { ref } = this.state;\n    const { destinationsListStore } = this.props;\n\n    if (ref != null) {\n      const destination = destinationsListStore.destinations.find(\n        dest => dest.id === ref,\n      );\n      await destinationsListStore.createDestinationConnections(destination, [\n        source.id,\n      ]);\n    }\n  };\n\n  public handleNext = async (event?: React.MouseEvent<HTMLElement>) => {\n    try {\n      if (this.state.currentStep === 1) {\n        this.setState({ showNextLoader: true });\n        const source = await this.props.sourcesListStore.createSource({\n          name: this.state.sourceName,\n          sourceDefinitionId: this.state.selectedSourceDefintionId,\n        });\n        this.props.messagesStore.showSuccessMessage('Added source');\n        if (this.state.ref != null) {\n          this.createConnection(source);\n          this.props.history.push(`/destinations/${this.state.ref}`);\n        } else {\n          this.props.history.push(`/sources/${source.id}`);\n        }\n      } else {\n        this.setState({\n          currentStep: this.state.currentStep + 1,\n          enableNextButton: false,\n        });\n      }\n    } catch (error) {\n      this.setState({ showNextLoader: false });\n      this.props.messagesStore.showErrorMessage(\n        'Failed to add source. Try again after sometime',\n      );\n      //throw Error(error); // ToDo how will bugsnag error-boundry know of this?\n    }\n  };\n\n  public handleSelection = (selectedMap: any) => {\n    const sourceDefId = Object.keys(selectedMap)[0];\n    if (selectedMap[sourceDefId]) {\n      this.setState({\n        enableNextButton: true,\n        selectedSourceDefintionId: sourceDefId,\n      });\n    } else {\n      this.setState({\n        enableNextButton: false,\n        selectedSourceDefintionId: null,\n      });\n    }\n  };\n\n  public handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let enableNextButton = event.target.value.length > 0;\n    this.setState({ sourceName: event.target.value, enableNextButton });\n  };\n\n  public handleKeyDown = (e: any) => {\n    if (e.key === 'Enter' && this.state.enableNextButton) {\n      this.handleNext();\n    }\n  };\n\n  public render() {\n    const { filteredSources } = this.state;\n    if (filteredSources.length > 0) {\n      return (\n        <StyledContainer>\n          <HeaderDiv className=\"p-b-lg\">Add Source</HeaderDiv>\n          <Steps\n            onCancel={this.handleCancel}\n            onNext={this.handleNext}\n            current={this.state.currentStep}\n            enableNext={this.state.enableNextButton}\n            showNextLoader={this.state.showNextLoader}\n          >\n            <Step>\n              <HeaderDiv className=\"text-center p-t-lg\">\n                Choose a source\n              </HeaderDiv>\n              <IconCardListContainer>\n                <IconCardList\n                  type=\"source\"\n                  selectionMode=\"single\"\n                  icons={filteredSources.map((s: any) => ({\n                    id: s.id,\n                    type: s.name,\n                    title: s.name,\n                  }))}\n                  onSelectionChange={this.handleSelection}\n                />\n              </IconCardListContainer>\n            </Step>\n            <Step>\n              <HeaderDiv className=\"text-center p-t-lg\">\n                Name your source\n              </HeaderDiv>\n              <SourceNameInputContainer>\n                <Input\n                  placeholder=\"eg. Android Dev\"\n                  onChange={this.handleNameChange}\n                  autoFocus\n                  onKeyDown={this.handleKeyDown}\n                />\n                <TextDiv\n                  color={this.props.theme.color.grey300}\n                  className=\"p-t-sm\"\n                >\n                  Identifies this source within your workspace, and typically\n                  includes the product area and environment.\n                </TextDiv>\n              </SourceNameInputContainer>\n            </Step>\n          </Steps>\n        </StyledContainer>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n}\n\nexport default withTheme(withRouter(AddSource));\n"]},"metadata":{},"sourceType":"module"}