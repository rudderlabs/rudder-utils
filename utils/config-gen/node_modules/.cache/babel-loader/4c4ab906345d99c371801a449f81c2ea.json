{"ast":null,"code":"import \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/common/singleSelect.tsx\";\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { LabelDiv } from '@components/common/typography';\nconst {\n  Option\n} = _Select;\nconst Container = styled.div`\n  width: 475px;\n`;\nconst SingleSelectDropdown = styled(_Select)`\n  &.ant-select {\n    width: 100% !important;\n  }\n  .ant-select-selector {\n    background: ${({\n  theme\n}) => theme.color.grey50} !important;\n    height: 48px !important;\n    padding-top: 9px !important;\n    padding-bottom: 9px !important;\n    border-radius: 2px !important;\n  }\n`;\nexport default class SingleSelect extends React.Component {\n  componentDidMount() {\n    const {\n      field,\n      onChange\n    } = this.props;\n    onChange(field.value, field.default || field.defaultOption.value);\n  }\n\n  render() {\n    const {\n      field,\n      onChange,\n      options\n    } = this.props;\n    return React.createElement(Container, {\n      className: \"p-t-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(LabelDiv, {\n      className: \"m-b-xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, field.label, field.required && ' *'), React.createElement(SingleSelectDropdown, {\n      defaultValue: field.default || field.defaultOption.value,\n      style: {\n        width: 120\n      },\n      onChange: v => onChange(field.value, v),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, options.map(opt => React.createElement(Option, {\n      value: opt.value,\n      key: `single-select-opt-key-${opt.value}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, opt.name))));\n  }\n\n}","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/common/singleSelect.tsx"],"names":["React","styled","LabelDiv","Option","Container","div","SingleSelectDropdown","theme","color","grey50","SingleSelect","Component","componentDidMount","field","onChange","props","value","default","defaultOption","render","options","label","required","width","v","map","opt","name"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,QAAT,QAAyB,+BAAzB;AAEA,MAAM;AAAEC,EAAAA;AAAF,WAAN;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;;CAA7B;AAIA,MAAMC,oBAAoB,GAAGL,MAAM,SAAc;;;;;kBAK/B,CAAC;AAAEM,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAN,CAAYC,MAAO;;;;;;CALpD;AA0BA,eAAe,MAAMC,YAAN,SAA2BV,KAAK,CAACW,SAAjC,CAA+D;AAC5EC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKC,KAAjC;AACAD,IAAAA,QAAQ,CAACD,KAAK,CAACG,KAAP,EAAcH,KAAK,CAACI,OAAN,IAAiBJ,KAAK,CAACK,aAAN,CAAoBF,KAAnD,CAAR;AACD;;AAEMG,EAAAA,MAAP,GAAgB;AACd,UAAM;AAAEN,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBM,MAAAA;AAAnB,QAA+B,KAAKL,KAA1C;AACA,WACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,KAAK,CAACQ,KADT,EAEGR,KAAK,CAACS,QAAN,IAAkB,IAFrB,CADF,EAKE,oBAAC,oBAAD;AACE,MAAA,YAAY,EAAET,KAAK,CAACI,OAAN,IAAiBJ,KAAK,CAACK,aAAN,CAAoBF,KADrD;AAEE,MAAA,KAAK,EAAE;AAAEO,QAAAA,KAAK,EAAE;AAAT,OAFT;AAGE,MAAA,QAAQ,EAAGC,CAAD,IAAYV,QAAQ,CAACD,KAAK,CAACG,KAAP,EAAcQ,CAAd,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGJ,OAAO,CAACK,GAAR,CAAYC,GAAG,IACd,oBAAC,MAAD;AACE,MAAA,KAAK,EAAEA,GAAG,CAACV,KADb;AAEE,MAAA,GAAG,EAAG,yBAAwBU,GAAG,CAACV,KAAM,EAF1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGU,GAAG,CAACC,IAJP,CADD,CALH,CALF,CADF;AAsBD;;AA9B2E","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { Select } from 'antd';\nimport { LabelDiv } from '@components/common/typography';\n\nconst { Option } = Select;\n\nconst Container = styled.div`\n  width: 475px;\n`;\n\nconst SingleSelectDropdown = styled(Select)<any>`\n  &.ant-select {\n    width: 100% !important;\n  }\n  .ant-select-selector {\n    background: ${({ theme }) => theme.color.grey50} !important;\n    height: 48px !important;\n    padding-top: 9px !important;\n    padding-bottom: 9px !important;\n    border-radius: 2px !important;\n  }\n`;\n\nexport interface ISingleSelectOption {\n  name: string;\n  value: string;\n}\n\nexport interface ISingleSelectProps {\n  field: any;\n  type?: string;\n  options: ISingleSelectOption[];\n  defaultOption?: ISingleSelectOption;\n  onChange: (label: string, value: string) => void;\n}\n\nexport default class SingleSelect extends React.Component<ISingleSelectProps> {\n  componentDidMount() {\n    const { field, onChange } = this.props;\n    onChange(field.value, field.default || field.defaultOption.value);\n  }\n\n  public render() {\n    const { field, onChange, options } = this.props;\n    return (\n      <Container className=\"p-t-sm\">\n        <LabelDiv className=\"m-b-xs\">\n          {field.label}\n          {field.required && ' *'}\n        </LabelDiv>\n        <SingleSelectDropdown\n          defaultValue={field.default || field.defaultOption.value}\n          style={{ width: 120 }}\n          onChange={(v: any) => onChange(field.value, v)}\n        >\n          {options.map(opt => (\n            <Option\n              value={opt.value}\n              key={`single-select-opt-key-${opt.value}`}\n            >\n              {opt.name}\n            </Option>\n          ))}\n        </SingleSelectDropdown>\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}