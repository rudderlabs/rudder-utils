{"ast":null,"code":"var _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/iconCard/index.tsx\";\nimport React from 'react';\nimport SourceIcon from '../icons/sourceIcon';\nimport DestinationIcon from '../icons/destinationIcon';\nimport { Container, AbsoluteContaier } from './styles';\nimport { LabelMedium } from '../common/typography';\nimport Svg from '@svg/index';\nimport theme from '@css/theme';\n\nconst IconCard = ({\n  name,\n  title,\n  type,\n  selected,\n  selectionMode,\n  onClick\n}) => {\n  return React.createElement(Container, {\n    className: selected ? 'active' : '',\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, type === 'source' && React.createElement(SourceIcon, {\n    source: name,\n    height: theme.iconSize.large,\n    width: theme.iconSize.large,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), type === 'destination' && React.createElement(DestinationIcon, {\n    destination: name,\n    height: theme.iconSize.large,\n    width: theme.iconSize.large,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), selected && selectionMode === 'multi' && React.createElement(AbsoluteContaier, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Svg, {\n    name: \"selected\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"p-t-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(LabelMedium, {\n    color: theme.color.black,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, title)));\n};\n\nexport default IconCard;","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/iconCard/index.tsx"],"names":["React","SourceIcon","DestinationIcon","Container","AbsoluteContaier","LabelMedium","Svg","theme","IconCard","name","title","type","selected","selectionMode","onClick","iconSize","large","color","black"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,UAA5C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAWA,MAAMC,QAA0B,GAAG,CAAC;AAClCC,EAAAA,IADkC;AAElCC,EAAAA,KAFkC;AAGlCC,EAAAA,IAHkC;AAIlCC,EAAAA,QAJkC;AAKlCC,EAAAA,aALkC;AAMlCC,EAAAA;AANkC,CAAD,KAO7B;AACJ,SACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEF,QAAQ,GAAG,QAAH,GAAc,EAA5C;AAAgD,IAAA,OAAO,EAAEE,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,KAAK,QAAT,IACC,oBAAC,UAAD;AACE,IAAA,MAAM,EAAEF,IADV;AAEE,IAAA,MAAM,EAAEF,KAAK,CAACQ,QAAN,CAAeC,KAFzB;AAGE,IAAA,KAAK,EAAET,KAAK,CAACQ,QAAN,CAAeC,KAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQGL,IAAI,KAAK,aAAT,IACC,oBAAC,eAAD;AACE,IAAA,WAAW,EAAEF,IADf;AAEE,IAAA,MAAM,EAAEF,KAAK,CAACQ,QAAN,CAAeC,KAFzB;AAGE,IAAA,KAAK,EAAET,KAAK,CAACQ,QAAN,CAAeC,KAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAeGJ,QAAQ,IAAIC,aAAa,KAAK,OAA9B,IACC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhBJ,EAoBE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEN,KAAK,CAACU,KAAN,CAAYC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCR,KAAxC,CADF,CApBF,CADF;AA0BD,CAlCD;;AAoCA,eAAeF,QAAf","sourcesContent":["import React from 'react';\nimport SourceIcon from '../icons/sourceIcon';\nimport DestinationIcon from '../icons/destinationIcon';\nimport { Container, AbsoluteContaier } from './styles';\nimport { LabelMedium } from '../common/typography';\nimport Svg from '@svg/index';\nimport theme from '@css/theme';\n\ninterface IProps {\n  name: string;\n  title: string;\n  type: string;\n  selected: boolean;\n  selectionMode: string;\n  onClick: () => void;\n}\n\nconst IconCard: React.FC<IProps> = ({\n  name,\n  title,\n  type,\n  selected,\n  selectionMode,\n  onClick,\n}) => {\n  return (\n    <Container className={selected ? 'active' : ''} onClick={onClick}>\n      {type === 'source' && (\n        <SourceIcon\n          source={name}\n          height={theme.iconSize.large}\n          width={theme.iconSize.large}\n        />\n      )}\n      {type === 'destination' && (\n        <DestinationIcon\n          destination={name}\n          height={theme.iconSize.large}\n          width={theme.iconSize.large}\n        />\n      )}\n      {selected && selectionMode === 'multi' && (\n        <AbsoluteContaier>\n          <Svg name=\"selected\" />\n        </AbsoluteContaier>\n      )}\n      <div className=\"p-t-sm\">\n        <LabelMedium color={theme.color.black}>{title}</LabelMedium>\n      </div>\n    </Container>\n  );\n};\n\nexport default IconCard;\n"]},"metadata":{},"sourceType":"module"}