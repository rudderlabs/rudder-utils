{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/sourcesList/index.tsx\";\n\n/* eslint-disable import/first */\nimport * as React from 'react';\nimport { ButtonText, Container } from './styles';\nimport { Header } from '@components/common/typography';\nimport SourceCard from '@components/sourceCard';\nimport theme from '@css/theme';\nimport { ReactComponent as Plus } from \"@svgr/webpack?-svgo,+titleProp,+ref!@svg/plus.svg\";\nimport { inject, observer } from 'mobx-react';\nimport { Link } from 'react-router-dom';\nimport { withTheme } from 'styled-components';\nlet SourcesList = (_dec = inject('sourcesListStore'), _dec(_class = observer(_class = (_temp = class SourcesList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.linesMap = void 0;\n\n    this.onMouseEnter = source => {\n      Object.keys(this.linesMap).forEach(key => {\n        if (key.startsWith(source.id)) {\n          this.linesMap[key].setOptions({\n            color: this.props.theme.color.primary\n          });\n        } else {\n          this.linesMap[key].setOptions({\n            size: 0.01\n          });\n        }\n      });\n    };\n\n    this.onMouseLeave = source => {\n      Object.values(this.linesMap).forEach(line => {\n        line.setOptions({\n          color: this.props.theme.color.grey100,\n          size: 4\n        });\n      });\n    };\n\n    this.deleteSource = source => {\n      // useful logs\n      // console.log('source is to be deleted');\n      // console.log(source.name);\n      const {\n        sourcesListStore\n      } = this.props;\n      sourcesListStore.deleteSource(source);\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.linesMap = this.props.linesMap;\n  }\n  /* componentWillUnmount() {\n    this.removeDestConnectionLines();\n  } */\n\n\n  componentDidUpdate() {\n    this.linesMap = this.props.linesMap;\n  }\n  /* drawDestConnectionLines = () => {\n    let existingCombos = Object.keys(this.linesMap);\n    let combos: string[] = [];\n    this.props.sourcesListStore!.sources.forEach(source => {\n      source.destinations.forEach(dest => {\n        if (dest.state != 'deleting') {\n          combos.push(`${source.id}-${dest.id}`);\n        }\n      });\n    });\n    existingCombos.forEach(c => {\n      if (!combos.includes(c)) {\n        this.linesMap[c].remove();\n        delete this.linesMap[c];\n      }\n    });\n    combos.forEach(c => {\n      if (!existingCombos.includes(c)) {\n        let line = new LeaderLine(\n          document.getElementById(`fake-source-${c.split('-')[0]}`),\n          document.getElementById(`fake-destination-${c.split('-')[1]}`),\n          { endPlug: 'behind', color: this.props.theme.color.grey100, size: 4 },\n        );\n        this.linesMap[c] = line;\n      }\n    });\n  };\n   removeDestConnectionLines = () => {\n    Object.values(this.linesMap).forEach((l: any) => l.remove());\n    this.linesMap = {};\n  }; */\n\n\n  render() {\n    const {\n      sourcesListStore\n    } = this.props;\n    const sources = sourcesListStore && sourcesListStore.sources;\n    return React.createElement(Container, {\n      id: \"sources-list\",\n      style: {\n        zIndex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Header, {\n      color: theme.color.grey300,\n      className: \"m-b-md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Sources\"), !sources || sources.length === 0 ? React.createElement(\"div\", {\n      className: \"p-t-md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(SourceCard, {\n      source: null,\n      key: undefined,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: \"p-t-md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, sources.map(source => React.createElement(SourceCard, {\n      source: source,\n      key: source.name,\n      onDelete: this.deleteSource,\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: \"/sources/setup\",\n      className: \"d-block p-t-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Plus, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(ButtonText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \" ADD SOURCE\"))));\n  }\n\n}, _temp)) || _class) || _class);\nexport default withTheme(SourcesList);","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/sourcesList/index.tsx"],"names":["React","ButtonText","Container","Header","SourceCard","theme","inject","observer","Link","withTheme","SourcesList","Component","constructor","props","linesMap","onMouseEnter","source","Object","keys","forEach","key","startsWith","id","setOptions","color","primary","size","onMouseLeave","values","line","grey100","deleteSource","sourcesListStore","state","componentDidMount","componentDidUpdate","render","sources","zIndex","grey300","length","undefined","map","name"],"mappings":"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","sourcesContent":["/* eslint-disable import/first */\nimport * as React from 'react';\ndeclare var LeaderLine: any;\nimport { ButtonText, Container } from './styles';\nimport { Header } from '@components/common/typography';\nimport SourceCard from '@components/sourceCard';\nimport theme from '@css/theme';\nimport { ISourcesListStore } from '@stores/sourcesList';\nimport { ISourceStore } from '@stores/source';\nimport { ReactComponent as Plus } from '@svg/plus.svg';\nimport { inject, observer } from 'mobx-react';\nimport { Link } from 'react-router-dom';\nimport { withTheme } from 'styled-components';\n\nexport interface ISourcesListProps {\n  sourcesListStore?: ISourcesListStore;\n  theme: any;\n  linesMap: any;\n}\n\n@inject('sourcesListStore')\n@observer\nclass SourcesList extends React.Component<ISourcesListProps> {\n  linesMap: any;\n\n  constructor(props: ISourcesListProps) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.linesMap = this.props.linesMap;\n  }\n\n  /* componentWillUnmount() {\n    this.removeDestConnectionLines();\n  } */\n\n  componentDidUpdate() {\n    this.linesMap = this.props.linesMap;\n  }\n\n  /* drawDestConnectionLines = () => {\n    let existingCombos = Object.keys(this.linesMap);\n    let combos: string[] = [];\n    this.props.sourcesListStore!.sources.forEach(source => {\n      source.destinations.forEach(dest => {\n        if (dest.state != 'deleting') {\n          combos.push(`${source.id}-${dest.id}`);\n        }\n      });\n    });\n    existingCombos.forEach(c => {\n      if (!combos.includes(c)) {\n        this.linesMap[c].remove();\n        delete this.linesMap[c];\n      }\n    });\n    combos.forEach(c => {\n      if (!existingCombos.includes(c)) {\n        let line = new LeaderLine(\n          document.getElementById(`fake-source-${c.split('-')[0]}`),\n          document.getElementById(`fake-destination-${c.split('-')[1]}`),\n          { endPlug: 'behind', color: this.props.theme.color.grey100, size: 4 },\n        );\n        this.linesMap[c] = line;\n      }\n    });\n  };\n\n  removeDestConnectionLines = () => {\n    Object.values(this.linesMap).forEach((l: any) => l.remove());\n    this.linesMap = {};\n  }; */\n\n  onMouseEnter = (source: any) => {\n    Object.keys(this.linesMap).forEach(key => {\n      if (key.startsWith(source.id)) {\n        this.linesMap[key].setOptions({\n          color: this.props.theme.color.primary,\n        });\n      } else {\n        this.linesMap[key].setOptions({\n          size: 0.01,\n        });\n      }\n    });\n  };\n\n  onMouseLeave = (source: any) => {\n    Object.values(this.linesMap).forEach((line: any) => {\n      line.setOptions({\n        color: this.props.theme.color.grey100,\n        size: 4,\n      });\n    });\n  };\n\n  deleteSource = (source: ISourceStore) => {\n    // useful logs\n    // console.log('source is to be deleted');\n    // console.log(source.name);\n    const { sourcesListStore } = this.props;\n    sourcesListStore!.deleteSource(source);\n  };\n\n  public render() {\n    const { sourcesListStore } = this.props;\n    const sources = sourcesListStore && sourcesListStore.sources;\n    return (\n      <Container id=\"sources-list\" style={{ zIndex: 1 }}>\n        <Header color={theme.color.grey300} className=\"m-b-md\">\n          Sources\n        </Header>\n        {!sources || sources.length === 0 ? (\n          <div className=\"p-t-md\">\n            <SourceCard source={null} key={undefined} />\n          </div>\n        ) : (\n          <div className=\"p-t-md\">\n            {sources.map(source => (\n              <SourceCard\n                source={source}\n                key={source.name}\n                onDelete={this.deleteSource}\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n              />\n            ))}\n            <Link to=\"/sources/setup\" className=\"d-block p-t-sm\">\n              <Plus />\n              <ButtonText> ADD SOURCE</ButtonText>\n            </Link>\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default withTheme(SourcesList);\n"]},"metadata":{},"sourceType":"module"}