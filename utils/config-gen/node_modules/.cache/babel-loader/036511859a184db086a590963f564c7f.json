{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/destinationsList/index.tsx\";\n\nimport { Header } from '@components/common/typography';\nimport DestinationCard from '@components/destinationCard';\nimport theme from '@css/theme';\nimport { ReactComponent as Plus } from \"@svgr/webpack?-svgo,+titleProp,+ref!@svg/plus.svg\";\nimport { inject, observer } from 'mobx-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withTheme } from 'styled-components';\nimport { ButtonText, Container } from './styles';\nlet DestinationsList = (_dec = inject('destinationsListStore', 'messagesStore'), _dec(_class = observer(_class = (_temp = class DestinationsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.linesMap = void 0;\n\n    this.onMouseEnter = destination => {\n      Object.keys(this.linesMap).forEach(key => {\n        let destId = key.split('-')[1];\n\n        if (destId == destination.id) {\n          this.linesMap[key].setOptions({\n            color: this.props.theme.color.primary\n          });\n        } else {\n          this.linesMap[key].setOptions({\n            size: 0.01\n          });\n        }\n      });\n    };\n\n    this.onMouseLeave = destination => {\n      Object.values(this.linesMap).forEach(line => {\n        line.setOptions({\n          color: this.props.theme.color.grey100,\n          size: 4\n        });\n      });\n    };\n\n    this.deleteDestination = destination => {\n      const {\n        destinationsListStore,\n        messagesStore\n      } = this.props;\n\n      try {\n        destinationsListStore.deleteDestination(destination);\n        messagesStore.showSuccessMessage('Delete destination successful');\n      } catch (error) {\n        messagesStore.showErrorMessage('Destination deletion failed');\n      }\n    };\n\n    this.state = {};\n    this.linesMap = props.linesMap;\n  }\n\n  render() {\n    const {\n      destinationsListStore\n    } = this.props;\n    const destinations = destinationsListStore && destinationsListStore.destinations;\n    return React.createElement(Container, {\n      style: {\n        zIndex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Header, {\n      color: theme.color.grey300,\n      className: \"m-b-md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Destinations\"), !destinations || destinations.length === 0 ? React.createElement(\"div\", {\n      className: \"p-t-md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(DestinationCard, {\n      destination: null,\n      key: undefined,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: \"p-t-md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, destinations.map(destination => React.createElement(DestinationCard, {\n      destination: destination,\n      key: destination.name,\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave,\n      onDelete: this.deleteDestination,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: \"/destinations/setup\",\n      className: \"d-block p-t-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Plus, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(ButtonText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"ADD DESTINATION\"))));\n  }\n\n}, _temp)) || _class) || _class);\nexport default withTheme(DestinationsList);","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/destinationsList/index.tsx"],"names":["Header","DestinationCard","theme","inject","observer","React","Link","withTheme","ButtonText","Container","DestinationsList","Component","constructor","props","linesMap","onMouseEnter","destination","Object","keys","forEach","key","destId","split","id","setOptions","color","primary","size","onMouseLeave","values","line","grey100","deleteDestination","destinationsListStore","messagesStore","showSuccessMessage","error","showErrorMessage","state","render","destinations","zIndex","grey300","length","undefined","map","name"],"mappings":"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","sourcesContent":["import { Header } from '@components/common/typography';\nimport DestinationCard from '@components/destinationCard';\nimport theme from '@css/theme';\nimport { IDestinationsListStore } from '@stores/destinationsList';\nimport { ReactComponent as Plus } from '@svg/plus.svg';\nimport { inject, observer } from 'mobx-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withTheme } from 'styled-components';\n\nimport { ButtonText, Container } from './styles';\nimport { IDestinationStore } from '@stores/destination';\nimport { IMessageStore } from '@stores/messages';\n\ndeclare var LeaderLine: any;\n\nexport interface IDestinationsListProps {\n  destinationsListStore?: IDestinationsListStore;\n  theme: any;\n  linesMap: any;\n  messagesStore?: IMessageStore;\n}\n\nexport interface IDestinationsListState {}\n\n@inject('destinationsListStore', 'messagesStore')\n@observer\nclass DestinationsList extends React.Component<\n  IDestinationsListProps,\n  IDestinationsListState\n> {\n  linesMap: any;\n\n  constructor(props: IDestinationsListProps) {\n    super(props);\n\n    this.state = {};\n    this.linesMap = props.linesMap;\n  }\n\n  onMouseEnter = (destination: any) => {\n    Object.keys(this.linesMap).forEach(key => {\n      let destId = key.split('-')[1];\n      if (destId == destination.id) {\n        this.linesMap[key].setOptions({\n          color: this.props.theme.color.primary,\n        });\n      } else {\n        this.linesMap[key].setOptions({\n          size: 0.01,\n        });\n      }\n    });\n  };\n\n  onMouseLeave = (destination: any) => {\n    Object.values(this.linesMap).forEach((line: any) => {\n      line.setOptions({\n        color: this.props.theme.color.grey100,\n        size: 4,\n      });\n    });\n  };\n\n  deleteDestination = (destination: IDestinationStore) => {\n    const { destinationsListStore, messagesStore } = this.props;\n    try {\n      destinationsListStore!.deleteDestination(destination);\n      messagesStore!.showSuccessMessage('Delete destination successful');\n    } catch (error) {\n      messagesStore!.showErrorMessage('Destination deletion failed');\n    }\n  };\n\n  public render() {\n    const { destinationsListStore } = this.props;\n    const destinations =\n      destinationsListStore && destinationsListStore.destinations;\n    return (\n      <Container style={{ zIndex: 1 }}>\n        <Header color={theme.color.grey300} className=\"m-b-md\">\n          Destinations\n        </Header>\n        {!destinations || destinations.length === 0 ? (\n          <div className=\"p-t-md\">\n            <DestinationCard destination={null} key={undefined} />\n          </div>\n        ) : (\n          <div className=\"p-t-md\">\n            {destinations.map(destination => (\n              <DestinationCard\n                destination={destination}\n                key={destination.name}\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n                onDelete={this.deleteDestination}\n              />\n            ))}\n            <Link to=\"/destinations/setup\" className=\"d-block p-t-sm\">\n              <Plus />\n              <ButtonText>ADD DESTINATION</ButtonText>\n            </Link>\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default withTheme(DestinationsList);\n"]},"metadata":{},"sourceType":"module"}