{"ast":null,"code":"import \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/sourceCard/index.tsx\";\n\nimport { Flex } from '@components/common/misc';\nimport { LabelDiv, Text } from '@components/common/typography';\nimport theme from '@css/theme';\nimport { ReactComponent as Check } from \"@svgr/webpack?-svgo,+titleProp,+ref!@svg/check.svg\";\nimport { inject, observer } from 'mobx-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport SourceIcon from '../icons/sourceIcon';\nimport EmptySourceCard from './emptySourceCard';\nimport { Content, EnabledText, StyledCard } from './styles';\nlet SourceCard = (_dec = inject('sourceDefinitionsListStore'), _dec(_class = observer(_class = (_temp = class SourceCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onMouseEnter = () => {\n      this.props.onMouseEnter(this.props.source);\n    };\n\n    this.onMouseLeave = () => {\n      this.props.onMouseLeave(this.props.source);\n    };\n\n    this.copyText = event => {\n      const {\n        source\n      } = this.props;\n      event.preventDefault();\n      navigator.clipboard.writeText(source.writeKey);\n      this.setState({\n        copied: true\n      });\n      setTimeout(() => {\n        this.setState({\n          copied: false\n        });\n      }, 1000);\n    };\n\n    this.deleteSource = e => {\n      e.preventDefault();\n      this.props.onDelete(this.props.source);\n    };\n\n    this.state = {\n      copied: false\n    };\n  }\n\n  render() {\n    const {\n      source\n    } = this.props;\n    const {\n      copied\n    } = this.state;\n\n    if (source === null) {\n      return React.createElement(EmptySourceCard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Link, {\n        to: `/sources/${source.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(StyledCard, {\n        id: `source-${source.id}`,\n        onMouseEnter: this.onMouseEnter,\n        onMouseLeave: this.onMouseLeave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          flexShrink: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(SourceIcon, {\n        source: source.sourceDef.name,\n        height: theme.iconSize.large,\n        width: theme.iconSize.large,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Flex, {\n        flexDirection: \"row\",\n        spaceBetween: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(LabelDiv, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, source.name)), source.enabled && React.createElement(Flex, {\n        flexDirection: \"row\",\n        spaceBetween: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Check, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(EnabledText, {\n        color: theme.color.green,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Enabled\")), copied ? React.createElement(Text, {\n        color: theme.color.grey300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Write key copied\") : null), !source.enabled && React.createElement(React.Fragment, null, React.createElement(Text, {\n        color: theme.color.grey300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Disabled\")), React.createElement(Flex, {\n        spaceBetween: true,\n        className: \"m-h-sm\",\n        onClick: this.copyText,\n        title: \"click to copy\",\n        style: {\n          minWidth: '300px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Text, {\n        color: theme.color.grey300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Write key \", source.writeKey), React.createElement(\"div\", {\n        className: \"p-l-xs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"copy\",\n        style: {\n          color: theme.color.grey300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })))), React.createElement(Flex, {\n        flexDirection: \"row\",\n        alignItems: \"flex-end\",\n        style: {\n          width: '1px',\n          paddingRight: '35px',\n          backgroundColor: 'red'\n        },\n        id: `fake-source-${source.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })));\n    }\n  }\n\n}, _temp)) || _class) || _class);\nexport { SourceCard as default };","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/sourceCard/index.tsx"],"names":["Flex","LabelDiv","Text","theme","inject","observer","React","Link","SourceIcon","EmptySourceCard","Content","EnabledText","StyledCard","SourceCard","Component","constructor","props","onMouseEnter","source","onMouseLeave","copyText","event","preventDefault","navigator","clipboard","writeText","writeKey","setState","copied","setTimeout","deleteSource","e","onDelete","state","render","id","flexShrink","sourceDef","name","iconSize","large","enabled","color","green","grey300","minWidth","width","paddingRight","backgroundColor"],"mappings":"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","sourcesContent":["import { Flex } from '@components/common/misc';\nimport { LabelDiv, Text } from '@components/common/typography';\nimport theme from '@css/theme';\nimport { ISourceStore } from '@stores/source';\nimport { ISourceDefinitionsListStore } from '@stores/sourceDefinitionsList';\nimport { ReactComponent as Check } from '@svg/check.svg';\nimport { Icon } from 'antd';\nimport { inject, observer } from 'mobx-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport SourceIcon from '../icons/sourceIcon';\nimport EmptySourceCard from './emptySourceCard';\nimport { Content, EnabledText, StyledCard } from './styles';\n\nexport interface ISourceCardProps {\n  sourceList?: ISourceStore[];\n  source: ISourceStore | null;\n  sourceDefinitionsListStore?: ISourceDefinitionsListStore;\n  onMouseEnter?: (source: any) => void;\n  onMouseLeave?: (source: any) => void;\n  onDelete?: (source: any) => void;\n}\n\nexport interface ISourceCardState {\n  copied: boolean;\n}\n\n@inject('sourceDefinitionsListStore')\n@observer\nexport default class SourceCard extends React.Component<\n  ISourceCardProps,\n  ISourceCardState\n> {\n  constructor(props: ISourceCardProps) {\n    super(props);\n\n    this.state = {\n      copied: false,\n    };\n  }\n\n  onMouseEnter = () => {\n    this.props.onMouseEnter!(this.props.source);\n  };\n\n  onMouseLeave = () => {\n    this.props.onMouseLeave!(this.props.source);\n  };\n\n  copyText = (event: any) => {\n    const { source } = this.props;\n    event.preventDefault();\n    navigator.clipboard.writeText(source!.writeKey);\n    this.setState({ copied: true });\n    setTimeout(() => {\n      this.setState({ copied: false });\n    }, 1000);\n  };\n\n  deleteSource = (e: any) => {\n    e.preventDefault();\n    this.props.onDelete!(this.props.source);\n  };\n\n  public render() {\n    const { source } = this.props;\n    const { copied } = this.state;\n    if (source === null) {\n      return <EmptySourceCard />;\n    } else {\n      return (\n        <Link to={`/sources/${source.id}`}>\n          <StyledCard\n            id={`source-${source.id}`}\n            onMouseEnter={this.onMouseEnter}\n            onMouseLeave={this.onMouseLeave}\n          >\n            <div style={{ flexShrink: 0 }}>\n              <SourceIcon\n                source={source.sourceDef.name}\n                height={theme.iconSize.large}\n                width={theme.iconSize.large}\n              />\n            </div>\n            <Content>\n              <Flex flexDirection=\"row\" spaceBetween>\n                <LabelDiv>{source.name}</LabelDiv>\n              </Flex>\n              {source.enabled && (\n                <Flex flexDirection=\"row\" spaceBetween>\n                  <div>\n                    <Check />\n                    <EnabledText color={theme.color.green}>Enabled</EnabledText>\n                  </div>\n                  {copied ? (\n                    <Text color={theme.color.grey300}>Write key copied</Text>\n                  ) : null}\n                </Flex>\n              )}\n              {!source.enabled && (\n                <>\n                  <Text color={theme.color.grey300}>Disabled</Text>\n                </>\n              )}\n              <Flex\n                spaceBetween\n                className=\"m-h-sm\"\n                onClick={this.copyText}\n                title=\"click to copy\"\n                style={{ minWidth: '300px' }}\n              >\n                <Text color={theme.color.grey300}>\n                  Write key {source.writeKey}\n                </Text>\n                <div className=\"p-l-xs\">\n                  <Icon type=\"copy\" style={{ color: theme.color.grey300 }} />\n                </div>\n              </Flex>\n            </Content>\n            <Flex\n              flexDirection=\"row\"\n              alignItems=\"flex-end\"\n              style={{\n                width: '1px',\n                paddingRight: '35px',\n                backgroundColor: 'red',\n              }}\n              id={`fake-source-${source!.id}`}\n            />\n          </StyledCard>\n        </Link>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}