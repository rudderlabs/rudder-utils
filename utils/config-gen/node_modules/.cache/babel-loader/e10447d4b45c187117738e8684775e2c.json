{"ast":null,"code":"import \"antd/es/time-picker/style\";\nimport _TimePicker from \"antd/es/time-picker\";\nvar _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/common/timePicker.tsx\";\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { LabelDiv } from '@components/common/typography';\nimport moment from 'moment';\nconst Container = styled.div`\n  width: 475px;\n`;\nconst Picker = styled(_TimePicker)`\n  &.ant-picker {\n    background: ${({\n  theme\n}) => theme.color.grey50};\n    width: 100% !important;\n  }\n`;\nexport default class TimePicker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.change = (time, timeString) => {\n      console.log(time, timeString);\n      const {\n        field,\n        onChange\n      } = this.props;\n      this.setState({\n        time: time\n      });\n      onChange(field.value, timeString);\n    };\n\n    this.state = {\n      time: props.field.time\n    };\n  }\n\n  componentDidMount() {\n    const {\n      field\n    } = this.props;\n    this.setState({\n      time: field.default\n    });\n  }\n\n  render() {\n    const {\n      field,\n      options\n    } = this.props;\n    return React.createElement(Container, {\n      className: \"p-t-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(LabelDiv, {\n      className: \"m-b-xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, field.label, field.required && ' *'), React.createElement(Picker, {\n      onChange: this.change,\n      value: this.state.time ? moment(this.state.time, 'HH:mm') : undefined,\n      minuteStep: 15,\n      format: 'HH:mm',\n      size: \"large\",\n      inputReadOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/common/timePicker.tsx"],"names":["React","styled","LabelDiv","moment","Container","div","Picker","theme","color","grey50","TimePicker","Component","constructor","props","change","time","timeString","console","log","field","onChange","setState","value","state","componentDidMount","default","render","options","label","required","undefined"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,QAAT,QAAyB,+BAAzB;AACA,OAAOC,MAAP,MAA+B,QAA/B;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;;CAA7B;AAIA,MAAMC,MAAM,GAAGL,MAAM,aAAqB;;kBAExB,CAAC;AAAEM,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAN,CAAYC,MAAO;;;CAFpD;AAkBA,eAAe,MAAMC,UAAN,SAAyBV,KAAK,CAACW,SAA/B,CAAgE;AAC7EC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;;AADsB,SAUxBC,MAVwB,GAUf,CAACC,IAAD,EAAsBC,UAAtB,KAA6C;AACpDC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,UAAlB;AACA,YAAM;AAAEG,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKP,KAAjC;AACA,WAAKQ,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAEA;AAAR,OAAd;AACAK,MAAAA,QAAQ,CAACD,KAAK,CAACG,KAAP,EAAcN,UAAd,CAAR;AACD,KAfuB;;AAEtB,SAAKO,KAAL,GAAa;AAAER,MAAAA,IAAI,EAAEF,KAAK,CAACM,KAAN,CAAYJ;AAApB,KAAb;AACD;;AAEDS,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEL,MAAAA;AAAF,QAAY,KAAKN,KAAvB;AACA,SAAKQ,QAAL,CAAc;AAAEN,MAAAA,IAAI,EAAEI,KAAK,CAACM;AAAd,KAAd;AACD;;AASMC,EAAAA,MAAP,GAAgB;AACd,UAAM;AAAEP,MAAAA,KAAF;AAASQ,MAAAA;AAAT,QAAqB,KAAKd,KAAhC;AACA,WACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,KAAK,CAACS,KADT,EAEGT,KAAK,CAACU,QAAN,IAAkB,IAFrB,CADF,EAKE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE,KAAKf,MADjB;AAEE,MAAA,KAAK,EAAE,KAAKS,KAAL,CAAWR,IAAX,GAAkBZ,MAAM,CAAC,KAAKoB,KAAL,CAAWR,IAAZ,EAAkB,OAAlB,CAAxB,GAAqDe,SAF9D;AAGE,MAAA,UAAU,EAAE,EAHd;AAIE,MAAA,MAAM,EAAE,OAJV;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,aAAa,EAAE,IANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAgBD;;AApC4E","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { TimePicker as AntTimePicker, Button } from 'antd';\nimport { LabelDiv } from '@components/common/typography';\nimport moment, { Moment } from 'moment';\n\nconst Container = styled.div`\n  width: 475px;\n`;\n\nconst Picker = styled(AntTimePicker)<any>`\n  &.ant-picker {\n    background: ${({ theme }) => theme.color.grey50};\n    width: 100% !important;\n  }\n`;\n\nexport interface ITimePickerOptions {\n  omitLabel?: boolean;\n  omitSeconds?: boolean;\n}\n\nexport interface ITimePickerProps {\n  field: any;\n  options?: ITimePickerOptions;\n  onChange: (label: string, value: string) => void;\n}\n\nexport default class TimePicker extends React.Component<ITimePickerProps, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = { time: props.field.time };\n  }\n\n  componentDidMount() {\n    const { field } = this.props;\n    this.setState({ time: field.default });\n  }\n\n  change = (time: Moment | null, timeString: string) => {\n    console.log(time, timeString);\n    const { field, onChange } = this.props;\n    this.setState({ time: time });\n    onChange(field.value, timeString);\n  };\n\n  public render() {\n    const { field, options } = this.props;\n    return (\n      <Container className=\"p-t-sm\">\n        <LabelDiv className=\"m-b-xs\">\n          {field.label}\n          {field.required && ' *'}\n        </LabelDiv>\n        <Picker\n          onChange={this.change}\n          value={this.state.time ? moment(this.state.time, 'HH:mm') : undefined}\n          minuteStep={15}\n          format={'HH:mm'}\n          size=\"large\"\n          inputReadOnly={true}\n        />\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}