{"ast":null,"code":"var _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/destinationDetails/editDestination/index.tsx\";\nimport * as React from 'react';\nimport DestinationSettings from '@components/destination/destinationSettings/destinationSettings';\nimport { ButtonPrimary } from '@components/common/button';\nimport { HeaderDiv } from '@components/common/typography';\nimport { withTheme } from 'styled-components';\n\nclass EditDestination extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleConfigChange = config => {\n      this.setState({\n        config\n      });\n    };\n\n    this.onSave = async () => {\n      const {\n        destination,\n        onSaveClicked\n      } = this.props;\n      const {\n        config\n      } = this.state;\n      await destination.updateConfig(config); // await this.connectTransformation();\n\n      onSaveClicked();\n    };\n\n    this.onSelectTransformation = value => {\n      this.setState({// selectedTransformation: value,\n        // showTransformationSelect: false,\n      });\n    };\n\n    this.state = {\n      config: {},\n      enableSaveButton: false\n    };\n  }\n\n  // public renderEditTransformation = () => {\n  //   const { destination, theme } = this.props;\n  //   return (\n  //     <div>\n  //       <Flex\n  //         spaceBetween\n  //         alignItems=\"baseline\"\n  //         className=\"b-b-grey p-b-sm m-b-md\"\n  //       >\n  //         <SubHeaderDiv color={theme.color.black}>Transformation</SubHeaderDiv>\n  //         <SubHeaderDiv\n  //           color={theme.color.primary}\n  //           onClick={() => this.setState({})}\n  //         >\n  //           EDIT\n  //         </SubHeaderDiv>\n  //       </Flex>\n  //     </div>\n  //   );\n  // };\n  render() {\n    const {\n      destination,\n      theme\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"p-l-lg p-r-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(HeaderDiv, {\n      className: \"b-b-grey p-b-lg m-b-sm\",\n      color: theme.color.black,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Settings\"), React.createElement(DestinationSettings, {\n      destName: destination.destinationDefinition.name,\n      onSettingsChange: this.handleConfigChange,\n      setRequirementsState: reqsState => this.setState({\n        enableSaveButton: reqsState\n      }),\n      initialSettings: destination.config,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(ButtonPrimary, {\n      onClick: this.onSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}\n\nEditDestination.defaultProps = {\n  onSaveClicked: () => {}\n};\nexport default withTheme(EditDestination);","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/destinationDetails/editDestination/index.tsx"],"names":["React","DestinationSettings","ButtonPrimary","HeaderDiv","withTheme","EditDestination","Component","constructor","props","handleConfigChange","config","setState","onSave","destination","onSaveClicked","state","updateConfig","onSelectTransformation","value","enableSaveButton","render","theme","color","black","destinationDefinition","name","reqsState","defaultProps"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,mBAAP,MAAgC,iEAAhC;AAEA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SACEC,SADF,QAMO,+BANP;AAOA,SAASC,SAAT,QAA0B,mBAA1B;;AAeA,MAAMC,eAAN,SAA8BL,KAAK,CAACM,SAApC,CAGE;AAKAC,EAAAA,WAAW,CAACC,KAAD,EAA+B;AACxC,UAAMA,KAAN;;AADwC,SAQnCC,kBARmC,GAQbC,MAAD,IAAiB;AAC3C,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KAVyC;;AAAA,SA2BnCE,MA3BmC,GA2B1B,YAAY;AAC1B,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAAiC,KAAKN,KAA5C;AACA,YAAM;AAAEE,QAAAA;AAAF,UAAa,KAAKK,KAAxB;AACA,YAAMF,WAAW,CAAEG,YAAb,CAA0BN,MAA1B,CAAN,CAH0B,CAI1B;;AACAI,MAAAA,aAAa;AACd,KAjCyC;;AAAA,SAmCnCG,sBAnCmC,GAmCTC,KAAD,IAAgB;AAC9C,WAAKP,QAAL,CAAc,CACZ;AACA;AAFY,OAAd;AAID,KAxCyC;;AAExC,SAAKI,KAAL,GAAa;AACXL,MAAAA,MAAM,EAAE,EADG;AAEXS,MAAAA,gBAAgB,EAAE;AAFP,KAAb;AAID;;AAoCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEOC,EAAAA,MAAP,GAAgB;AACd,UAAM;AAAEP,MAAAA,WAAF;AAAeQ,MAAAA;AAAf,QAAyB,KAAKb,KAApC;AACA,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,wBAArB;AAA8C,MAAA,KAAK,EAAEa,KAAK,CAACC,KAAN,CAAYC,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE,oBAAC,mBAAD;AACE,MAAA,QAAQ,EAAEV,WAAW,CAAEW,qBAAb,CAAoCC,IADhD;AAEE,MAAA,gBAAgB,EAAE,KAAKhB,kBAFzB;AAGE,MAAA,oBAAoB,EAAGiB,SAAD,IACpB,KAAKf,QAAL,CAAc;AAAEQ,QAAAA,gBAAgB,EAAEO;AAApB,OAAd,CAJJ;AAME,MAAA,eAAe,EAAEb,WAAW,CAAEH,MANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAaE,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAE,KAAKE,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,CADF;AAiBD;;AAvFD;;AAHIP,e,CAIUsB,Y,GAAe;AAC3Bb,EAAAA,aAAa,EAAE,MAAM,CAAE;AADI,C;AAyF/B,eAAeV,SAAS,CAACC,eAAD,CAAxB","sourcesContent":["import * as React from 'react';\nimport DestinationSettings from '@components/destination/destinationSettings/destinationSettings';\nimport { IDestinationStore } from '../../../stores/destination';\nimport { ButtonPrimary } from '@components/common/button';\nimport {\n  HeaderDiv,\n  SubHeaderDiv,\n  Header,\n  Label,\n  TextDiv,\n} from '@components/common/typography';\nimport { withTheme } from 'styled-components';\nimport { Flex } from '@components/common/misc';\nimport { Popover } from 'antd';\n\nexport interface IEditDestinationProps {\n  destination?: IDestinationStore;\n  onSaveClicked: () => void;\n  theme: any;\n}\n\nexport interface IEditDestinationState {\n  config: any;\n  enableSaveButton: boolean;\n}\n\nclass EditDestination extends React.Component<\n  IEditDestinationProps,\n  IEditDestinationState\n> {\n  public static defaultProps = {\n    onSaveClicked: () => {},\n  };\n\n  constructor(props: IEditDestinationProps) {\n    super(props);\n    this.state = {\n      config: {},\n      enableSaveButton: false,\n    };\n  }\n\n  public handleConfigChange = (config: any) => {\n    this.setState({ config });\n  };\n\n  // public connectTransformation = async () => {\n  //   const { selectedTransformation } = this.state;\n  //   const { destination } = this.props;\n  //   if (selectedTransformation) {\n  //     //If 'No transformation needed' is selected, dont connect to any destination\n  //     await selectedTransformation.connectToDestination(destination!.id);\n  //   } else {\n  //     destination!.transformations &&\n  //       destination!.transformations[0] &&\n  //       (await destination!.transformations[0].disconnectFromDestination(\n  //         destination!.id,\n  //       ));\n  //   }\n  // };\n\n  public onSave = async () => {\n    const { destination, onSaveClicked } = this.props;\n    const { config } = this.state;\n    await destination!.updateConfig(config);\n    // await this.connectTransformation();\n    onSaveClicked();\n  };\n\n  public onSelectTransformation = (value: any) => {\n    this.setState({\n      // selectedTransformation: value,\n      // showTransformationSelect: false,\n    });\n  };\n\n  // public renderEditTransformation = () => {\n  //   const { destination, theme } = this.props;\n  //   return (\n  //     <div>\n  //       <Flex\n  //         spaceBetween\n  //         alignItems=\"baseline\"\n  //         className=\"b-b-grey p-b-sm m-b-md\"\n  //       >\n  //         <SubHeaderDiv color={theme.color.black}>Transformation</SubHeaderDiv>\n  //         <SubHeaderDiv\n  //           color={theme.color.primary}\n  //           onClick={() => this.setState({})}\n  //         >\n  //           EDIT\n  //         </SubHeaderDiv>\n  //       </Flex>\n  //     </div>\n  //   );\n  // };\n\n  public render() {\n    const { destination, theme } = this.props;\n    return (\n      <div className=\"p-l-lg p-r-lg\">\n        <HeaderDiv className=\"b-b-grey p-b-lg m-b-sm\" color={theme.color.black}>\n          Settings\n        </HeaderDiv>\n        <DestinationSettings\n          destName={destination!.destinationDefinition!.name}\n          onSettingsChange={this.handleConfigChange}\n          setRequirementsState={(reqsState: any) =>\n            this.setState({ enableSaveButton: reqsState })\n          }\n          initialSettings={destination!.config}\n        ></DestinationSettings>\n        {/* {this.renderEditTransformation()} */}\n        <ButtonPrimary onClick={this.onSave}>Save</ButtonPrimary>\n      </div>\n    );\n  }\n}\n\nexport default withTheme(EditDestination);\n"]},"metadata":{},"sourceType":"module"}