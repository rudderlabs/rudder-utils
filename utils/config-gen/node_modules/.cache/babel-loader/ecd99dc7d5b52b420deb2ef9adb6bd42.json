{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\n\nvar _class,\n    _temp,\n    _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/destinationDetails/sourcesView/index.tsx\";\n\nimport { Button, ButtonSmall } from '@components/common/button';\nimport { Flex } from '@components/common/misc';\nimport { Label } from '@components/common/typography';\nimport Svg from '@svg/index';\nimport { observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { DestinationsView, DetailsText, HeaderView, Heading, TableViewContainer, TitleText } from './styles';\nimport SourceIcon from '@components/icons/sourceIcon';\nimport ModalEl from '@components/common/modal';\nconst modalTitle = 'CONFIRM DELETION';\nconst columns = [{\n  dataIndex: 'sourceIcon',\n  key: 'sourceIcon'\n}, {\n  dataIndex: 'name',\n  key: 'name',\n  width: '45%'\n}, {\n  dataIndex: 'status',\n  key: 'status',\n  width: '45%'\n}, {\n  dataIndex: 'delete',\n  key: 'delete',\n  width: '10%'\n}];\n\nlet SourcesView = observer(_class = (_temp = class SourcesView extends Component {\n  constructor(props) {\n    super(props);\n    this.sourceToBeDeleted = void 0;\n\n    this.handleClickEvent = () => {\n      const {\n        history\n      } = this.props;\n      const {\n        destination\n      } = this.state;\n      history.push(`/sources/connect/${destination.id}`);\n    };\n\n    this.handleRowClick = (record, Index) => {\n      const {\n        history\n      } = this.props;\n      history.push(`/sources/${record.id}`);\n    };\n\n    this.deleteConnection = (e, source) => {\n      e.preventDefault();\n      e.stopPropagation();\n      this.sourceToBeDeleted = source;\n      this.setState({\n        isDeleteModalVisible: true\n      });\n    };\n\n    this.locale = {\n      emptyText: React.createElement(Flex, {\n        flexDirection: \"column\",\n        justifyContentCenter: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: 'm-t-md m-b-md',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Svg, {\n        name: \"ed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(Label, {\n        className: 'm-t-xs m-b-xs',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Where do you want to see the data?\"), React.createElement(\"div\", {\n        className: 'm-t-xs m-b-xs',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Add a source for this destination\")))\n    };\n\n    this.handleModalOk = () => {\n      this.setState({\n        isDeleteModalVisible: false\n      });\n      this.props.deleteConnection(this.sourceToBeDeleted, this.props.destination);\n    };\n\n    this.handleModalCancel = () => {\n      this.setState({\n        isDeleteModalVisible: false\n      });\n    };\n\n    this.state = {\n      dataSource: [],\n      destination: undefined,\n      isDeleteModalVisible: false\n    }; // initial config\n\n    this.sourceToBeDeleted = {\n      name: ''\n    };\n  }\n\n  componentDidMount() {\n    const {\n      sources,\n      destination\n    } = this.props;\n    const dataSource = sources.map(source => ({ ...source,\n      sourceIcon: React.createElement(SourceIcon, {\n        source: source.sourceDef.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }),\n      status: source.enabled ? 'Enabled' : 'Disabled',\n      delete: React.createElement(ButtonSmall, {\n        onClick: event => this.deleteConnection(event, source),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Disconnect\"),\n      key: source.id\n    }));\n    this.setState({\n      dataSource,\n      destination\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      sources,\n      destination\n    } = nextProps;\n    const dataSource = sources.map(source => ({ ...source,\n      sourceIcon: React.createElement(SourceIcon, {\n        source: source.sourceDef.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }),\n      status: source.enabled ? 'Enabled' : 'Disabled',\n      delete: React.createElement(ButtonSmall, {\n        onClick: event => this.deleteConnection(event, source),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Disconnect\"),\n      key: source.id\n    }));\n    this.setState({\n      dataSource,\n      destination\n    });\n  }\n\n  getModalText() {\n    return React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '10vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Are you sure to delete the connection \\xA0\", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.sourceToBeDeleted.name, \" \\xA0\", '<--->', \" \\xA0\", this.props.destination.name), \"?\"));\n  }\n\n  render() {\n    const {\n      dataSource\n    } = this.state;\n    const {\n      sources\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(ModalEl, {\n      title: modalTitle,\n      showModal: this.state.isDeleteModalVisible,\n      handleOk: this.handleModalOk,\n      handleCancel: this.handleModalCancel,\n      okText: 'Confirm',\n      element: this.getModalText(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(DestinationsView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(TableViewContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(HeaderView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Heading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(TitleText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Sources\"), React.createElement(DetailsText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, sources.filter(source => source.enabled).length, ' ', \"Enabled\")), React.createElement(Button, {\n      onClick: this.handleClickEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Svg, {\n      name: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), \"CONNECT SOURCE\")), React.createElement(_Table, {\n      locale: this.locale,\n      dataSource: dataSource,\n      columns: columns,\n      pagination: false,\n      showHeader: false,\n      onRow: (record, Index) => ({\n        onClick: () => this.handleRowClick(record, Index)\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }))));\n  }\n\n}, _temp)) || _class;\n\nexport default withRouter(SourcesView);","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/destinationDetails/sourcesView/index.tsx"],"names":["Button","ButtonSmall","Flex","Label","Svg","observer","React","Component","withRouter","DestinationsView","DetailsText","HeaderView","Heading","TableViewContainer","TitleText","SourceIcon","ModalEl","modalTitle","columns","dataIndex","key","width","SourcesView","constructor","props","sourceToBeDeleted","handleClickEvent","history","destination","state","push","id","handleRowClick","record","Index","deleteConnection","e","source","preventDefault","stopPropagation","setState","isDeleteModalVisible","locale","emptyText","handleModalOk","handleModalCancel","dataSource","undefined","name","componentDidMount","sources","map","sourceIcon","sourceDef","status","enabled","delete","event","componentWillReceiveProps","nextProps","getModalText","display","justifyContent","alignItems","height","render","filter","length","onClick"],"mappings":"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","sourcesContent":["import { Button, ButtonSmall } from '@components/common/button';\nimport { Flex } from '@components/common/misc';\nimport { Label } from '@components/common/typography';\nimport { ISourceStore } from '@stores/source';\nimport Svg from '@svg/index';\nimport { ReactComponent as Delete } from '@svg/delete.svg';\nimport { Table } from 'antd';\nimport { observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nimport {\n  DestinationsView,\n  DetailsText,\n  HeaderView,\n  Heading,\n  TableViewContainer,\n  TitleText,\n} from './styles';\nimport SourceIcon from '@components/icons/sourceIcon';\nimport theme from '@css/theme';\nimport { IDestinationStore } from '@stores/destination';\nimport { IconColumn } from '../destinationView/styles';\nimport ModalEl from '@components/common/modal';\n\ninterface ISourcesListProps extends RouteComponentProps<any> {\n  history: any;\n  sources?: ISourceStore[];\n  destination: any;\n  deleteConnection?: (\n    source: ISourceStore,\n    destination: IDestinationStore,\n  ) => any;\n}\n\nconst modalTitle = 'CONFIRM DELETION';\nconst columns = [\n  { dataIndex: 'sourceIcon', key: 'sourceIcon' },\n  {\n    dataIndex: 'name',\n    key: 'name',\n    width: '45%',\n  },\n  {\n    dataIndex: 'status',\n    key: 'status',\n    width: '45%',\n  },\n  {\n    dataIndex: 'delete',\n    key: 'delete',\n    width: '10%',\n  },\n];\n@observer\nclass SourcesView extends Component<ISourcesListProps, any> {\n  sourceToBeDeleted: any;\n  constructor(props: ISourcesListProps) {\n    super(props);\n    this.state = {\n      dataSource: [],\n      destination: undefined,\n      isDeleteModalVisible: false,\n    };\n    // initial config\n    this.sourceToBeDeleted = { name: '' };\n  }\n\n  handleClickEvent = () => {\n    const { history } = this.props;\n    const { destination } = this.state;\n    history.push(`/sources/connect/${destination.id}`);\n  };\n\n  handleRowClick = (record: any, Index: Number) => {\n    const { history } = this.props;\n    history!.push(`/sources/${record.id}`);\n  };\n\n  componentDidMount() {\n    const { sources, destination } = this.props;\n    const dataSource = sources!.map(source => ({\n      ...source,\n      sourceIcon: <SourceIcon source={source.sourceDef.name} />,\n      status: source.enabled ? 'Enabled' : 'Disabled',\n      delete: (\n        <ButtonSmall\n          onClick={(event: any) => this.deleteConnection(event, source)}\n        >\n          Disconnect\n        </ButtonSmall>\n      ),\n      key: source.id,\n    }));\n    this.setState({ dataSource, destination });\n  }\n\n  componentWillReceiveProps(nextProps: any) {\n    const { sources, destination } = nextProps;\n    const dataSource = sources!.map((source: any) => ({\n      ...source,\n      sourceIcon: <SourceIcon source={source.sourceDef.name} />,\n      status: source.enabled ? 'Enabled' : 'Disabled',\n      delete: (\n        <ButtonSmall\n          onClick={(event: any) => this.deleteConnection(event, source)}\n        >\n          Disconnect\n        </ButtonSmall>\n      ),\n      key: source.id,\n    }));\n    this.setState({ dataSource, destination });\n  }\n\n  deleteConnection = (e: any, source: ISourceStore) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.sourceToBeDeleted = source;\n    this.setState({ isDeleteModalVisible: true });\n  };\n\n  locale = {\n    emptyText: (\n      <Flex flexDirection=\"column\" justifyContentCenter>\n        <div className={'m-t-md m-b-md'}>\n          <Svg name=\"ed\" />\n        </div>\n        <Label className={'m-t-xs m-b-xs'}>\n          Where do you want to see the data?\n        </Label>\n        <div className={'m-t-xs m-b-xs'}>\n          <p>Add a source for this destination</p>\n        </div>\n      </Flex>\n    ),\n  };\n\n  handleModalOk = () => {\n    this.setState({ isDeleteModalVisible: false });\n    this.props.deleteConnection!(\n      this.sourceToBeDeleted!,\n      this.props.destination,\n    );\n  };\n\n  handleModalCancel = () => {\n    this.setState({ isDeleteModalVisible: false });\n  };\n\n  getModalText() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '10vh',\n        }}\n      >\n        <p>\n          Are you sure to delete the connection &nbsp;\n          <b>\n            {this.sourceToBeDeleted!.name} &nbsp;\n            {'<--->'} &nbsp;\n            {this.props.destination!.name}\n          </b>\n          ?\n        </p>\n      </div>\n    );\n  }\n\n  public render() {\n    const { dataSource } = this.state;\n    const { sources } = this.props;\n    return (\n      <div>\n        <ModalEl\n          title={modalTitle}\n          showModal={this.state.isDeleteModalVisible}\n          handleOk={this.handleModalOk}\n          handleCancel={this.handleModalCancel}\n          okText={'Confirm'}\n          element={this.getModalText()}\n        />\n        <DestinationsView>\n          <TableViewContainer>\n            <HeaderView>\n              <Heading>\n                <TitleText>Sources</TitleText>\n                <DetailsText>\n                  {sources!.filter((source: any) => source.enabled).length}{' '}\n                  Enabled\n                </DetailsText>\n              </Heading>\n              <Button onClick={this.handleClickEvent}>\n                <Svg name=\"plus\" />\n                CONNECT SOURCE\n              </Button>\n            </HeaderView>\n            <Table\n              locale={this.locale}\n              dataSource={dataSource}\n              columns={columns}\n              pagination={false}\n              showHeader={false}\n              onRow={(record, Index) => ({\n                onClick: () => this.handleRowClick(record, Index),\n              })}\n            />\n          </TableViewContainer>\n        </DestinationsView>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SourcesView);\n"]},"metadata":{},"sourceType":"module"}