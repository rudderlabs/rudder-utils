{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/configuredDestinations/index.tsx\";\n\nimport { inject, observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport SourceIcon from '@components/icons/sourceIcon';\nimport DestinationIcon from '../icons/destinationIcon';\nimport { Container, HeadingContainer, HeadingTag, IconSpacing, MainHeading, TableViewContainer } from './styles';\nlet ConfiguredDestinations = (_dec = inject('sourcesListStore', 'destinationsListStore'), _dec(_class = observer(_class = (_temp = class ConfiguredDestinations extends Component {\n  constructor(props) {\n    super(props);\n    this.dataSource = [];\n    this.columns = [{\n      title: '',\n      dataIndex: 'icon',\n      key: 'icon'\n    }, {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name'\n    }, {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status'\n    }, {\n      title: 'Sources',\n      dataIndex: 'sources',\n      key: 'sources'\n    }];\n\n    this.constructDataSource = (sources, destinations) => {\n      this.dataSource = [];\n      let activeCount = 0;\n\n      for (let i = 0; i < destinations.length; i++) {\n        const sourceList = [];\n        const obj = {};\n        obj.key = destinations[i].id;\n\n        for (let scount = 0; scount < destinations[i].sources.length; scount++) {\n          const a = React.createElement(IconSpacing, {\n            key: `${destinations[i].sources[scount].id}`,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, React.createElement(SourceIcon, {\n            key: `${scount}`,\n            source: destinations[i].sources[scount].sourceDef.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }));\n          sourceList.push(a);\n        }\n\n        if (destinations[i].enabled) {\n          activeCount++;\n        }\n\n        obj.sources = sourceList;\n        obj.icon = React.createElement(DestinationIcon, {\n          destination: destinations[i].destinationDefinition.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        });\n        obj.id = destinations[i].id;\n        obj.name = destinations[i].name;\n        obj.status = destinations[i].enabled ? 'Enabled' : 'Disabled';\n        this.dataSource.push(obj);\n      }\n\n      this.setState({\n        active: activeCount\n      });\n      this.setState({\n        count: sources.length\n      });\n      this.setState({\n        inactive: this.state.count - this.state.active\n      });\n    };\n\n    this.handleRowClick = (record, Index) => {\n      const {\n        history\n      } = this.props;\n      history.push(`/destinations/${record.id}`);\n    };\n\n    this.state = {\n      count: 1,\n      active: 1,\n      inactive: 0\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      sourcesListStore,\n      destinationsListStore\n    } = this.props;\n    await this.constructDataSource(sourcesListStore.sources, destinationsListStore.destinations);\n  }\n\n  render() {\n    const {\n      count,\n      active,\n      inactive\n    } = this.state;\n    return React.createElement(Container, {\n      className: \"Sources\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(HeadingContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(MainHeading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Configured Destinations\"), React.createElement(HeadingTag, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, count, \" Added \", active, \" Active \", inactive, \" Inactive\")), React.createElement(TableViewContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      dataSource: this.dataSource,\n      columns: this.columns,\n      pagination: false,\n      onRow: (record, Index) => ({\n        onClick: () => this.handleRowClick(record, Index)\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })));\n  }\n\n}, _temp)) || _class) || _class);\nexport default withRouter(ConfiguredDestinations);","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/configuredDestinations/index.tsx"],"names":["inject","observer","React","Component","withRouter","SourceIcon","DestinationIcon","Container","HeadingContainer","HeadingTag","IconSpacing","MainHeading","TableViewContainer","ConfiguredDestinations","constructor","props","dataSource","columns","title","dataIndex","key","constructDataSource","sources","destinations","activeCount","i","length","sourceList","obj","id","scount","a","sourceDef","name","push","enabled","icon","destinationDefinition","status","setState","active","count","inactive","state","handleRowClick","record","Index","history","componentDidMount","sourcesListStore","destinationsListStore","render","onClick"],"mappings":"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","sourcesContent":["import { IDestinationsListStore } from '@stores/destinationsList';\nimport { ISourcesListStore } from '@stores/sourcesList';\nimport { Table } from 'antd';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport SourceIcon from '@components/icons/sourceIcon';\nimport DestinationIcon from '../icons/destinationIcon';\n\nimport {\n  Container,\n  HeadingContainer,\n  HeadingTag,\n  IconSpacing,\n  MainHeading,\n  TableViewContainer,\n} from './styles';\nimport theme from '@css/theme';\n\ninterface IConfiguredDestinationsProps extends RouteComponentProps<any> {\n  history: any;\n  sourcesListStore?: ISourcesListStore;\n  destinationsListStore?: IDestinationsListStore;\n}\n\ninterface IConfiguredDestinationsState {\n  count: number;\n  active: number;\n  inactive: number;\n}\n@inject('sourcesListStore', 'destinationsListStore')\n@observer\nclass ConfiguredDestinations extends Component<\n  IConfiguredDestinationsProps,\n  IConfiguredDestinationsState\n> {\n  constructor(props: IConfiguredDestinationsProps) {\n    super(props);\n    this.state = {\n      count: 1,\n      active: 1,\n      inactive: 0,\n    };\n  }\n\n  public async componentDidMount() {\n    const { sourcesListStore, destinationsListStore } = this.props;\n    await this.constructDataSource(\n      sourcesListStore!.sources,\n      destinationsListStore!.destinations,\n    );\n  }\n\n  dataSource: any = [];\n\n  columns = [\n    {\n      title: '',\n      dataIndex: 'icon',\n      key: 'icon',\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n    },\n    {\n      title: 'Sources',\n      dataIndex: 'sources',\n      key: 'sources',\n    },\n  ];\n\n  public constructDataSource = (sources: any, destinations: any) => {\n    this.dataSource = [];\n    let activeCount = 0;\n\n    for (let i = 0; i < destinations.length; i++) {\n      const sourceList: any = [];\n      const obj: any = {};\n\n      obj.key = destinations[i].id;\n      for (let scount = 0; scount < destinations[i].sources.length; scount++) {\n        const a = (\n          <IconSpacing key={`${destinations[i].sources[scount].id}`}>\n            <SourceIcon\n              key={`${scount}`}\n              source={destinations[i].sources[scount].sourceDef.name}\n            />\n          </IconSpacing>\n        );\n        sourceList.push(a);\n      }\n\n      if (destinations[i].enabled) {\n        activeCount++;\n      }\n      obj.sources = sourceList;\n      obj.icon = (\n        <DestinationIcon\n          destination={destinations[i].destinationDefinition.name}\n        />\n      );\n      obj.id = destinations[i].id;\n      obj.name = destinations[i].name;\n      obj.status = destinations[i].enabled ? 'Enabled' : 'Disabled';\n      this.dataSource.push(obj);\n    }\n    this.setState({ active: activeCount });\n    this.setState({ count: sources.length });\n    this.setState({ inactive: this.state.count - this.state.active });\n  };\n\n  handleRowClick = (record: any, Index: Number) => {\n    const { history } = this.props;\n    history!.push(`/destinations/${record.id}`);\n  };\n\n  public render() {\n    const { count, active, inactive } = this.state;\n    return (\n      <Container className=\"Sources\">\n        <HeadingContainer>\n          <MainHeading>Configured Destinations</MainHeading>\n          <HeadingTag>\n            {count} Added {active} Active {inactive} Inactive\n          </HeadingTag>\n        </HeadingContainer>\n        <TableViewContainer>\n          <Table\n            dataSource={this.dataSource}\n            columns={this.columns}\n            pagination={false}\n            onRow={(record, Index) => ({\n              onClick: () => this.handleRowClick(record, Index),\n            })}\n          />\n        </TableViewContainer>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter<IConfiguredDestinationsProps, any>(\n  ConfiguredDestinations,\n);\n"]},"metadata":{},"sourceType":"module"}