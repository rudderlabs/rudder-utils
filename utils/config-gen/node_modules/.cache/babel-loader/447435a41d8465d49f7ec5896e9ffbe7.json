{"ast":null,"code":"var _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/common/dottedCircle.tsx\";\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport is from 'typescript-styled-is';\nimport { Flex } from './misc';\nimport DestinationIcon from '@components/icons/destinationIcon';\nimport SourceIcon from '@components/icons/sourceIcon';\nconst DottedCircleOutline = styled(Flex)`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  border: 2px dashed ${({\n  theme\n}) => theme.color.grey100};\n  ${is('active')`\n    border: 2px dashed ${({\n  theme\n}) => theme.color.primary200};\n    `};\n  img {\n    max-width: 40px;\n    max-height: 40px;\n  }\n`;\nconst SolidInnerCircle = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 50%;\n  margin: auto;\n  background: ${({\n  theme\n}) => theme.color.primary200};\n  opacity: 0.3;\n`;\nexport const DottedCircle = props => {\n  if (props.iconName) {\n    return React.createElement(DottedCircleOutline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, props.destination ? React.createElement(DestinationIcon, {\n      destination: `${props.iconName}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }) : React.createElement(SourceIcon, {\n      source: `${props.iconName}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(DottedCircleOutline, {\n      active: props.solid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, props.solid && React.createElement(SolidInnerCircle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n};\nconst SolidCirlceOutline = styled(Flex)`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  border: 2px solid ${({\n  theme\n}) => theme.color.primary10};\n  background: ${({\n  theme\n}) => theme.color.white};\n  position: relative;\n  left: ${props => props.listIndex !== undefined ? -14 * (props.listIndex + 1) + 'px' : 0};\n  img {\n    max-width: 40px;\n    max-height: 40px;\n  }\n`;\nexport const IconCircle = props => {\n  return React.createElement(SolidCirlceOutline, {\n    listIndex: props.listIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, props.destination ? React.createElement(DestinationIcon, {\n    destination: `${props.name}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }) : React.createElement(SourceIcon, {\n    source: `${props.name}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/common/dottedCircle.tsx"],"names":["React","styled","is","Flex","DestinationIcon","SourceIcon","DottedCircleOutline","theme","color","grey100","primary200","SolidInnerCircle","div","DottedCircle","props","iconName","destination","solid","SolidCirlceOutline","primary10","white","listIndex","undefined","IconCircle","name"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,EAAP,MAAe,sBAAf;AAEA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,MAAMC,mBAAmB,GAAGL,MAAM,CAACE,IAAD,CAAO;;;;;;;;uBAQlB,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAN,CAAYC,OAAQ;IACtDP,EAAE,CAAC,QAAD,CAAW;yBACQ,CAAC;AAAEK,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAN,CAAYE,UAAW;KACzD;;;;;CAXN;AAkBA,MAAMC,gBAAgB,GAAGV,MAAM,CAACW,GAAI;;;;;gBAKpB,CAAC;AAAEL,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAN,CAAYE,UAAW;;CALtD;AAeA,OAAO,MAAMG,YAA0C,GACrDC,KADwD,IAErD;AACH,MAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,WACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACE,WAAN,GACC,oBAAC,eAAD;AAAiB,MAAA,WAAW,EAAG,GAAEF,KAAK,CAACC,QAAS,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGC,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAG,GAAED,KAAK,CAACC,QAAS,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADF;AASD,GAVD,MAUO;AACL,WACE,oBAAC,mBAAD;AAAqB,MAAA,MAAM,EAAED,KAAK,CAACG,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,KAAK,CAACG,KAAN,IAAe,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADlB,CADF;AAKD;AACF,CApBM;AAsBP,MAAMC,kBAAkB,GAAGjB,MAAM,CAACE,IAAD,CAAY;;;;;;;;sBAQvB,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAN,CAAYW,SAAU;gBAC3C,CAAC;AAAEZ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAN,CAAYY,KAAM;;UAEvCN,KAAK,IACXA,KAAK,CAACO,SAAN,KAAoBC,SAApB,GAAgC,CAAC,EAAD,IAAOR,KAAK,CAACO,SAAN,GAAkB,CAAzB,IAA8B,IAA9D,GAAqE,CAAE;;;;;CAZ3E;AAyBA,OAAO,MAAME,UAAsC,GACjDT,KADoD,IAEjD;AACH,SACE,oBAAC,kBAAD;AAAoB,IAAA,SAAS,EAAEA,KAAK,CAACO,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAACE,WAAN,GACC,oBAAC,eAAD;AAAiB,IAAA,WAAW,EAAG,GAAEF,KAAK,CAACU,IAAK,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAG,GAAEV,KAAK,CAACU,IAAK,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AASD,CAZM","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport is from 'typescript-styled-is';\n\nimport { Flex } from './misc';\nimport DestinationIcon from '@components/icons/destinationIcon';\nimport SourceIcon from '@components/icons/sourceIcon';\n\nconst DottedCircleOutline = styled(Flex)`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  border: 2px dashed ${({ theme }) => theme.color.grey100};\n  ${is('active')`\n    border: 2px dashed ${({ theme }) => theme.color.primary200};\n    `};\n  img {\n    max-width: 40px;\n    max-height: 40px;\n  }\n`;\n\nconst SolidInnerCircle = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 50%;\n  margin: auto;\n  background: ${({ theme }) => theme.color.primary200};\n  opacity: 0.3;\n`;\n\ninterface IDottedCircleProps {\n  solid?: boolean;\n  iconName?: string;\n  destination?: boolean;\n}\n\nexport const DottedCircle: React.FC<IDottedCircleProps> = (\n  props: IDottedCircleProps,\n) => {\n  if (props.iconName) {\n    return (\n      <DottedCircleOutline>\n        {props.destination ? (\n          <DestinationIcon destination={`${props.iconName}`} />\n        ) : (\n          <SourceIcon source={`${props.iconName}`} />\n        )}\n      </DottedCircleOutline>\n    );\n  } else {\n    return (\n      <DottedCircleOutline active={props.solid}>\n        {props.solid && <SolidInnerCircle />}\n      </DottedCircleOutline>\n    );\n  }\n};\n\nconst SolidCirlceOutline = styled(Flex)<any>`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  border: 2px solid ${({ theme }) => theme.color.primary10};\n  background: ${({ theme }) => theme.color.white};\n  position: relative;\n  left: ${props =>\n    props.listIndex !== undefined ? -14 * (props.listIndex + 1) + 'px' : 0};\n  img {\n    max-width: 40px;\n    max-height: 40px;\n  }\n`;\n\ninterface IIconCirlceProps {\n  name: string;\n  listIndex?: number;\n  destination?: boolean;\n}\n\nexport const IconCircle: React.FC<IIconCirlceProps> = (\n  props: IIconCirlceProps,\n) => {\n  return (\n    <SolidCirlceOutline listIndex={props.listIndex}>\n      {props.destination ? (\n        <DestinationIcon destination={`${props.name}`} />\n      ) : (\n        <SourceIcon source={`${props.name}`} />\n      )}\n    </SolidCirlceOutline>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}