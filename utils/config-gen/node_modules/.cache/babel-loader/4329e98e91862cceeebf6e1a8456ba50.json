{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/destination/addDestination.tsx\";\n\nimport { DottedCircle, IconCircle } from '@components/common/dottedCircle';\nimport { Input } from '@components/common/input';\nimport { Flex } from '@components/common/misc';\nimport { HeaderDiv, TextDiv } from '@components/common/typography';\nimport IconCardList from '@components/iconCardList';\nimport EmptySourceCard from '@components/sourceCard/emptySourceCard';\nimport Steps from '@components/steps';\nimport Step from '@components/steps/step';\nimport Svg from '@svg/index';\nimport { inject, observer } from 'mobx-react';\nimport queryString from 'query-string';\nimport * as React from 'react';\nimport { withRouter } from 'react-router';\nimport { withTheme } from 'styled-components';\nimport formTemplatesMap from '../destination/destinationSettings/destinationSettings.json';\nimport { AddDestDialogBody, DestNameInputContainer, IconCardListContainer, StyledContainer, FormContainer, FormBody } from './styles';\nimport DestinationSettings from './destinationSettings/destinationSettings';\nlet AddDestination = (_dec = inject('destinationDefsListStore', 'destinationsListStore', 'sourcesListStore'), _dec(_class = observer(_class = (_temp = class AddDestination extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.enableConnection = async () => {\n      const {\n        destinationsListStore\n      } = this.props;\n      const {\n        destinationName,\n        config,\n        selectedDestDef,\n        selectedSources\n      } = this.state;\n      const dest = await destinationsListStore.createDestination({\n        name: destinationName,\n        config: config,\n        destinationDefinitionId: selectedDestDef.id\n      });\n      await destinationsListStore.createDestinationConnections(dest, selectedSources.map(source => source.id));\n      this.setState({\n        destinationId: dest.id\n      });\n    };\n\n    this.handleNext = async event => {\n      const {\n        currentStep\n      } = this.state;\n\n      if (currentStep === 3) {\n        this.setState({\n          showNextLoader: true\n        });\n        await this.enableConnection();\n        this.props.history.push(`/`);\n      } else {\n        this.setState({\n          currentStep: currentStep + 1,\n          enableNextButton: false\n        });\n      }\n    };\n\n    this.handleCancel = event => {\n      if (this.props.history.length > 2) {\n        this.props.history.goBack();\n      } else {\n        this.props.history.push('/connections');\n      }\n    };\n\n    this.handleSelection = selectedMap => {\n      const destDefId = Object.keys(selectedMap)[0];\n\n      if (selectedMap[destDefId]) {\n        this.setState({\n          enableNextButton: true,\n          selectedDestDefintionId: destDefId,\n          selectedDestDef: this.state.filteredDestinationDefs.filter(def => def.id === destDefId)[0]\n        });\n      } else {\n        this.setState({\n          enableNextButton: false,\n          selectedDestDefintionId: null\n        });\n      }\n    };\n\n    this.handleNameChange = event => {\n      let enableNextButton = event.target.value.length > 0;\n      this.setState({\n        destinationName: event.target.value,\n        enableNextButton\n      });\n    };\n\n    this.handleSourceSelection = selectedMap => {\n      let sourceIds = Object.keys(selectedMap).filter(k => selectedMap[k]);\n\n      if (sourceIds.length < 1) {\n        return this.setState({\n          enableNextButton: false,\n          selectedSources: []\n        });\n      }\n\n      this.setState({\n        enableNextButton: true,\n        selectedSources: this.props.sourcesListStore.sources.filter(source => sourceIds.indexOf(source.id) > -1)\n      });\n    };\n\n    this.handleKeyDown = e => {\n      if (e.key === 'Enter' && this.state.enableNextButton) {\n        this.handleNext();\n      }\n    };\n\n    this.handleConfigChange = config => {\n      this.setState({\n        config\n      });\n    };\n\n    const parsed = queryString.parse(this.props.location.search);\n    let _selectedSources = [];\n\n    if (parsed.sourceId) {\n      const selectedSource = props.sourcesListStore.sources.find(source => source.id === parsed.sourceId);\n\n      if (selectedSource) {\n        _selectedSources = [selectedSource];\n      }\n    }\n\n    this.state = {\n      currentStep: parsed.destinationDefId ? 1 : 0,\n      enableNextButton: _selectedSources ? true : false,\n      destinationName: '',\n      selectedDestDefintionId: parsed.destinationDefId || null,\n      selectedDestDef: props.destinationDefsListStore.destinationDefs.filter(def => def.id === parsed.destinationDefId)[0] || null,\n      selectedSources: _selectedSources,\n      config: {},\n      showNextLoader: false,\n      filteredDestinationDefs: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      destinationDefsListStore\n    } = this.props;\n\n    if (destinationDefsListStore) {\n      const destinationDefs = destinationDefsListStore.destinationDefs;\n      const destinationSettingsArr = Object.keys(formTemplatesMap);\n      const filteredArr = [];\n      destinationDefs.map(def => {\n        if (destinationSettingsArr.includes(def.name)) {\n          filteredArr.push(def);\n        }\n      });\n      this.setState({\n        filteredDestinationDefs: filteredArr\n      });\n    }\n  }\n\n  // public handleTransformationSelection = (\n  //   transformation: ITransformationStore | null,\n  // ) => {\n  //   this.setState({ transformation });\n  // };\n  render() {\n    const {\n      selectedSources,\n      selectedDestDef,\n      destinationId,\n      filteredDestinationDefs\n    } = this.state;\n    let icon;\n\n    if (selectedSources.length > 0) {\n      icon = selectedSources.map(source => source.sourceDef.name);\n    } else {\n      icon = null;\n    }\n\n    return React.createElement(StyledContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(HeaderDiv, {\n      className: \"p-b-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Add Destination\"), React.createElement(Steps, {\n      onCancel: this.handleCancel,\n      onNext: this.handleNext,\n      current: this.state.currentStep,\n      enableNext: this.state.enableNextButton,\n      showNextLoader: this.state.showNextLoader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Step, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(AddDestDialogBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Flex, {\n      justifyContentCenter: true,\n      className: \"p-t-lg\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, icon != null ? React.createElement(DottedCircle, {\n      iconName: icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }) : React.createElement(DottedCircle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"p-l-sm p-r-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Svg, {\n      name: \"forward-thick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })), selectedDestDef != null ? React.createElement(DottedCircle, {\n      iconName: selectedDestDef.name,\n      destination: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }) : React.createElement(DottedCircle, {\n      solid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    })), React.createElement(HeaderDiv, {\n      className: \"text-center p-t-md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Choose a destination\"), React.createElement(IconCardListContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(IconCardList, {\n      type: \"destination\",\n      selectionMode: \"single\",\n      icons: filteredDestinationDefs.map(def => ({\n        id: def.id,\n        type: def.name,\n        title: def.displayName\n      })),\n      onSelectionChange: this.handleSelection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    })))), React.createElement(Step, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(AddDestDialogBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Flex, {\n      justifyContentCenter: true,\n      className: \"p-t-lg\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, icon ? React.createElement(DottedCircle, {\n      iconName: icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }) : React.createElement(DottedCircle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"p-l-sm p-r-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Svg, {\n      name: \"forward-thick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    })), selectedDestDef != null ? React.createElement(DottedCircle, {\n      iconName: selectedDestDef.name,\n      destination: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }) : React.createElement(DottedCircle, {\n      solid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    })), React.createElement(HeaderDiv, {\n      className: \"text-center p-t-md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Name destination\"), React.createElement(DestNameInputContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"eg. Google Analytics Dev\",\n      onChange: this.handleNameChange,\n      autoFocus: true,\n      onKeyDown: this.handleKeyDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(TextDiv, {\n      color: this.props.theme.color.grey300,\n      className: \"p-t-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Pick a name to help you identify this destination.\")))), React.createElement(Step, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, this.state.selectedDestDef && React.createElement(AddDestDialogBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Flex, {\n      justifyContentCenter: true,\n      className: \"p-t-lg\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(DottedCircle, {\n      solid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(Flex, {\n      className: \"selected-source-icons\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, this.state.selectedSources.map((source, index) => {\n      return React.createElement(IconCircle, {\n        name: source.sourceDef.name,\n        listIndex: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      });\n    })), React.createElement(\"div\", {\n      className: \"p-l-sm p-r-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Svg, {\n      name: \"forward-thick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    })), React.createElement(IconCircle, {\n      name: this.state.selectedDestDef.name,\n      destination: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    })), React.createElement(HeaderDiv, {\n      className: \"text-center p-t-md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Connect Sources\"), React.createElement(IconCardListContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, this.props.sourcesListStore.sources.length === 0 ? React.createElement(Flex, {\n      justifyContentCenter: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(EmptySourceCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    })) : React.createElement(IconCardList, {\n      type: \"source\",\n      selectionMode: \"multi\",\n      destinationDefConfig: this.state.selectedDestDef.config.sourceType,\n      icons: this.props.sourcesListStore.sources.map(source => ({\n        id: source.id,\n        type: source.sourceDef.name,\n        title: source.name,\n        selected: selectedSources.length > 0 ? source.id === selectedSources[0].id ? true : false : false\n      })),\n      onSelectionChange: this.handleSourceSelection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    })))), React.createElement(Step, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, this.state.selectedDestDef && React.createElement(FormBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(Flex, {\n      justifyContentCenter: true,\n      className: \"p-t-lg\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(DottedCircle, {\n      solid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }), React.createElement(Flex, {\n      className: \"selected-source-icons\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, this.state.selectedSources.map((source, index) => {\n      return React.createElement(IconCircle, {\n        name: source.sourceDef.name,\n        listIndex: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      });\n    })), React.createElement(\"div\", {\n      className: \"p-l-sm p-r-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(Svg, {\n      name: \"forward-thick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    })), React.createElement(IconCircle, {\n      name: this.state.selectedDestDef.name,\n      destination: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    })), React.createElement(FormContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(DestinationSettings, {\n      destName: this.state.selectedDestDef.name,\n      onSettingsChange: this.handleConfigChange,\n      setRequirementsState: reqsState => this.setState({\n        enableNextButton: reqsState\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }))))));\n  }\n\n}, _temp)) || _class) || _class);\nexport default withTheme(withRouter(AddDestination));","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/destination/addDestination.tsx"],"names":["DottedCircle","IconCircle","Input","Flex","HeaderDiv","TextDiv","IconCardList","EmptySourceCard","Steps","Step","Svg","inject","observer","queryString","React","withRouter","withTheme","formTemplatesMap","AddDestDialogBody","DestNameInputContainer","IconCardListContainer","StyledContainer","FormContainer","FormBody","DestinationSettings","AddDestination","Component","constructor","props","enableConnection","destinationsListStore","destinationName","config","selectedDestDef","selectedSources","state","dest","createDestination","name","destinationDefinitionId","id","createDestinationConnections","map","source","setState","destinationId","handleNext","event","currentStep","showNextLoader","history","push","enableNextButton","handleCancel","length","goBack","handleSelection","selectedMap","destDefId","Object","keys","selectedDestDefintionId","filteredDestinationDefs","filter","def","handleNameChange","target","value","handleSourceSelection","sourceIds","k","sourcesListStore","sources","indexOf","handleKeyDown","e","key","handleConfigChange","parsed","parse","location","search","sourceId","selectedSource","find","destinationDefId","destinationDefsListStore","destinationDefs","componentDidMount","destinationSettingsArr","filteredArr","includes","render","icon","sourceDef","type","title","displayName","theme","color","grey300","index","sourceType","selected","reqsState"],"mappings":"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","sourcesContent":["import { DottedCircle, IconCircle } from '@components/common/dottedCircle';\nimport { Input } from '@components/common/input';\nimport { Flex } from '@components/common/misc';\nimport { HeaderDiv, TextDiv } from '@components/common/typography';\nimport IconCardList from '@components/iconCardList';\nimport EmptySourceCard from '@components/sourceCard/emptySourceCard';\nimport Steps from '@components/steps';\nimport Step from '@components/steps/step';\nimport { IDestinationDefsListStore } from '@stores/destinationDefsList';\nimport { IDestinationsListStore } from '@stores/destinationsList';\nimport { ISourceStore } from '@stores/source';\nimport { ISourcesListStore } from '@stores/sourcesList';\nimport Svg from '@svg/index';\nimport { inject, observer } from 'mobx-react';\nimport queryString from 'query-string';\nimport * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport { withTheme } from 'styled-components';\nimport formTemplatesMap from '../destination/destinationSettings/destinationSettings.json';\n\nimport {\n  AddDestDialogBody,\n  DestNameInputContainer,\n  IconCardListContainer,\n  StyledContainer,\n  FormContainer,\n  CenterDiv,\n  FormBody,\n} from './styles';\nimport DestinationSettings from './destinationSettings/destinationSettings';\nimport { ISourceDefintion } from '@stores/sourceDefinitionsList';\n\nexport interface IAddDestinationProps extends RouteComponentProps<any> {\n  destinationDefsListStore: IDestinationDefsListStore;\n  destinationsListStore: IDestinationsListStore;\n  sourcesListStore: ISourcesListStore;\n  destinationDefId?: string;\n  theme: any;\n}\n\n@inject('destinationDefsListStore', 'destinationsListStore', 'sourcesListStore')\n@observer\nclass AddDestination extends React.Component<IAddDestinationProps, any> {\n  constructor(props: IAddDestinationProps) {\n    super(props);\n    const parsed = queryString.parse(this.props.location.search);\n\n    let selectedSources: any = [];\n    if (parsed.sourceId) {\n      const selectedSource = props.sourcesListStore.sources.find(\n        source => source.id === parsed.sourceId,\n      );\n      if (selectedSource) {\n        selectedSources = [selectedSource];\n      }\n    }\n    this.state = {\n      currentStep: parsed.destinationDefId ? 1 : 0,\n      enableNextButton: selectedSources ? true : false,\n      destinationName: '',\n      selectedDestDefintionId: parsed.destinationDefId || null,\n      selectedDestDef:\n        props.destinationDefsListStore.destinationDefs.filter(\n          def => def.id === parsed.destinationDefId,\n        )[0] || null,\n      selectedSources,\n      config: {},\n      showNextLoader: false,\n      filteredDestinationDefs: [],\n    };\n  }\n\n  componentDidMount() {\n    const { destinationDefsListStore } = this.props;\n\n    if (destinationDefsListStore) {\n      const destinationDefs = destinationDefsListStore!.destinationDefs;\n      const destinationSettingsArr = Object.keys(formTemplatesMap);\n      const filteredArr = [] as Array<object>;\n      destinationDefs.map(def => {\n        if (destinationSettingsArr.includes(def.name)) {\n          filteredArr.push(def);\n        }\n      });\n      this.setState({ filteredDestinationDefs: filteredArr });\n    }\n  }\n\n  public enableConnection = async () => {\n    const { destinationsListStore } = this.props;\n    const {\n      destinationName,\n      config,\n      selectedDestDef,\n      selectedSources,\n    } = this.state;\n    const dest = await destinationsListStore.createDestination({\n      name: destinationName,\n      config: config,\n      destinationDefinitionId: selectedDestDef.id,\n    });\n    await destinationsListStore.createDestinationConnections(\n      dest,\n      selectedSources.map((source: any) => source.id),\n    );\n    this.setState({ destinationId: dest.id });\n  };\n\n  public handleNext = async (event?: React.MouseEvent<HTMLElement>) => {\n    const { currentStep } = this.state;\n    if (currentStep === 3) {\n      this.setState({ showNextLoader: true });\n      await this.enableConnection();\n      this.props.history.push(`/`);\n    } else {\n      this.setState({\n        currentStep: currentStep + 1,\n        enableNextButton: false,\n      });\n    }\n  };\n\n  public handleCancel = (event: React.MouseEvent<HTMLElement>) => {\n    if (this.props.history.length > 2) {\n      this.props.history.goBack();\n    } else {\n      this.props.history.push('/connections');\n    }\n  };\n\n  public handleSelection = (selectedMap: any) => {\n    const destDefId = Object.keys(selectedMap)[0];\n    if (selectedMap[destDefId]) {\n      this.setState({\n        enableNextButton: true,\n        selectedDestDefintionId: destDefId,\n        selectedDestDef: this.state.filteredDestinationDefs.filter(\n          (def: any) => def.id === destDefId,\n        )[0],\n      });\n    } else {\n      this.setState({\n        enableNextButton: false,\n        selectedDestDefintionId: null,\n      });\n    }\n  };\n\n  public handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let enableNextButton = event.target.value.length > 0;\n    this.setState({ destinationName: event.target.value, enableNextButton });\n  };\n\n  public handleSourceSelection = (selectedMap: any) => {\n    let sourceIds = Object.keys(selectedMap).filter(k => selectedMap[k]);\n    if (sourceIds.length < 1) {\n      return this.setState({ enableNextButton: false, selectedSources: [] });\n    }\n    this.setState({\n      enableNextButton: true,\n      selectedSources: this.props.sourcesListStore.sources.filter(\n        source => sourceIds.indexOf(source.id) > -1,\n      ),\n    });\n  };\n\n  public handleKeyDown = (e: any) => {\n    if (e.key === 'Enter' && this.state.enableNextButton) {\n      this.handleNext();\n    }\n  };\n\n  public handleConfigChange = (config: any) => {\n    this.setState({ config });\n  };\n\n  // public handleTransformationSelection = (\n  //   transformation: ITransformationStore | null,\n  // ) => {\n  //   this.setState({ transformation });\n  // };\n\n  public render() {\n    const {\n      selectedSources,\n      selectedDestDef,\n      destinationId,\n      filteredDestinationDefs,\n    } = this.state;\n    let icon;\n    if (selectedSources.length > 0) {\n      icon = selectedSources.map((source: any) => source.sourceDef.name);\n    } else {\n      icon = null;\n    }\n    return (\n      <StyledContainer>\n        <HeaderDiv className=\"p-b-lg\">Add Destination</HeaderDiv>\n        <Steps\n          onCancel={this.handleCancel}\n          onNext={this.handleNext}\n          current={this.state.currentStep}\n          enableNext={this.state.enableNextButton}\n          showNextLoader={this.state.showNextLoader}\n        >\n          <Step>\n            <AddDestDialogBody>\n              <Flex justifyContentCenter className=\"p-t-lg\" alignItems=\"center\">\n                {icon != null ? (\n                  <DottedCircle iconName={icon} />\n                ) : (\n                  <DottedCircle />\n                )}\n                <div className=\"p-l-sm p-r-sm\">\n                  <Svg name=\"forward-thick\" />\n                </div>\n                {selectedDestDef != null ? (\n                  <DottedCircle iconName={selectedDestDef!.name} destination />\n                ) : (\n                  <DottedCircle solid />\n                )}\n              </Flex>\n              <HeaderDiv className=\"text-center p-t-md\">\n                Choose a destination\n              </HeaderDiv>\n              <IconCardListContainer>\n                <IconCardList\n                  type=\"destination\"\n                  selectionMode=\"single\"\n                  icons={filteredDestinationDefs.map((def: any) => ({\n                    id: def.id,\n                    type: def.name,\n                    title: def.displayName,\n                  }))}\n                  onSelectionChange={this.handleSelection}\n                />\n              </IconCardListContainer>\n            </AddDestDialogBody>\n          </Step>\n          <Step>\n            <AddDestDialogBody>\n              <Flex justifyContentCenter className=\"p-t-lg\" alignItems=\"center\">\n                {icon ? <DottedCircle iconName={icon} /> : <DottedCircle />}\n                <div className=\"p-l-sm p-r-sm\">\n                  <Svg name=\"forward-thick\" />\n                </div>\n                {selectedDestDef != null ? (\n                  <DottedCircle iconName={selectedDestDef!.name} destination />\n                ) : (\n                  <DottedCircle solid />\n                )}\n              </Flex>\n              <HeaderDiv className=\"text-center p-t-md\">\n                Name destination\n              </HeaderDiv>\n              <DestNameInputContainer>\n                <Input\n                  placeholder=\"eg. Google Analytics Dev\"\n                  onChange={this.handleNameChange}\n                  autoFocus\n                  onKeyDown={this.handleKeyDown}\n                />\n                <TextDiv\n                  color={this.props.theme.color.grey300}\n                  className=\"p-t-sm\"\n                >\n                  Pick a name to help you identify this destination.\n                </TextDiv>\n              </DestNameInputContainer>\n            </AddDestDialogBody>\n          </Step>\n          <Step>\n            {this.state.selectedDestDef && (\n              <AddDestDialogBody>\n                <Flex\n                  justifyContentCenter\n                  className=\"p-t-lg\"\n                  alignItems=\"center\"\n                >\n                  <DottedCircle solid />\n                  <Flex className=\"selected-source-icons\" alignItems=\"center\">\n                    {this.state.selectedSources.map(\n                      (source: ISourceStore, index: number) => {\n                        return (\n                          <IconCircle\n                            name={source.sourceDef.name}\n                            listIndex={index}\n                          />\n                        );\n                      },\n                    )}\n                  </Flex>\n                  <div className=\"p-l-sm p-r-sm\">\n                    <Svg name=\"forward-thick\" />\n                  </div>\n                  <IconCircle\n                    name={this.state.selectedDestDef!.name}\n                    destination\n                  />\n                </Flex>\n                <HeaderDiv className=\"text-center p-t-md\">\n                  Connect Sources\n                </HeaderDiv>\n                <IconCardListContainer>\n                  {this.props.sourcesListStore.sources.length === 0 ? (\n                    <Flex justifyContentCenter>\n                      <EmptySourceCard />\n                    </Flex>\n                  ) : (\n                    <IconCardList\n                      type=\"source\"\n                      selectionMode=\"multi\"\n                      destinationDefConfig={\n                        this.state.selectedDestDef.config.sourceType\n                      }\n                      icons={this.props.sourcesListStore.sources.map(\n                        source => ({\n                          id: source.id,\n                          type: source.sourceDef.name,\n                          title: source.name,\n                          selected:\n                            selectedSources.length > 0\n                              ? source.id === selectedSources[0].id\n                                ? true\n                                : false\n                              : false,\n                        }),\n                      )}\n                      onSelectionChange={this.handleSourceSelection}\n                    />\n                  )}\n                </IconCardListContainer>\n              </AddDestDialogBody>\n            )}\n          </Step>\n          <Step>\n            {this.state.selectedDestDef && (\n              <FormBody>\n                <Flex\n                  justifyContentCenter\n                  className=\"p-t-lg\"\n                  alignItems=\"center\"\n                >\n                  <DottedCircle solid />\n                  <Flex className=\"selected-source-icons\" alignItems=\"center\">\n                    {this.state.selectedSources.map(\n                      (source: ISourceStore, index: number) => {\n                        return (\n                          <IconCircle\n                            name={source.sourceDef.name}\n                            listIndex={index}\n                          />\n                        );\n                      },\n                    )}\n                  </Flex>\n                  <div className=\"p-l-sm p-r-sm\">\n                    <Svg name=\"forward-thick\" />\n                  </div>\n                  <IconCircle\n                    name={this.state.selectedDestDef!.name}\n                    destination\n                  />\n                </Flex>\n                <FormContainer>\n                  <DestinationSettings\n                    destName={this.state.selectedDestDef!.name}\n                    onSettingsChange={this.handleConfigChange}\n                    setRequirementsState={(reqsState: any) =>\n                      this.setState({ enableNextButton: reqsState })\n                    }\n                  ></DestinationSettings>\n                </FormContainer>\n              </FormBody>\n            )}\n          </Step>\n        </Steps>\n      </StyledContainer>\n    );\n  }\n}\n\nexport default withTheme(withRouter(AddDestination));\n"]},"metadata":{},"sourceType":"module"}