{"ast":null,"code":"import _initializerDefineProperty from \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _dec2, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _temp;\n\nimport { action, computed, observable } from 'mobx';\nexport let SourceStore = (_dec = action.bound, _dec2 = action.bound, (_class = (_temp = class SourceStore {\n  constructor(source, rootStore) {\n    _initializerDefineProperty(this, \"id\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"name\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"writeKey\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"enabled\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"config\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"sourceDefinitionId\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"rootStore\", _descriptor7, this);\n\n    this.id = source.id;\n    this.name = source.name;\n    this.writeKey = source.writeKey;\n    this.enabled = source.enabled;\n    this.config = source.config;\n    this.sourceDefinitionId = source.sourceDefinitionId;\n    this.rootStore = rootStore;\n  }\n\n  setName(name) {\n    this.name = name;\n  }\n\n  get sourceDef() {\n    return this.rootStore.sourceDefinitionsListStore.getSourceDef(this.sourceDefinitionId);\n  }\n\n  get destinations() {\n    let destIds = this.rootStore.connectionsStore.connections[this.id] || [];\n    return this.rootStore.destinationsListStore.destinations.filter(dest => {\n      return destIds.indexOf(dest.id) > -1;\n    });\n  } // useful for debugging\n\n  /* reaction = reaction(\n    () => this.rootStore.destinationsListStore.destinations,\n    dests => {\n      console.log('changing...', dests);\n    },\n  ); */\n\n\n  async toggleEnabled() {\n    this.enabled = !this.enabled;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"id\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"name\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"writeKey\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"enabled\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"config\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"sourceDefinitionId\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"rootStore\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class.prototype, \"setName\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"setName\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"sourceDef\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"sourceDef\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"destinations\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"destinations\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"toggleEnabled\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"toggleEnabled\"), _class.prototype)), _class));","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/stores/source.ts"],"names":["action","computed","observable","SourceStore","bound","constructor","source","rootStore","id","name","writeKey","enabled","config","sourceDefinitionId","setName","sourceDef","sourceDefinitionsListStore","getSourceDef","destinations","destIds","connectionsStore","connections","destinationsListStore","filter","dest","indexOf","toggleEnabled"],"mappings":";;;;;;AACA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,UAA3B,QAA8D,MAA9D;AAmBA,WAAaC,WAAb,WAmBGH,MAAM,CAACI,KAnBV,UA6CGJ,MAAM,CAACI,KA7CV,qBAAO,MAAMD,WAAN,CAA0C;AAS/CE,EAAAA,WAAW,CAACC,MAAD,EAAuBC,SAAvB,EAA8C;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACvD,SAAKC,EAAL,GAAUF,MAAM,CAACE,EAAjB;AACA,SAAKC,IAAL,GAAYH,MAAM,CAACG,IAAnB;AACA,SAAKC,QAAL,GAAgBJ,MAAM,CAACI,QAAvB;AACA,SAAKC,OAAL,GAAeL,MAAM,CAACK,OAAtB;AACA,SAAKC,MAAL,GAAcN,MAAM,CAACM,MAArB;AACA,SAAKC,kBAAL,GAA0BP,MAAM,CAACO,kBAAjC;AACA,SAAKN,SAAL,GAAiBA,SAAjB;AACD;;AAGMO,EAAAA,OADP,CACeL,IADf,EACmC;AACjC,SAAKA,IAAL,GAAYA,IAAZ;AACD;;AAED,MAAcM,SAAd,GAA0B;AACxB,WAAO,KAAKR,SAAL,CAAeS,0BAAf,CAA0CC,YAA1C,CACL,KAAKJ,kBADA,CAAP;AAGD;;AAED,MAAcK,YAAd,GAA6B;AAC3B,QAAIC,OAAO,GAAG,KAAKZ,SAAL,CAAea,gBAAf,CAAgCC,WAAhC,CAA4C,KAAKb,EAAjD,KAAwD,EAAtE;AACA,WAAO,KAAKD,SAAL,CAAee,qBAAf,CAAqCJ,YAArC,CAAkDK,MAAlD,CAAyDC,IAAI,IAAI;AACtE,aAAOL,OAAO,CAACM,OAAR,CAAgBD,IAAI,CAAChB,EAArB,IAA2B,CAAC,CAAnC;AACD,KAFM,CAAP;AAGD,GAnC8C,CAqC/C;;AACA;;;;;;;;AAOA,QAIakB,aAJb,GAI6B;AAC3B,SAAKf,OAAL,GAAe,CAAC,KAAKA,OAArB;AACD;;AAnD8C,CAAjD,4EACGT,UADH;AAAA;AAAA;AAAA;AAAA;AAAA,wEAEGA,UAFH;AAAA;AAAA;AAAA;AAAA;AAAA,4EAGGA,UAHH;AAAA;AAAA;AAAA;AAAA;AAAA,2EAIGA,UAJH;AAAA;AAAA;AAAA;AAAA;AAAA,0EAKGA,UALH;AAAA;AAAA;AAAA;AAAA;AAAA,sFAMGA,UANH;AAAA;AAAA;AAAA;AAAA;AAAA,6EAOGA,UAPH;AAAA;AAAA;AAAA;AAAA;AAAA,8MAwBGD,QAxBH,mJA8BGA,QA9BH","sourcesContent":["import { ISourceDefintion } from '@stores/sourceDefinitionsList';\nimport { action, computed, observable, reaction, trace } from 'mobx';\n\nimport { IDestinationStore } from './destination';\nimport { IRootStore } from './index';\n\nexport interface ISourceStore {\n  id: string;\n  name: string;\n  writeKey: string;\n  enabled: boolean;\n  config: JSON;\n  sourceDefinitionId: any;\n  sourceDef: ISourceDefintion;\n  rootStore: IRootStore;\n  destinations: IDestinationStore[];\n  setName(name: string): void;\n  toggleEnabled(): void;\n}\n\nexport class SourceStore implements ISourceStore {\n  @observable public id: string;\n  @observable public name: string;\n  @observable public writeKey: string;\n  @observable public enabled: boolean;\n  @observable public config: JSON;\n  @observable public sourceDefinitionId: any;\n  @observable public rootStore: IRootStore;\n\n  constructor(source: ISourceStore, rootStore: IRootStore) {\n    this.id = source.id;\n    this.name = source.name;\n    this.writeKey = source.writeKey;\n    this.enabled = source.enabled;\n    this.config = source.config;\n    this.sourceDefinitionId = source.sourceDefinitionId;\n    this.rootStore = rootStore;\n  }\n\n  @action.bound\n  public setName(name: string): void {\n    this.name = name;\n  }\n\n  @computed get sourceDef() {\n    return this.rootStore.sourceDefinitionsListStore.getSourceDef(\n      this.sourceDefinitionId,\n    );\n  }\n\n  @computed get destinations() {\n    let destIds = this.rootStore.connectionsStore.connections[this.id] || [];\n    return this.rootStore.destinationsListStore.destinations.filter(dest => {\n      return destIds.indexOf(dest.id) > -1;\n    });\n  }\n\n  // useful for debugging\n  /* reaction = reaction(\n    () => this.rootStore.destinationsListStore.destinations,\n    dests => {\n      console.log('changing...', dests);\n    },\n  ); */\n\n  @action.bound\n  /**\n   * toggleEnabled\n   */\n  public async toggleEnabled() {\n    this.enabled = !this.enabled;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}