{"ast":null,"code":"'use strict';\n\nconst baseConvertIntArray = require('base-convert-int-array');\n\nconst CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\nfunction encode(buffer, fixedLength) {\n  return baseConvertIntArray(buffer, {\n    from: 256,\n    to: 62,\n    fixedLength\n  }).map(value => CHARS[value]).join('');\n}\n\nexports.encode = encode;\n\nfunction decode(string, fixedLength) {\n  // Optimization from https://github.com/andrew/base62.js/pull/31.\n  const input = Array.from(string, char => {\n    const charCode = char.charCodeAt(0);\n    if (charCode < 58) return charCode - 48;\n    if (charCode < 91) return charCode - 55;\n    return charCode - 61;\n  });\n  return Buffer.from(baseConvertIntArray(input, {\n    from: 62,\n    to: 256,\n    fixedLength\n  }));\n}\n\nexports.decode = decode;","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/node_modules/ksuid/base62.js"],"names":["baseConvertIntArray","require","CHARS","encode","buffer","fixedLength","from","to","map","value","join","exports","decode","string","input","Array","char","charCode","charCodeAt","Buffer"],"mappings":"AAAA;;AACA,MAAMA,mBAAmB,GAAGC,OAAO,CAAC,wBAAD,CAAnC;;AAEA,MAAMC,KAAK,GAAG,gEAAd;;AAEA,SAASC,MAAT,CAAiBC,MAAjB,EAAyBC,WAAzB,EAAsC;AACpC,SAAOL,mBAAmB,CAACI,MAAD,EAAS;AAACE,IAAAA,IAAI,EAAE,GAAP;AAAYC,IAAAA,EAAE,EAAE,EAAhB;AAAoBF,IAAAA;AAApB,GAAT,CAAnB,CACJG,GADI,CACAC,KAAK,IAAIP,KAAK,CAACO,KAAD,CADd,EAEJC,IAFI,CAEC,EAFD,CAAP;AAGD;;AACDC,OAAO,CAACR,MAAR,GAAiBA,MAAjB;;AAEA,SAASS,MAAT,CAAiBC,MAAjB,EAAyBR,WAAzB,EAAsC;AACpC;AACA,QAAMS,KAAK,GAAGC,KAAK,CAACT,IAAN,CAAWO,MAAX,EAAmBG,IAAI,IAAI;AACvC,UAAMC,QAAQ,GAAGD,IAAI,CAACE,UAAL,CAAgB,CAAhB,CAAjB;AACA,QAAID,QAAQ,GAAG,EAAf,EAAmB,OAAOA,QAAQ,GAAG,EAAlB;AACnB,QAAIA,QAAQ,GAAG,EAAf,EAAmB,OAAOA,QAAQ,GAAG,EAAlB;AACnB,WAAOA,QAAQ,GAAG,EAAlB;AACD,GALa,CAAd;AAMA,SAAOE,MAAM,CAACb,IAAP,CAAYN,mBAAmB,CAACc,KAAD,EAAQ;AAACR,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,EAAE,EAAE,GAAf;AAAoBF,IAAAA;AAApB,GAAR,CAA/B,CAAP;AACD;;AACDM,OAAO,CAACC,MAAR,GAAiBA,MAAjB","sourcesContent":["'use strict'\nconst baseConvertIntArray = require('base-convert-int-array')\n\nconst CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'\n\nfunction encode (buffer, fixedLength) {\n  return baseConvertIntArray(buffer, {from: 256, to: 62, fixedLength})\n    .map(value => CHARS[value])\n    .join('')\n}\nexports.encode = encode\n\nfunction decode (string, fixedLength) {\n  // Optimization from https://github.com/andrew/base62.js/pull/31.\n  const input = Array.from(string, char => {\n    const charCode = char.charCodeAt(0)\n    if (charCode < 58) return charCode - 48\n    if (charCode < 91) return charCode - 55\n    return charCode - 61\n  })\n  return Buffer.from(baseConvertIntArray(input, {from: 62, to: 256, fixedLength}))\n}\nexports.decode = decode\n"]},"metadata":{},"sourceType":"script"}