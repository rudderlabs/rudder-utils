{"ast":null,"code":"var _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/sourcesCatalogue/sourcesConfigure/index.tsx\";\nimport { ButtonPrimary } from '@components/common/button';\nimport SourceIcon from '@components/icons/sourceIcon';\nimport * as React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Link } from 'react-router-dom';\nimport theme from '@css/theme';\nimport { Flex } from '../../common/misc';\nimport { Header } from '../../common/typography'; // @ts-ignore\n\nexport const markdown = {\n  Android: \"## Related links\\n\\n[Documentation][]  \\n[View on Github][]\\n\\n[//]: # \\\"These are reference links used in the body of this note and get stripped out when the markdown processor does its job. There is no need to format nicely because it shouldn't be seen. Thanks SO - http://stackoverflow.com/questions/4823468/store-comments-in-markdown-syntax\\\"\\n[documentation]: https://docs.rudderlabs.com/sdk-integration-guide/getting-started-with-android-sdk\\n[view on github]: https://github.com/rudderlabs/rudder-sdk-android\\n\",\n  iOS: \"## Related links\\n\\n[Documentation][]  \\n[View on Github][]\\n\\n[//]: # \\\"These are reference links used in the body of this note and get stripped out when the markdown processor does its job. There is no need to format nicely because it shouldn't be seen. Thanks SO - http://stackoverflow.com/questions/4823468/store-comments-in-markdown-syntax\\\"\\n[documentation]: https://docs.rudderlabs.com/sdk-integration-guide/getting-started-with-ios-sdk\\n[view on github]: https://github.com/rudderlabs/rudder-sdk-android\\n\",\n  Javascript: \"## Related links\\n\\n[Documentation][]  \\n[View on Github][]\\n\\n[//]: # \\\"These are reference links used in the body of this note and get stripped out when the markdown processor does its job. There is no need to format nicely because it shouldn't be seen. Thanks SO - http://stackoverflow.com/questions/4823468/store-comments-in-markdown-syntax\\\"\\n[documentation]: https://github.com/rudderlabs/rudder-sdk-js\\n[view on github]: https://github.com/rudderlabs/rudder-sdk-js\\n\",\n  Unity: \"## Related links\\n\\n[Documentation][]  \\n[View on Github][]\\n\\n[//]: # \\\"These are reference links used in the body of this note and get stripped out when the markdown processor does its job. There is no need to format nicely because it shouldn't be seen. Thanks SO - http://stackoverflow.com/questions/4823468/store-comments-in-markdown-syntax\\\"\\n[documentation]: https://docs.rudderlabs.com/sdk-integration-guide/getting-started-with-unity-sdk\\n[view on github]: https://github.com/rudderlabs/rudder-sdk-unity\\n\"\n};\nexport default class SourceConfigure extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdown: ''\n    };\n  }\n\n  render() {\n    const {\n      sourceDef\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"p-l-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Flex, {\n      className: \"m-b-lg p-b-md b-b-grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(SourceIcon, {\n      source: sourceDef.name,\n      height: theme.iconSize.large,\n      width: theme.iconSize.large,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"m-l-md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Header, {\n      color: theme.color.black,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, sourceDef.name))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: `/sources/setup?sourceDefId=${sourceDef.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(ButtonPrimary, {\n      className: \"m-b-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Configure\")), React.createElement(ReactMarkdown, {\n      source: markdown[sourceDef.name],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/sourcesCatalogue/sourcesConfigure/index.tsx"],"names":["ButtonPrimary","SourceIcon","React","ReactMarkdown","Link","theme","Flex","Header","markdown","Android","iOS","Javascript","Unity","SourceConfigure","Component","constructor","props","state","render","sourceDef","name","iconSize","large","color","black","id"],"mappings":";AAAA,SAASA,aAAT,QAA8B,2BAA9B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAKA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,MAAT,QAAgC,yBAAhC,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG;AACtBC,EAAAA,OAAO,ygBADe;AAEtBC,EAAAA,GAAG,qgBAFmB;AAGtBC,EAAAA,UAAU,6dAHY;AAItBC,EAAAA,KAAK;AAJiB,CAAjB;AAcP,eAAe,MAAMC,eAAN,SAA8BX,KAAK,CAACY,SAApC,CAGb;AACAC,EAAAA,WAAW,CAACC,KAAD,EAA+B;AACxC,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXT,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEMU,EAAAA,MAAP,GAAgB;AACd,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKH,KAA3B;AACA,WACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,MAAM,EAAEG,SAAS,CAAEC,IADrB;AAEE,MAAA,MAAM,EAAEf,KAAK,CAACgB,QAAN,CAAeC,KAFzB;AAGE,MAAA,KAAK,EAAEjB,KAAK,CAACgB,QAAN,CAAeC,KAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEjB,KAAK,CAACkB,KAAN,CAAYC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCL,SAAS,CAAEC,IAA9C,CADF,CANF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,8BAA6BD,SAAS,CAAEM,EAAG,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,EAIE,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAGjB,QAAD,CAAkBW,SAAS,CAAEC,IAA7B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAXF,CADF;AAoBD;;AA9BD","sourcesContent":["import { ButtonPrimary } from '@components/common/button';\nimport SourceIcon from '@components/icons/sourceIcon';\nimport { ISourceDefintion } from '@stores/sourceDefinitionsList';\n\n// @ts-ignore\nimport raw from 'raw.macro';\nimport * as React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Link } from 'react-router-dom';\n\nimport theme from '@css/theme';\nimport { Flex } from '../../common/misc';\nimport { Header, TextDiv } from '../../common/typography';\n\n// @ts-ignore\nexport const markdown = {\n  Android: raw('./Android.md'),\n  iOS: raw('./iOS.md'),\n  Javascript: raw('./Javascript.md'),\n  Unity: raw('./Unity.md'),\n};\n\nexport interface ISourceConfigureProps {\n  sourceDef?: ISourceDefintion;\n}\nexport interface ISourceConfigureState {\n  markdown: string;\n}\n\nexport default class SourceConfigure extends React.Component<\n  ISourceConfigureProps,\n  ISourceConfigureState\n> {\n  constructor(props: ISourceConfigureProps) {\n    super(props);\n    this.state = {\n      markdown: '',\n    };\n  }\n\n  public render() {\n    const { sourceDef } = this.props;\n    return (\n      <div className=\"p-l-lg\">\n        <Flex className=\"m-b-lg p-b-md b-b-grey\">\n          <SourceIcon\n            source={sourceDef!.name}\n            height={theme.iconSize.large}\n            width={theme.iconSize.large}\n          ></SourceIcon>\n          <div className=\"m-l-md\">\n            <Header color={theme.color.black}>{sourceDef!.name}</Header>\n          </div>\n        </Flex>\n        <div>\n          <Link to={`/sources/setup?sourceDefId=${sourceDef!.id}`}>\n            <ButtonPrimary className=\"m-b-lg\">Configure</ButtonPrimary>\n          </Link>\n          <ReactMarkdown source={(markdown as any)[sourceDef!.name]} />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}