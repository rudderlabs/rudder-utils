{"ast":null,"code":"/*!\n * get-value <https://github.com/jonschlinkert/get-value>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\nconst isObject = require('isobject');\n\nmodule.exports = function (target, path, options) {\n  if (!isObject(options)) {\n    options = {\n      default: options\n    };\n  }\n\n  if (!isValidObject(target)) {\n    return typeof options.default !== 'undefined' ? options.default : target;\n  }\n\n  if (typeof path === 'number') {\n    path = String(path);\n  }\n\n  const isArray = Array.isArray(path);\n  const isString = typeof path === 'string';\n  const splitChar = options.separator || '.';\n  const joinChar = options.joinChar || (typeof splitChar === 'string' ? splitChar : '.');\n\n  if (!isString && !isArray) {\n    return target;\n  }\n\n  if (isString && path in target) {\n    return isValid(path, target, options) ? target[path] : options.default;\n  }\n\n  let segs = isArray ? path : split(path, splitChar, options);\n  let len = segs.length;\n  let idx = 0;\n\n  do {\n    let prop = segs[idx];\n\n    if (typeof prop === 'number') {\n      prop = String(prop);\n    }\n\n    while (prop && prop.slice(-1) === '\\\\') {\n      prop = join([prop.slice(0, -1), segs[++idx] || ''], joinChar, options);\n    }\n\n    if (prop in target) {\n      if (!isValid(prop, target, options)) {\n        return options.default;\n      }\n\n      target = target[prop];\n    } else {\n      let hasProp = false;\n      let n = idx + 1;\n\n      while (n < len) {\n        prop = join([prop, segs[n++]], joinChar, options);\n\n        if (hasProp = prop in target) {\n          if (!isValid(prop, target, options)) {\n            return options.default;\n          }\n\n          target = target[prop];\n          idx = n - 1;\n          break;\n        }\n      }\n\n      if (!hasProp) {\n        return options.default;\n      }\n    }\n  } while (++idx < len && isValidObject(target));\n\n  if (idx === len) {\n    return target;\n  }\n\n  return options.default;\n};\n\nfunction join(segs, joinChar, options) {\n  if (typeof options.join === 'function') {\n    return options.join(segs);\n  }\n\n  return segs[0] + joinChar + segs[1];\n}\n\nfunction split(path, splitChar, options) {\n  if (typeof options.split === 'function') {\n    return options.split(path);\n  }\n\n  return path.split(splitChar);\n}\n\nfunction isValid(key, target, options) {\n  if (typeof options.isValid === 'function') {\n    return options.isValid(key, target);\n  }\n\n  return true;\n}\n\nfunction isValidObject(val) {\n  return isObject(val) || Array.isArray(val) || typeof val === 'function';\n}","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/node_modules/get-value/index.js"],"names":["isObject","require","module","exports","target","path","options","default","isValidObject","String","isArray","Array","isString","splitChar","separator","joinChar","isValid","segs","split","len","length","idx","prop","slice","join","hasProp","n","key","val"],"mappings":"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","sourcesContent":["/*!\n * get-value <https://github.com/jonschlinkert/get-value>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nconst isObject = require('isobject');\n\nmodule.exports = function(target, path, options) {\n  if (!isObject(options)) {\n    options = { default: options };\n  }\n\n  if (!isValidObject(target)) {\n    return typeof options.default !== 'undefined' ? options.default : target;\n  }\n\n  if (typeof path === 'number') {\n    path = String(path);\n  }\n\n  const isArray = Array.isArray(path);\n  const isString = typeof path === 'string';\n  const splitChar = options.separator || '.';\n  const joinChar = options.joinChar || (typeof splitChar === 'string' ? splitChar : '.');\n\n  if (!isString && !isArray) {\n    return target;\n  }\n\n  if (isString && path in target) {\n    return isValid(path, target, options) ? target[path] : options.default;\n  }\n\n  let segs = isArray ? path : split(path, splitChar, options);\n  let len = segs.length;\n  let idx = 0;\n\n  do {\n    let prop = segs[idx];\n    if (typeof prop === 'number') {\n      prop = String(prop);\n    }\n\n    while (prop && prop.slice(-1) === '\\\\') {\n      prop = join([prop.slice(0, -1), segs[++idx] || ''], joinChar, options);\n    }\n\n    if (prop in target) {\n      if (!isValid(prop, target, options)) {\n        return options.default;\n      }\n\n      target = target[prop];\n    } else {\n      let hasProp = false;\n      let n = idx + 1;\n\n      while (n < len) {\n        prop = join([prop, segs[n++]], joinChar, options);\n\n        if ((hasProp = prop in target)) {\n          if (!isValid(prop, target, options)) {\n            return options.default;\n          }\n\n          target = target[prop];\n          idx = n - 1;\n          break;\n        }\n      }\n\n      if (!hasProp) {\n        return options.default;\n      }\n    }\n  } while (++idx < len && isValidObject(target));\n\n  if (idx === len) {\n    return target;\n  }\n\n  return options.default;\n};\n\nfunction join(segs, joinChar, options) {\n  if (typeof options.join === 'function') {\n    return options.join(segs);\n  }\n  return segs[0] + joinChar + segs[1];\n}\n\nfunction split(path, splitChar, options) {\n  if (typeof options.split === 'function') {\n    return options.split(path);\n  }\n  return path.split(splitChar);\n}\n\nfunction isValid(key, target, options) {\n  if (typeof options.isValid === 'function') {\n    return options.isValid(key, target);\n  }\n  return true;\n}\n\nfunction isValidObject(val) {\n  return isObject(val) || Array.isArray(val) || typeof val === 'function';\n}\n"]},"metadata":{},"sourceType":"script"}