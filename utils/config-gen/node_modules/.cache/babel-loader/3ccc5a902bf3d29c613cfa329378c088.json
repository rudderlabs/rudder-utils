{"ast":null,"code":"'use strict';\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nvar xtend = require('xtend');\n\nvar unified = require('unified');\n\nvar parse = require('remark-parse');\n\nvar PropTypes = require('prop-types');\n\nvar addListMetadata = require('mdast-add-list-metadata');\n\nvar naiveHtml = require('./plugins/naive-html');\n\nvar disallowNode = require('./plugins/disallow-node');\n\nvar astToReact = require('./ast-to-react');\n\nvar wrapTableRows = require('./wrap-table-rows');\n\nvar getDefinitions = require('./get-definitions');\n\nvar uriTransformer = require('./uri-transformer');\n\nvar defaultRenderers = require('./renderers');\n\nvar symbols = require('./symbols');\n\nvar allTypes = Object.keys(defaultRenderers);\n\nvar ReactMarkdown = function ReactMarkdown(props) {\n  var src = props.source || props.children || '';\n  var parserOptions = props.parserOptions;\n\n  if (props.allowedTypes && props.disallowedTypes) {\n    throw new Error('Only one of `allowedTypes` and `disallowedTypes` should be defined');\n  }\n\n  var renderers = xtend(defaultRenderers, props.renderers);\n  var plugins = [[parse, parserOptions]].concat(props.plugins || []);\n  var parser = plugins.reduce(applyParserPlugin, unified());\n  var rawAst = parser.parse(src);\n  var renderProps = xtend(props, {\n    renderers: renderers,\n    definitions: getDefinitions(rawAst)\n  });\n  var astPlugins = determineAstPlugins(props);\n  var ast = astPlugins.reduce(function (node, plugin) {\n    return plugin(node, renderProps);\n  }, rawAst);\n  return astToReact(ast, renderProps);\n};\n\nfunction applyParserPlugin(parser, plugin) {\n  return Array.isArray(plugin) ? parser.use.apply(parser, _toConsumableArray(plugin)) : parser.use(plugin);\n}\n\nfunction determineAstPlugins(props) {\n  var plugins = [wrapTableRows, addListMetadata()];\n  var disallowedTypes = props.disallowedTypes;\n\n  if (props.allowedTypes) {\n    disallowedTypes = allTypes.filter(function (type) {\n      return type !== 'root' && props.allowedTypes.indexOf(type) === -1;\n    });\n  }\n\n  var removalMethod = props.unwrapDisallowed ? 'unwrap' : 'remove';\n\n  if (disallowedTypes && disallowedTypes.length > 0) {\n    plugins.push(disallowNode.ofType(disallowedTypes, removalMethod));\n  }\n\n  if (props.allowNode) {\n    plugins.push(disallowNode.ifNotMatch(props.allowNode, removalMethod));\n  }\n\n  var renderHtml = !props.escapeHtml && !props.skipHtml;\n  var hasHtmlParser = (props.astPlugins || []).some(function (item) {\n    var plugin = Array.isArray(item) ? item[0] : item;\n    return plugin.identity === symbols.HtmlParser;\n  });\n\n  if (renderHtml && !hasHtmlParser) {\n    plugins.push(naiveHtml);\n  }\n\n  return props.astPlugins ? plugins.concat(props.astPlugins) : plugins;\n}\n\nReactMarkdown.defaultProps = {\n  renderers: {},\n  escapeHtml: true,\n  skipHtml: false,\n  sourcePos: false,\n  rawSourcePos: false,\n  transformLinkUri: uriTransformer,\n  astPlugins: [],\n  plugins: [],\n  parserOptions: {}\n};\nReactMarkdown.propTypes = {\n  className: PropTypes.string,\n  source: PropTypes.string,\n  children: PropTypes.string,\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  escapeHtml: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  allowNode: PropTypes.func,\n  allowedTypes: PropTypes.arrayOf(PropTypes.oneOf(allTypes)),\n  disallowedTypes: PropTypes.arrayOf(PropTypes.oneOf(allTypes)),\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  astPlugins: PropTypes.arrayOf(PropTypes.func),\n  unwrapDisallowed: PropTypes.bool,\n  renderers: PropTypes.object,\n  plugins: PropTypes.array,\n  parserOptions: PropTypes.object\n};\nReactMarkdown.types = allTypes;\nReactMarkdown.renderers = defaultRenderers;\nReactMarkdown.uriTransformer = uriTransformer;\nmodule.exports = ReactMarkdown;","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/node_modules/react-markdown/lib/react-markdown.js"],"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","isArray","i","arr2","length","xtend","require","unified","parse","PropTypes","addListMetadata","naiveHtml","disallowNode","astToReact","wrapTableRows","getDefinitions","uriTransformer","defaultRenderers","symbols","allTypes","keys","ReactMarkdown","props","src","source","children","parserOptions","allowedTypes","disallowedTypes","Error","renderers","plugins","concat","parser","reduce","applyParserPlugin","rawAst","renderProps","definitions","astPlugins","determineAstPlugins","ast","node","plugin","use","apply","filter","type","indexOf","removalMethod","unwrapDisallowed","push","ofType","allowNode","ifNotMatch","renderHtml","escapeHtml","skipHtml","hasHtmlParser","some","item","identity","HtmlParser","defaultProps","sourcePos","rawSourcePos","transformLinkUri","propTypes","className","string","bool","func","arrayOf","oneOf","oneOfType","linkTarget","transformImageUri","object","array","types","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar xtend = require('xtend');\n\nvar unified = require('unified');\n\nvar parse = require('remark-parse');\n\nvar PropTypes = require('prop-types');\n\nvar addListMetadata = require('mdast-add-list-metadata');\n\nvar naiveHtml = require('./plugins/naive-html');\n\nvar disallowNode = require('./plugins/disallow-node');\n\nvar astToReact = require('./ast-to-react');\n\nvar wrapTableRows = require('./wrap-table-rows');\n\nvar getDefinitions = require('./get-definitions');\n\nvar uriTransformer = require('./uri-transformer');\n\nvar defaultRenderers = require('./renderers');\n\nvar symbols = require('./symbols');\n\nvar allTypes = Object.keys(defaultRenderers);\n\nvar ReactMarkdown = function ReactMarkdown(props) {\n  var src = props.source || props.children || '';\n  var parserOptions = props.parserOptions;\n\n  if (props.allowedTypes && props.disallowedTypes) {\n    throw new Error('Only one of `allowedTypes` and `disallowedTypes` should be defined');\n  }\n\n  var renderers = xtend(defaultRenderers, props.renderers);\n  var plugins = [[parse, parserOptions]].concat(props.plugins || []);\n  var parser = plugins.reduce(applyParserPlugin, unified());\n  var rawAst = parser.parse(src);\n  var renderProps = xtend(props, {\n    renderers: renderers,\n    definitions: getDefinitions(rawAst)\n  });\n  var astPlugins = determineAstPlugins(props);\n  var ast = astPlugins.reduce(function (node, plugin) {\n    return plugin(node, renderProps);\n  }, rawAst);\n  return astToReact(ast, renderProps);\n};\n\nfunction applyParserPlugin(parser, plugin) {\n  return Array.isArray(plugin) ? parser.use.apply(parser, _toConsumableArray(plugin)) : parser.use(plugin);\n}\n\nfunction determineAstPlugins(props) {\n  var plugins = [wrapTableRows, addListMetadata()];\n  var disallowedTypes = props.disallowedTypes;\n\n  if (props.allowedTypes) {\n    disallowedTypes = allTypes.filter(function (type) {\n      return type !== 'root' && props.allowedTypes.indexOf(type) === -1;\n    });\n  }\n\n  var removalMethod = props.unwrapDisallowed ? 'unwrap' : 'remove';\n\n  if (disallowedTypes && disallowedTypes.length > 0) {\n    plugins.push(disallowNode.ofType(disallowedTypes, removalMethod));\n  }\n\n  if (props.allowNode) {\n    plugins.push(disallowNode.ifNotMatch(props.allowNode, removalMethod));\n  }\n\n  var renderHtml = !props.escapeHtml && !props.skipHtml;\n  var hasHtmlParser = (props.astPlugins || []).some(function (item) {\n    var plugin = Array.isArray(item) ? item[0] : item;\n    return plugin.identity === symbols.HtmlParser;\n  });\n\n  if (renderHtml && !hasHtmlParser) {\n    plugins.push(naiveHtml);\n  }\n\n  return props.astPlugins ? plugins.concat(props.astPlugins) : plugins;\n}\n\nReactMarkdown.defaultProps = {\n  renderers: {},\n  escapeHtml: true,\n  skipHtml: false,\n  sourcePos: false,\n  rawSourcePos: false,\n  transformLinkUri: uriTransformer,\n  astPlugins: [],\n  plugins: [],\n  parserOptions: {}\n};\nReactMarkdown.propTypes = {\n  className: PropTypes.string,\n  source: PropTypes.string,\n  children: PropTypes.string,\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  escapeHtml: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  allowNode: PropTypes.func,\n  allowedTypes: PropTypes.arrayOf(PropTypes.oneOf(allTypes)),\n  disallowedTypes: PropTypes.arrayOf(PropTypes.oneOf(allTypes)),\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  astPlugins: PropTypes.arrayOf(PropTypes.func),\n  unwrapDisallowed: PropTypes.bool,\n  renderers: PropTypes.object,\n  plugins: PropTypes.array,\n  parserOptions: PropTypes.object\n};\nReactMarkdown.types = allTypes;\nReactMarkdown.renderers = defaultRenderers;\nReactMarkdown.uriTransformer = uriTransformer;\nmodule.exports = ReactMarkdown;"]},"metadata":{},"sourceType":"script"}