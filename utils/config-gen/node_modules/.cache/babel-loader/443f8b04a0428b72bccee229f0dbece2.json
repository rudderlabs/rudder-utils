{"ast":null,"code":"var _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/destination/destinationSettings/destinationSettings.tsx\";\nimport * as React from 'react';\nimport FormGroup from '../../common/formGroup';\nimport formTemplatesMap from './destinationSettings.json';\nimport { Container } from './styles';\nexport default class DestinationSettings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSettingsChange = settings => {\n      const {\n        onSettingsChange,\n        destName,\n        setRequirementsState\n      } = this.props;\n      const {\n        formTemplate\n      } = this.state;\n      onSettingsChange(settings);\n      const req = Object.entries(settings).map(([k, v]) => {\n        const fields = formTemplate.reduce((acc, curr) => acc.concat(curr.fields), []);\n\n        if (!v) {\n          const field = fields.find(field => field.value === k);\n\n          if (field.required) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n      const reqmtsMet = req.reduce((acc, curr) => acc && curr, true);\n      setRequirementsState(reqmtsMet);\n    };\n\n    this.onChange = settings => {\n      this.setState(prevState => ({\n        settings: { ...prevState.settings,\n          ...settings\n        }\n      }), () => this.onSettingsChange(this.state.settings));\n    };\n\n    this.state = {\n      settings: {},\n      reuqiresmentMet: true,\n      formTemplate: formTemplatesMap[props.destName]\n    };\n  }\n\n  render() {\n    const {\n      destName,\n      initialSettings,\n      disabled\n    } = this.props;\n    const {\n      formTemplate\n    } = this.state;\n    return React.createElement(Container, {\n      className: \"p-t-lg p-b-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, formTemplate.map(group => React.createElement(FormGroup, {\n      key: group.title,\n      title: group.title,\n      fields: group.fields,\n      onStateChange: this.onChange,\n      initialSettings: initialSettings,\n      disabled: !!disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/destination/destinationSettings/destinationSettings.tsx"],"names":["React","FormGroup","formTemplatesMap","Container","DestinationSettings","Component","constructor","props","onSettingsChange","settings","destName","setRequirementsState","formTemplate","state","req","Object","entries","map","k","v","fields","reduce","acc","curr","concat","field","find","value","required","reqmtsMet","onChange","setState","prevState","reuqiresmentMet","render","initialSettings","disabled","group","title"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,SAASC,SAAT,QAA0B,UAA1B;AAUA,eAAe,MAAMC,mBAAN,SAAkCJ,KAAK,CAACK,SAAxC,CAGb;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAmC;AAC5C,UAAMA,KAAN;;AAD4C,SAWvCC,gBAXuC,GAWnBC,QAAD,IAAmB;AAC3C,YAAM;AAAED,QAAAA,gBAAF;AAAoBE,QAAAA,QAApB;AAA8BC,QAAAA;AAA9B,UAAuD,KAAKJ,KAAlE;AACA,YAAM;AAAEK,QAAAA;AAAF,UAAmB,KAAKC,KAA9B;AACAL,MAAAA,gBAAgB,CAACC,QAAD,CAAhB;AACA,YAAMK,GAAG,GAAGC,MAAM,CAACC,OAAP,CAAeP,QAAf,EAAyBQ,GAAzB,CAA6B,CAAC,CAACC,CAAD,EAAIC,CAAJ,CAAD,KAAY;AACnD,cAAMC,MAAM,GAAGR,YAAY,CAACS,MAAb,CACb,CAACC,GAAD,EAAWC,IAAX,KAAyBD,GAAG,CAACE,MAAJ,CAAWD,IAAI,CAACH,MAAhB,CADZ,EAEb,EAFa,CAAf;;AAIA,YAAI,CAACD,CAAL,EAAQ;AACN,gBAAMM,KAAK,GAAGL,MAAM,CAACM,IAAP,CAAaD,KAAD,IAAgBA,KAAK,CAACE,KAAN,KAAgBT,CAA5C,CAAd;;AACA,cAAIO,KAAK,CAACG,QAAV,EAAoB;AAClB,mBAAO,KAAP;AACD;AACF;;AACD,eAAO,IAAP;AACD,OAZW,CAAZ;AAaA,YAAMC,SAAS,GAAGf,GAAG,CAACO,MAAJ,CAAW,CAACC,GAAD,EAAWC,IAAX,KAAyBD,GAAG,IAAIC,IAA3C,EAAiD,IAAjD,CAAlB;AACAZ,MAAAA,oBAAoB,CAACkB,SAAD,CAApB;AACD,KA9B6C;;AAAA,SAgCvCC,QAhCuC,GAgC3BrB,QAAD,IAAmB;AACnC,WAAKsB,QAAL,CACGC,SAAD,KAAqB;AACnBvB,QAAAA,QAAQ,EAAE,EACR,GAAGuB,SAAS,CAACvB,QADL;AAER,aAAGA;AAFK;AADS,OAArB,CADF,EAOE,MAAM,KAAKD,gBAAL,CAAsB,KAAKK,KAAL,CAAWJ,QAAjC,CAPR;AASD,KA1C6C;;AAE5C,SAAKI,KAAL,GAAa;AACXJ,MAAAA,QAAQ,EAAE,EADC;AAEXwB,MAAAA,eAAe,EAAE,IAFN;AAGXrB,MAAAA,YAAY,EAAGV,gBAAD,CACZK,KAAK,CAACG,QADM;AAHH,KAAb;AAOD;;AAmCMwB,EAAAA,MAAP,GAAgB;AACd,UAAM;AAAExB,MAAAA,QAAF;AAAYyB,MAAAA,eAAZ;AAA6BC,MAAAA;AAA7B,QAA0C,KAAK7B,KAArD;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAmB,KAAKC,KAA9B;AACA,WACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,YAAY,CAACK,GAAb,CAAkBoB,KAAD,IAChB,oBAAC,SAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,KADb;AAEE,MAAA,KAAK,EAAED,KAAK,CAACC,KAFf;AAGE,MAAA,MAAM,EAAED,KAAK,CAACjB,MAHhB;AAIE,MAAA,aAAa,EAAE,KAAKU,QAJtB;AAKE,MAAA,eAAe,EAAEK,eALnB;AAME,MAAA,QAAQ,EAAE,CAAC,CAACC,QANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAcD;;AA9DD","sourcesContent":["import * as React from 'react';\n\nimport FormGroup from '../../common/formGroup';\nimport formTemplatesMap from './destinationSettings.json';\nimport { Container } from './styles';\n\nexport interface IDestinationSettingsProps {\n  destName: string;\n  onSettingsChange: any;\n  setRequirementsState: any;\n  disabled?: boolean;\n  initialSettings?: any;\n}\n\nexport default class DestinationSettings extends React.Component<\n  IDestinationSettingsProps,\n  any\n> {\n  constructor(props: IDestinationSettingsProps) {\n    super(props);\n    this.state = {\n      settings: {},\n      reuqiresmentMet: true,\n      formTemplate: (formTemplatesMap as { [key: string]: any })[\n        props.destName\n      ],\n    };\n  }\n\n  public onSettingsChange = (settings: any) => {\n    const { onSettingsChange, destName, setRequirementsState } = this.props;\n    const { formTemplate } = this.state;\n    onSettingsChange(settings);\n    const req = Object.entries(settings).map(([k, v]) => {\n      const fields = formTemplate.reduce(\n        (acc: any, curr: any) => acc.concat(curr.fields),\n        [],\n      );\n      if (!v) {\n        const field = fields.find((field: any) => field.value === k);\n        if (field.required) {\n          return false;\n        }\n      }\n      return true;\n    });\n    const reqmtsMet = req.reduce((acc: any, curr: any) => acc && curr, true);\n    setRequirementsState(reqmtsMet);\n  };\n\n  public onChange = (settings: any) => {\n    this.setState(\n      (prevState: any) => ({\n        settings: {\n          ...prevState.settings,\n          ...settings,\n        },\n      }),\n      () => this.onSettingsChange(this.state.settings),\n    );\n  };\n\n  public render() {\n    const { destName, initialSettings, disabled } = this.props;\n    const { formTemplate } = this.state;\n    return (\n      <Container className=\"p-t-lg p-b-lg\">\n        {formTemplate.map((group: any) => (\n          <FormGroup\n            key={group.title}\n            title={group.title}\n            fields={group.fields}\n            onStateChange={this.onChange}\n            initialSettings={initialSettings}\n            disabled={!!disabled}\n          ></FormGroup>\n        ))}\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}