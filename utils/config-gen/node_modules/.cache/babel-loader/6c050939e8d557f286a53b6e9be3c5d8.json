{"ast":null,"code":"var _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/common/dynamicForm.tsx\";\nimport * as React from 'react';\nimport { Flex } from './misc';\nimport styled from 'styled-components';\nimport { Input } from './input';\nimport Svg from '@svg/index';\nimport { Label } from './typography';\nconst Row = styled(Flex)`\n  width: 100%;\n  justify-content: 'flex-start';\n`;\nconst Column = styled.div`\n  flex: 1;\n  input {\n    width: 100%;\n  }\n`;\nconst ButtonText = styled(Label)`\n  margin-left: 10px;\n  color: ${props => props.color || props.theme.color.primary300};\n`;\nexport default class DynamicForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onConfigChange = (index, value, isLeft) => {\n      const {\n        onChange,\n        field\n      } = this.props;\n      const keyLeft = field.keyLeft;\n      const keyRight = field.keyRight;\n      this.setState(prevState => {\n        const mapping = prevState.mapping.splice(0);\n        const updatedItem = { ...mapping[index],\n          [isLeft ? keyLeft : keyRight]: value\n        };\n        mapping.splice(index, 1, updatedItem);\n        return { ...prevState,\n          mapping\n        };\n      }, () => onChange(field.value, this.state.mapping));\n    };\n\n    this.renderSingleRow = index => {\n      const {\n        field\n      } = this.props;\n      const {\n        mapping\n      } = this.state;\n      const keyLeft = field.keyLeft;\n      const keyRight = field.keyRight;\n      return React.createElement(Row, {\n        className: \"m-t-xs m-b-xs\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Column, {\n        className: \"p-r-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: mapping[index] && mapping[index][keyLeft],\n        placeholder: field.placeholderLeft,\n        onChange: e => this.onConfigChange(index, e.target.value, true),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(Column, {\n        className: \"p-l-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: mapping[index] && mapping[index][keyRight],\n        placeholder: field.placeholderRight,\n        onChange: e => this.onConfigChange(index, e.target.value, false),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })));\n    };\n\n    const _keyLeft = props.field.keyLeft;\n    const _keyRight = props.field.keyRight;\n    this.state = {\n      mapping: [{\n        [_keyLeft]: '',\n        [_keyRight]: ''\n      }],\n      count: 1\n    };\n  }\n\n  componentDidMount() {\n    const {\n      field,\n      onChange\n    } = this.props;\n\n    if (field.default) {\n      this.setState({\n        mapping: field.default,\n        count: field.default.length\n      }, () => onChange(field.value, this.state.mapping));\n    }\n  }\n\n  render() {\n    const {\n      field\n    } = this.props;\n    const {\n      count\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Column, {\n      className: \"p-r-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, field.labelLeft), React.createElement(Column, {\n      className: \"p-l-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, field.labelRight)), [...Array(count)].map((v, index) => this.renderSingleRow(index)), React.createElement(\"a\", {\n      onClick: () => this.setState({\n        count: this.state.count + 1\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"p-t-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Svg, {\n      name: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(ButtonText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \" ADD MORE\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/common/dynamicForm.tsx"],"names":["React","Flex","styled","Input","Svg","Label","Row","Column","div","ButtonText","props","color","theme","primary300","DynamicForm","Component","constructor","onConfigChange","index","value","isLeft","onChange","field","keyLeft","keyRight","setState","prevState","mapping","splice","updatedItem","state","renderSingleRow","placeholderLeft","e","target","placeholderRight","count","componentDidMount","default","length","render","labelLeft","labelRight","Array","map","v"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Flex } from './misc';\nimport styled from 'styled-components';\nimport { Input } from './input';\nimport Svg from '@svg/index';\nimport { Label } from './typography';\n\nconst Row = styled(Flex)`\n  width: 100%;\n  justify-content: 'flex-start';\n`;\n\nconst Column = styled.div`\n  flex: 1;\n  input {\n    width: 100%;\n  }\n`;\nconst ButtonText = styled(Label)`\n  margin-left: 10px;\n  color: ${props => props.color || props.theme.color.primary300};\n`;\n\nexport interface IDynamicFormProps {\n  field: any;\n  onChange: any;\n}\nexport interface IDynamicFormState {\n  mapping: any;\n  count: any;\n}\n\nexport default class DynamicForm extends React.Component<\n  IDynamicFormProps,\n  IDynamicFormState\n> {\n  constructor(props: IDynamicFormProps) {\n    super(props);\n    const keyLeft = props.field.keyLeft;\n    const keyRight = props.field.keyRight;\n    this.state = {\n      mapping: [\n        {\n          [keyLeft]: '',\n          [keyRight]: '',\n        },\n      ],\n      count: 1,\n    };\n  }\n\n  componentDidMount() {\n    const { field, onChange } = this.props;\n    if (field.default) {\n      this.setState(\n        { mapping: field.default, count: field.default.length },\n        () => onChange(field.value, this.state.mapping),\n      );\n    }\n  }\n\n  public onConfigChange = (index: number, value: string, isLeft: boolean) => {\n    const { onChange, field } = this.props;\n    const keyLeft = field.keyLeft;\n    const keyRight = field.keyRight;\n    this.setState(\n      (prevState: any) => {\n        const mapping = prevState.mapping.splice(0);\n        const updatedItem = {\n          ...mapping[index],\n          [isLeft ? keyLeft : keyRight]: value,\n        };\n        mapping.splice(index, 1, updatedItem);\n        return {\n          ...prevState,\n          mapping,\n        };\n      },\n      () => onChange(field.value, this.state.mapping),\n    );\n  };\n\n  public renderSingleRow = (index: number) => {\n    const { field } = this.props;\n    const { mapping } = this.state;\n    const keyLeft = field.keyLeft;\n    const keyRight = field.keyRight;\n    return (\n      <Row className=\"m-t-xs m-b-xs\" key={index}>\n        <Column className=\"p-r-sm\">\n          <Input\n            value={mapping[index] && mapping[index][keyLeft]}\n            placeholder={field.placeholderLeft}\n            onChange={(e: any) =>\n              this.onConfigChange(index, e.target.value, true)\n            }\n          />\n        </Column>\n        <Column className=\"p-l-sm\">\n          <Input\n            value={mapping[index] && mapping[index][keyRight]}\n            placeholder={field.placeholderRight}\n            onChange={(e: any) =>\n              this.onConfigChange(index, e.target.value, false)\n            }\n          />\n        </Column>\n      </Row>\n    );\n  };\n\n  public render() {\n    const { field } = this.props;\n    const { count } = this.state;\n    return (\n      <div>\n        <Row>\n          <Column className=\"p-r-sm\">{field.labelLeft}</Column>\n          <Column className=\"p-l-sm\">{field.labelRight}</Column>\n        </Row>\n        {[...Array(count)].map((v: any, index: number) =>\n          this.renderSingleRow(index),\n        )}\n        <a onClick={() => this.setState({ count: this.state.count + 1 })}>\n          <div className=\"p-t-sm\">\n            <Svg name=\"plus\" />\n            <ButtonText> ADD MORE</ButtonText>\n          </div>\n        </a>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}