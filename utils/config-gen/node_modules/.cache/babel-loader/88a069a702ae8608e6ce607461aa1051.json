{"ast":null,"code":"import \"antd/es/skeleton/style\";\nimport _Skeleton from \"antd/es/skeleton\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/alert/style\";\nimport _Alert from \"antd/es/alert\";\nimport \"antd/es/layout/style\";\nimport _Layout from \"antd/es/layout\";\n\nvar _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/home.tsx\",\n    _dec,\n    _class;\n\nimport Connections from '@components/connections';\nimport DestinationDetails from '@components/destinationDetails';\nimport Destinations from '@components/destinations';\nimport Sidebar from '@components/sidebar';\nimport AddSource from '@components/source/addSource';\nimport ConnectSources from '@components/connectSources';\nimport SourceDetails from '@components/sourceDetails';\nimport Sources from '@components/sources';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from 'react-router-dom';\nimport AddDestination from './destination/addDestination';\nimport styled from 'styled-components';\nexport const StyledNotification = styled.div`\n  position: fixed;\n  width: 45vw;\n  left: 30vw;\n  top: 0px;\n`;\nconst RenderLayout = withRouter(({\n  history\n}) => {\n  // useEffect(\n  //   () =>\n  //     history.listen((location, action) => {\n  //       window.rudderanalytics.page('Page viewed', 'Page viewed', {\n  //         path: location.pathname,\n  //         referrer: '',\n  //         search: '',\n  //         title: '',\n  //         url: window.location.href,\n  //       });\n  //     }),\n  //   [],\n  // );\n  return React.createElement(_Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/home\",\n    exact: true,\n    component: Connections,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Connections,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/sources\",\n    exact: true,\n    component: Sources,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/sources/setup\",\n    exact: true,\n    component: AddSource,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/sources/setup/:id\",\n    exact: true,\n    component: AddSource,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/sources/:id\",\n    exact: true,\n    component: SourceDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/sources/connect/:id\",\n    exact: true,\n    component: ConnectSources,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/sources/:id\",\n    exact: true,\n    component: SourceDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/destinations\",\n    exact: true,\n    component: Destinations,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/destinations/setup\",\n    exact: true,\n    component: AddDestination,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/destinations/:id\",\n    exact: true,\n    component: DestinationDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })));\n});\nlet Home = (_dec = inject('sourcesListStore', 'destinationsListStore', 'connectionsStore', 'sourceDefinitionsListStore', 'destinationDefsListStore', 'messagesStore'), _dec(_class = observer(_class = class Home extends Component {\n  async componentDidMount() {\n    const {\n      sourcesListStore,\n      destinationsListStore,\n      connectionsStore,\n      sourceDefinitionsListStore,\n      destinationDefsListStore\n    } = this.props;\n    sourcesListStore.loadAndSave();\n    destinationsListStore.loadAndSave();\n    connectionsStore.loadAndSave();\n    await Promise.all([sourceDefinitionsListStore.getSourceDefinitions(), destinationDefsListStore.getDestinationDefs()]);\n  }\n\n  isReadyToRender() {\n    return this.props.sourceDefinitionsListStore.sourceDefinitions.length > 0 && this.props.destinationDefsListStore.destinationDefs.length > 0;\n  }\n\n  handleClose(type) {\n    const {\n      messagesStore\n    } = this.props;\n\n    if (type == 'error') {\n      messagesStore.setError(false);\n    }\n\n    if (type === 'success') {\n      messagesStore.setSuccess(false);\n    }\n  }\n\n  getAlertContainer(messagesStore) {\n    if (messagesStore.isError) {\n      return React.createElement(StyledNotification, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(_Alert, {\n        message: messagesStore.infoString,\n        type: \"error\",\n        showIcon: true,\n        closable: true,\n        afterClose: () => this.handleClose('error'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }));\n    }\n\n    if (messagesStore.isSuccess) {\n      return React.createElement(StyledNotification, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(_Alert, {\n        message: messagesStore.infoString,\n        type: \"success\",\n        showIcon: true,\n        closable: true,\n        afterClose: () => this.handleClose('success'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }));\n    }\n\n    return null;\n  }\n\n  renderError(messagesStore) {\n    if (messagesStore.isError) {\n      _message.error(messagesStore.infoString);\n    }\n\n    if (messagesStore.isSuccess) {\n      _message.success(messagesStore.infoString);\n    }\n  }\n\n  renderLayout() {\n    if (this.isReadyToRender()) {\n      return React.createElement(RenderLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(_Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(_Skeleton, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }));\n    }\n  }\n\n  render() {\n    const {\n      messagesStore\n    } = this.props;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(_Layout, {\n      style: {\n        minHeight: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(_Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, this.getAlertContainer(messagesStore), this.renderLayout())));\n  }\n\n}) || _class) || _class);\nexport default withRouter(Home);","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/home.tsx"],"names":["Connections","DestinationDetails","Destinations","Sidebar","AddSource","ConnectSources","SourceDetails","Sources","inject","observer","React","Component","BrowserRouter","Router","Route","Switch","withRouter","AddDestination","styled","StyledNotification","div","RenderLayout","history","Home","componentDidMount","sourcesListStore","destinationsListStore","connectionsStore","sourceDefinitionsListStore","destinationDefsListStore","props","loadAndSave","Promise","all","getSourceDefinitions","getDestinationDefs","isReadyToRender","sourceDefinitions","length","destinationDefs","handleClose","type","messagesStore","setError","setSuccess","getAlertContainer","isError","infoString","isSuccess","renderError","error","success","renderLayout","render","minHeight"],"mappings":"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","sourcesContent":["import Connections from '@components/connections';\nimport DestinationDetails from '@components/destinationDetails';\nimport Destinations from '@components/destinations';\nimport Sidebar from '@components/sidebar';\nimport AddSource from '@components/source/addSource';\nimport ConnectSources from '@components/connectSources';\nimport SourceDetails from '@components/sourceDetails';\nimport Sources from '@components/sources';\nimport { IDestinationDefsListStore } from '@stores/destinationDefsList';\nimport { IDestinationsListStore } from '@stores/destinationsList';\nimport { ISourceDefinitionsListStore } from '@stores/sourceDefinitionsList';\nimport { ISourcesListStore } from '@stores/sourcesList';\nimport { Layout, Skeleton, Card } from 'antd';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component, useEffect } from 'react';\nimport { message, Alert } from 'antd';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  RouteComponentProps,\n  withRouter,\n} from 'react-router-dom';\n\nimport AddDestination from './destination/addDestination';\nimport { IMessageStore, MessagesStore } from '@stores/messages';\nimport styled from 'styled-components';\nimport { Flex } from './common/misc';\nimport { IConnectionsStore } from '../stores/connections';\n\ninterface IHomeProps extends RouteComponentProps {\n  sourcesListStore: ISourcesListStore;\n  destinationsListStore: IDestinationsListStore;\n  connectionsStore: IConnectionsStore;\n  sourceDefinitionsListStore: ISourceDefinitionsListStore;\n  destinationDefsListStore: IDestinationDefsListStore;\n  messagesStore: IMessageStore;\n}\n\ninterface IRouterProps extends RouteComponentProps {\n  messagesStore: MessagesStore;\n}\n\nexport const StyledNotification = styled.div`\n  position: fixed;\n  width: 45vw;\n  left: 30vw;\n  top: 0px;\n`;\n\nconst RenderLayout = withRouter(({ history }) => {\n  // useEffect(\n  //   () =>\n  //     history.listen((location, action) => {\n  //       window.rudderanalytics.page('Page viewed', 'Page viewed', {\n  //         path: location.pathname,\n  //         referrer: '',\n  //         search: '',\n  //         title: '',\n  //         url: window.location.href,\n  //       });\n  //     }),\n  //   [],\n  // );\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/home\" exact={true} component={Connections} />\n        <Route path=\"/\" exact={true} component={Connections} />\n        <Route path=\"/sources\" exact={true} component={Sources} />\n        <Route path=\"/sources/setup\" exact={true} component={AddSource} />\n        <Route path=\"/sources/setup/:id\" exact={true} component={AddSource} />\n        <Route path=\"/sources/:id\" exact={true} component={SourceDetails} />\n        <Route\n          path=\"/sources/connect/:id\"\n          exact={true}\n          component={ConnectSources}\n        />\n        <Route path=\"/sources/:id\" exact={true} component={SourceDetails} />\n        <Route path=\"/destinations\" exact={true} component={Destinations} />\n        <Route\n          path=\"/destinations/setup\"\n          exact={true}\n          component={AddDestination}\n        />\n        <Route\n          path=\"/destinations/:id\"\n          exact={true}\n          component={DestinationDetails}\n        />\n      </Switch>\n    </Layout>\n  );\n});\n\n@inject(\n  'sourcesListStore',\n  'destinationsListStore',\n  'connectionsStore',\n  'sourceDefinitionsListStore',\n  'destinationDefsListStore',\n  'messagesStore',\n)\n@observer\nclass Home extends Component<IHomeProps> {\n  public async componentDidMount() {\n    const {\n      sourcesListStore,\n      destinationsListStore,\n      connectionsStore,\n      sourceDefinitionsListStore,\n      destinationDefsListStore,\n    } = this.props;\n    sourcesListStore.loadAndSave();\n    destinationsListStore.loadAndSave();\n    connectionsStore.loadAndSave();\n    await Promise.all([\n      sourceDefinitionsListStore.getSourceDefinitions(),\n      destinationDefsListStore.getDestinationDefs(),\n    ]);\n  }\n\n  public isReadyToRender() {\n    return (\n      this.props.sourceDefinitionsListStore.sourceDefinitions.length > 0 &&\n      this.props.destinationDefsListStore.destinationDefs.length > 0\n    );\n  }\n\n  handleClose(type: string) {\n    const { messagesStore } = this.props;\n    if (type == 'error') {\n      messagesStore.setError(false);\n    }\n    if (type === 'success') {\n      messagesStore.setSuccess(false);\n    }\n  }\n\n  getAlertContainer(messagesStore: MessagesStore) {\n    if (messagesStore.isError) {\n      return (\n        <StyledNotification>\n          <Alert\n            message={messagesStore.infoString}\n            type=\"error\"\n            showIcon\n            closable\n            afterClose={() => this.handleClose('error')}\n          />\n        </StyledNotification>\n      );\n    }\n    if (messagesStore.isSuccess) {\n      return (\n        <StyledNotification>\n          <Alert\n            message={messagesStore.infoString}\n            type=\"success\"\n            showIcon\n            closable\n            afterClose={() => this.handleClose('success')}\n          />\n        </StyledNotification>\n      );\n    }\n    return null;\n  }\n\n  public renderError(messagesStore: IMessageStore) {\n    if (messagesStore.isError) {\n      message.error(messagesStore.infoString);\n    }\n    if (messagesStore.isSuccess) {\n      message.success(messagesStore.infoString);\n    }\n  }\n  public renderLayout() {\n    if (this.isReadyToRender()) {\n      return <RenderLayout></RenderLayout>;\n    } else {\n      return (\n        <Layout>\n          <Skeleton active />\n        </Layout>\n      );\n    }\n  }\n\n  public render() {\n    const { messagesStore } = this.props;\n    return (\n      <Router>\n        <Layout style={{ minHeight: '100vh' }}>\n          <Sidebar />\n          <Layout>\n            {this.getAlertContainer(messagesStore)}\n            {this.renderLayout()}\n          </Layout>\n        </Layout>\n      </Router>\n    );\n  }\n}\n\nexport default withRouter(Home);\n"]},"metadata":{},"sourceType":"module"}