{"ast":null,"code":"import \"antd/es/popover/style\";\nimport _Popover from \"antd/es/popover\";\nimport \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport _applyDecoratedDescriptor from \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _jsxFileName = \"/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/sourceDetails/sourceView/index.tsx\",\n    _class,\n    _class2,\n    _temp;\n\nimport { Flex } from '@components/common/misc';\nimport { observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport SourceIcon from '@components/icons/sourceIcon';\nimport { SourceDetailsContentText, SourceDetailsSourceId, SourceDetailsTitleText, SourceModalView, SourceNameText, SourceNameTitle, IconColumn } from './styles';\nimport { ButtonSmall } from '@components/common/button';\nimport { withRouter } from 'react-router';\nimport { computed } from 'mobx';\nimport ModalEl from '@components/common/modal';\nimport { Settings } from '@components/destinationDetails/destinationView/styles';\nconst hoverTitle = 'INFO';\nconst hoverBody = React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, \"Source has \", React.createElement(\"b\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, \"active destinations\"), \", \", React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}), \"delete the connections before deleting this source\");\nconst modalTitle = 'CONFIRM DELETION';\n\nlet SourceView = observer(_class = (_class2 = (_temp = class SourceView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = (checked, event) => {\n      this.props.source.toggleEnabled();\n    };\n\n    this.handleClickEvent = () => {\n      alert('Navigate to settings page');\n    };\n\n    this.deleteSource = source => {\n      console.log('source is to be deleted');\n      console.log(source.name);\n      this.setState({\n        isDeleteModalVisible: true\n      });\n    };\n\n    this.renderSourceDetails = () => {\n      const {\n        source\n      } = this.props;\n      const detailsObj = {\n        'SOURCE ID': source.id,\n        'WRITE KEY': source.writeKey\n      };\n      return React.createElement(Flex, {\n        flexDirection: \"row\",\n        spaceBetween: true,\n        className: 'm-t-lg',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, Object.keys(detailsObj).map(item => {\n        return React.createElement(SourceDetailsSourceId, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(SourceDetailsTitleText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, item), React.createElement(SourceDetailsContentText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, detailsObj[item]));\n      }));\n    };\n\n    this.handleModalOk = () => {\n      this.setState({\n        isDeleteModalVisible: false\n      });\n      this.props.deleteSource(this.props.source);\n    };\n\n    this.handleModalCancel = () => {\n      this.setState({\n        isDeleteModalVisible: false\n      });\n    };\n\n    this.state = {\n      isDeleteModalVisible: false\n    };\n  }\n\n  get isSourceConnected() {\n    return this.props.source.destinations.length > 0;\n  }\n\n  getModalText() {\n    return React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '10vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Are you sure to delete source \\xA0\", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.props.source.name), \"?\", ' '));\n  }\n\n  render() {\n    const {\n      source\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(ModalEl, {\n      title: modalTitle,\n      showModal: this.state.isDeleteModalVisible,\n      handleOk: this.handleModalOk,\n      handleCancel: this.handleModalCancel,\n      okText: 'Confirm',\n      element: this.getModalText(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(SourceModalView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Flex, {\n      flexDirection: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Flex, {\n      flexDirection: \"column\",\n      className: 'm-r-sm',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(IconColumn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(SourceIcon, {\n      source: source.sourceDef.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }))), React.createElement(Flex, {\n      flexDirection: \"column\",\n      className: 'm-l-sm',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Flex, {\n      flexDirection: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(SourceNameTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, source.sourceDef.name), React.createElement(Flex, {\n      flexDirection: \"row\",\n      spaceBetween: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Flex, {\n      flexDirection: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(SourceNameText, {\n      className: 'p-r-md',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, source.name), React.createElement(Flex, {\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(_Switch, {\n      defaultChecked: source.enabled,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))), React.createElement(Flex, {\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.renderSourceDetails()))), React.createElement(Settings, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.isSourceConnected ? React.createElement(_Popover, {\n      content: hoverBody,\n      title: hoverTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(ButtonSmall, {\n      disabled: this.isSourceConnected,\n      onClick: () => this.deleteSource(source),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Delete Source\")) : React.createElement(ButtonSmall, {\n      disabled: this.isSourceConnected,\n      onClick: () => this.deleteSource(source),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Delete Source\"))));\n  }\n\n}, _temp), (_applyDecoratedDescriptor(_class2.prototype, \"isSourceConnected\", [computed], Object.getOwnPropertyDescriptor(_class2.prototype, \"isSourceConnected\"), _class2.prototype)), _class2)) || _class;\n\nexport default withRouter(SourceView);","map":{"version":3,"sources":["/Users/chandu/dev/rudderlabs/rudder-server/utils/config-gen/src/components/sourceDetails/sourceView/index.tsx"],"names":["Flex","observer","React","Component","SourceIcon","SourceDetailsContentText","SourceDetailsSourceId","SourceDetailsTitleText","SourceModalView","SourceNameText","SourceNameTitle","IconColumn","ButtonSmall","withRouter","computed","ModalEl","Settings","hoverTitle","hoverBody","modalTitle","SourceView","constructor","props","handleOnChange","checked","event","source","toggleEnabled","handleClickEvent","alert","deleteSource","console","log","name","setState","isDeleteModalVisible","renderSourceDetails","detailsObj","id","writeKey","Object","keys","map","item","handleModalOk","handleModalCancel","state","isSourceConnected","destinations","length","getModalText","display","justifyContent","alignItems","height","render","sourceDef","enabled"],"mappings":"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","sourcesContent":["import { Flex } from '@components/common/misc';\nimport { ISourceStore } from '@stores/source';\nimport { Switch, Popover } from 'antd';\nimport { observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport SourceIcon from '@components/icons/sourceIcon';\n\nimport {\n  SourceDetailsContentText,\n  SourceDetailsSourceId,\n  SourceDetailsTitleText,\n  SourceModalView,\n  SourceNameText,\n  SourceNameTitle,\n  IconColumn,\n} from './styles';\nimport theme from '@css/theme';\nimport { ISourcesListStore } from '@stores/sourcesList';\nimport { ButtonSmall } from '@components/common/button';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { computed } from 'mobx';\nimport ModalEl from '@components/common/modal';\nimport { Settings } from '@components/destinationDetails/destinationView/styles';\n\ninterface IConfiguredSourcesProps extends RouteComponentProps<any> {\n  deleteSource?: (source: ISourceStore) => any;\n  source?: ISourceStore;\n  history: any;\n}\n\ninterface ISourceViewState {\n  isDeleteModalVisible: boolean;\n}\n\nconst hoverTitle = 'INFO';\nconst hoverBody = (\n  <p>\n    Source has <b>active destinations</b>, <br />\n    delete the connections before deleting this source\n  </p>\n);\nconst modalTitle = 'CONFIRM DELETION';\n\n@observer\nclass SourceView extends Component<IConfiguredSourcesProps, ISourceViewState> {\n  constructor(props: IConfiguredSourcesProps) {\n    super(props);\n    this.state = {\n      isDeleteModalVisible: false,\n    };\n  }\n  handleOnChange = (checked: boolean, event: Event) => {\n    this.props.source!.toggleEnabled();\n  };\n\n  handleClickEvent = () => {\n    alert('Navigate to settings page');\n  };\n\n  deleteSource = (source: ISourceStore) => {\n    console.log('source is to be deleted');\n    console.log(source.name);\n    this.setState({ isDeleteModalVisible: true });\n  };\n\n  renderSourceDetails = () => {\n    const { source } = this.props;\n    const detailsObj: any = {\n      'SOURCE ID': source!.id,\n      'WRITE KEY': source!.writeKey,\n    };\n    return (\n      <Flex flexDirection=\"row\" spaceBetween className={'m-t-lg'}>\n        {Object.keys(detailsObj).map(item => {\n          return (\n            <SourceDetailsSourceId>\n              <SourceDetailsTitleText>{item}</SourceDetailsTitleText>\n              <SourceDetailsContentText>\n                {detailsObj[item]}\n              </SourceDetailsContentText>\n            </SourceDetailsSourceId>\n          );\n        })}\n      </Flex>\n    );\n  };\n\n  @computed get isSourceConnected() {\n    return this.props.source!.destinations.length > 0;\n  }\n\n  handleModalOk = () => {\n    this.setState({ isDeleteModalVisible: false });\n    this.props.deleteSource!(this.props.source!);\n  };\n\n  handleModalCancel = () => {\n    this.setState({ isDeleteModalVisible: false });\n  };\n\n  getModalText() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '10vh',\n        }}\n      >\n        <p>\n          Are you sure to delete source &nbsp;\n          <b>{this.props.source!.name}</b>?{' '}\n        </p>\n      </div>\n    );\n  }\n\n  public render() {\n    const { source } = this.props;\n    return (\n      <div>\n        <ModalEl\n          title={modalTitle}\n          showModal={this.state.isDeleteModalVisible}\n          handleOk={this.handleModalOk}\n          handleCancel={this.handleModalCancel}\n          okText={'Confirm'}\n          element={this.getModalText()}\n        />\n        <SourceModalView>\n          <Flex flexDirection=\"row\">\n            <Flex flexDirection=\"column\" className={'m-r-sm'}>\n              <IconColumn>\n                <SourceIcon source={source!.sourceDef.name} />\n              </IconColumn>\n            </Flex>\n\n            <Flex flexDirection=\"column\" className={'m-l-sm'}>\n              <Flex flexDirection=\"column\">\n                <SourceNameTitle>{source!.sourceDef.name}</SourceNameTitle>\n                <Flex flexDirection=\"row\" spaceBetween>\n                  <Flex flexDirection=\"row\">\n                    <SourceNameText className={'p-r-md'}>\n                      {source!.name}\n                    </SourceNameText>\n                    <Flex alignItems=\"center\">\n                      <Switch\n                        defaultChecked={source!.enabled}\n                        onChange={this.handleOnChange}\n                      />\n                    </Flex>\n                  </Flex>\n                  <Flex alignItems=\"center\"></Flex>\n                </Flex>\n              </Flex>\n\n              <div>{this.renderSourceDetails()}</div>\n            </Flex>\n          </Flex>\n\n          <Settings>\n            {this.isSourceConnected ? (\n              <Popover content={hoverBody} title={hoverTitle}>\n                <ButtonSmall\n                  disabled={this.isSourceConnected}\n                  onClick={() => this.deleteSource(source!)}\n                >\n                  Delete Source\n                </ButtonSmall>\n              </Popover>\n            ) : (\n              <ButtonSmall\n                disabled={this.isSourceConnected}\n                onClick={() => this.deleteSource(source!)}\n              >\n                Delete Source\n              </ButtonSmall>\n            )}\n          </Settings>\n\n          {/* <Button onClick={this.handleClickEvent}>\n          <Svg name=\"settings\" />\n          SETTINGS\n          </Button> */}\n        </SourceModalView>\n      </div>\n    );\n  }\n}\n\nexport default withRouter<IConfiguredSourcesProps, any>(SourceView);\n"]},"metadata":{},"sourceType":"module"}